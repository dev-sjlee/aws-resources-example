{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&[lg]t;","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#analytics","title":"Analytics","text":"<ul> <li>Athena</li> <li>EMR</li> <li>Kinesis Data Analytics</li> <li>Kinesis Data Firehose</li> <li>Kinesis Data Streams</li> <li>MSK</li> </ul>"},{"location":"#containers","title":"Containers","text":"<ul> <li>Docker</li> <li>ECR</li> <li>ECS</li> <li>EKS</li> <li>Kubernetes</li> </ul>"},{"location":"#database","title":"Database","text":"<ul> <li>DynamoDB</li> <li>RDS</li> <li>SQL</li> </ul>"},{"location":"#developer-tools","title":"Developer Tools","text":"<ul> <li>Cloud9</li> <li>CodeBuild</li> <li>CodeCommit</li> <li>CodeDeploy</li> </ul>"},{"location":"#general","title":"General","text":"<ul> <li>Install AWS CLI v2</li> <li>Install Python 3.10</li> <li>URL Test with cURL and Wget</li> <li>Get EC2 Metadata</li> <li>Run Scripts using SystemD</li> <li>Using User Data</li> <li>Using Fluent Bit</li> </ul>"},{"location":"#internet-of-things","title":"Internet of Things","text":"<ul> <li>IoT Core</li> </ul>"},{"location":"#management-governance","title":"Management &amp; Governance","text":"<ul> <li>CloudTrail</li> <li>CloudWatch</li> </ul>"},{"location":"#networking-content-delivery","title":"Networking &amp; Content Delivery","text":"<ul> <li>CloudFront</li> <li>ELB</li> <li>VPC</li> <li>VPN</li> </ul>"},{"location":"#security-identity-compliance","title":"Security, Identity &amp; Compliance","text":"<ul> <li>KMS</li> </ul>"},{"location":"#serverless","title":"Serverless","text":"<ul> <li>Install AWS SAM CLI</li> </ul>"},{"location":"#storage","title":"Storage","text":"<ul> <li>EFS</li> <li>S3</li> </ul>"},{"location":"Analytics/Athena/01-query-alb-logs/","title":"Quary ALB Logs","text":""},{"location":"Analytics/Athena/01-query-alb-logs/#create-table","title":"Create Table","text":"<pre><code>CREATE EXTERNAL TABLE IF NOT EXISTS alb_logs (\ntype string,\ntime string,\nelb string,\nclient_ip string,\nclient_port int,\ntarget_ip string,\ntarget_port int,\nrequest_processing_time double,\ntarget_processing_time double,\nresponse_processing_time double,\nelb_status_code int,\ntarget_status_code string,\nreceived_bytes bigint,\nsent_bytes bigint,\nrequest_verb string,\nrequest_url string,\nrequest_proto string,\nuser_agent string,\nssl_cipher string,\nssl_protocol string,\ntarget_group_arn string,\ntrace_id string,\ndomain_name string,\nchosen_cert_arn string,\nmatched_rule_priority string,\nrequest_creation_time string,\nactions_executed string,\nredirect_url string,\nlambda_error_reason string,\ntarget_port_list string,\ntarget_status_code_list string,\nclassification string,\nclassification_reason string\n)\nROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.RegexSerDe'\nWITH SERDEPROPERTIES (\n'serialization.format' = '1',\n'input.regex' = '([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*):([0-9]*) ([^ ]*)[:-]([0-9]*) ([-.0-9]*) ([-.0-9]*) ([-.0-9]*) (|[-0-9]*) (-|[-0-9]*) ([-0-9]*) ([-0-9]*) \\\"([^ ]*) (.*) (- |[^ ]*)\\\" \\\"([^\\\"]*)\\\" ([A-Z0-9-_]+) ([A-Za-z0-9.-]*) ([^ ]*) \\\"([^\\\"]*)\\\" \\\"([^\\\"]*)\\\" \\\"([^\\\"]*)\\\" ([-.0-9]*) ([^ ]*) \\\"([^\\\"]*)\\\" \\\"([^\\\"]*)\\\" \\\"([^ ]*)\\\" \\\"([^\\s]+?)\\\" \\\"([^\\s]+)\\\" \\\"([^ ]*)\\\" \\\"([^ ]*)\\\"')\nLOCATION 's3://your-alb-logs-directory/AWSLogs/&lt;ACCOUNT-ID&gt;/elasticloadbalancing/&lt;REGION&gt;/';\n</code></pre> <p>AWS Documentation</p>"},{"location":"Analytics/Athena/02-query-cf-logs/","title":"Quary CloudFront Logs","text":""},{"location":"Analytics/Athena/02-query-cf-logs/#create-table","title":"Create Table","text":"<pre><code>CREATE EXTERNAL TABLE IF NOT EXISTS default.cloudfront_logs (\n`date` DATE,\ntime STRING,\nlocation STRING,\nbytes BIGINT,\nrequest_ip STRING,\nmethod STRING,\nhost STRING,\nuri STRING,\nstatus INT,\nreferrer STRING,\nuser_agent STRING,\nquery_string STRING,\ncookie STRING,\nresult_type STRING,\nrequest_id STRING,\nhost_header STRING,\nrequest_protocol STRING,\nrequest_bytes BIGINT,\ntime_taken FLOAT,\nxforwarded_for STRING,\nssl_protocol STRING,\nssl_cipher STRING,\nresponse_result_type STRING,\nhttp_version STRING,\nfle_status STRING,\nfle_encrypted_fields INT,\nc_port INT,\ntime_to_first_byte FLOAT,\nx_edge_detailed_result_type STRING,\nsc_content_type STRING,\nsc_content_len BIGINT,\nsc_range_start BIGINT,\nsc_range_end BIGINT\n)\nROW FORMAT DELIMITED FIELDS TERMINATED BY '\\t'\nLOCATION 's3://CloudFront_bucket_name/'\nTBLPROPERTIES ( 'skip.header.line.count'='2' )\n</code></pre> <p>AWS Documentation</p>"},{"location":"Analytics/Athena/03-query-cloudtrail-logs/","title":"Quary CloudTrail Logs","text":""},{"location":"Analytics/Athena/03-query-cloudtrail-logs/#create-table","title":"Create Table","text":"<pre><code>CREATE EXTERNAL TABLE cloudtrail_logs (\neventVersion STRING,\nuserIdentity STRUCT&lt;\ntype: STRING,\nprincipalId: STRING,\narn: STRING,\naccountId: STRING,\ninvokedBy: STRING,\naccessKeyId: STRING,\nuserName: STRING,\nsessionContext: STRUCT&lt;\nattributes: STRUCT&lt;\nmfaAuthenticated: STRING,\ncreationDate: STRING&gt;,\nsessionIssuer: STRUCT&lt;\ntype: STRING,\nprincipalId: STRING,\narn: STRING,\naccountId: STRING,\nusername: STRING&gt;,\nec2RoleDelivery: STRING,\nwebIdFederationData: MAP&lt;STRING,STRING&gt;&gt;&gt;,\neventTime STRING,\neventSource STRING,\neventName STRING,\nawsRegion STRING,\nsourceIpAddress STRING,\nuserAgent STRING,\nerrorCode STRING,\nerrorMessage STRING,\nrequestParameters STRING,\nresponseElements STRING,\nadditionalEventData STRING,\nrequestId STRING,\neventId STRING,\nresources ARRAY&lt;STRUCT&lt;\narn: STRING,\naccountId: STRING,\ntype: STRING&gt;&gt;,\neventType STRING,\napiVersion STRING,\nreadOnly STRING,\nrecipientAccountId STRING,\nserviceEventDetails STRING,\nsharedEventID STRING,\nvpcEndpointId STRING,\ntlsDetails STRUCT&lt;\ntlsVersion: STRING,\ncipherSuite: STRING,\nclientProvidedHostHeader: STRING&gt;\n)\nROW FORMAT SERDE 'org.apache.hive.hcatalog.data.JsonSerDe'\nSTORED AS INPUTFORMAT 'com.amazon.emr.cloudtrail.CloudTrailInputFormat'\nOUTPUTFORMAT 'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'\nLOCATION 's3://CloudTrail_bucket_name/AWSLogs/Account_ID/CloudTrail/'\nTBLPROPERTIES ('classification'='cloudtrail');\n</code></pre> <p>AWS Documentation</p>"},{"location":"Analytics/Athena/04-create-table/","title":"Create Table in Athena","text":""},{"location":"Analytics/Athena/04-create-table/#json","title":"JSON","text":"<pre><code>CREATE EXTERNAL TABLE IF NOT EXISTS default.sensor (\nsensorId int,\ntemperature int\n)\nROW FORMAT SERDE 'org.openx.data.jsonserde.JsonSerDe'\nLOCATION 's3://sensor-datas/data/';\n</code></pre>"},{"location":"Analytics/Athena/04-create-table/#parquet","title":"Parquet","text":"<pre><code>CREATE EXTERNAL TABLE IF NOT EXISTS default.sensor (\nsensorId int,\ntemperature int\n)\nSTORED AS parquet\nLOCATION 's3://sensor-datas/data/'\nTBLPROPERTIES (\"parquet.compress\" = \"snappy\");\n</code></pre>"},{"location":"Analytics/Athena/04-create-table/#csv","title":"CSV","text":"<pre><code>CREATE EXTERNAL TABLE IF NOT EXISTS default.sensor (\nsensorId int,\ntemperature int\n)\nROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.OpenCSVSerde'\nLOCATION 's3://sensor-datas/data/'\n</code></pre> <p>Tip</p> <p>If you want to ignore csv's header, use this option after <code>LOCATION</code> syntax.</p> <pre><code>TBLPROPERTIES (\"skip.header.line.count\" = \"1\");\n</code></pre>"},{"location":"Analytics/Athena/04-create-table/#partitioning","title":"Partitioning","text":"<pre><code>CREATE EXTERNAL TABLE IF NOT EXISTS default.sensor (\nsensorId int,\ntemperature int\n)\nPARTITIONED BY (`year` int, `month` int, `day` int, `hour` int)\nSTORED AS parquet\nLOCATION 's3://sensor-datas/data/'\nTBLPROPERTIES (\"parquet.compress\" = \"snappy\");\n</code></pre>"},{"location":"Analytics/Athena/04-create-table/#compression","title":"Compression","text":"<pre><code>CREATE EXTERNAL TABLE IF NOT EXISTS default.sensor (\nsensorId int,\ntemperature int\n)\nROW FORMAT SERDE 'org.openx.data.jsonserde.JsonSerDe'\nLOCATION 's3://sensor-datas/data/'\nTBLPROPERTIES (\"write.compression\" = \"gzip \");\n</code></pre>"},{"location":"Analytics/EMR/01-emr-on-eks/","title":"EMR on EKS","text":""},{"location":"Analytics/EMR/01-emr-on-eks/#create-a-new-namespace-for-emr-job","title":"Create a New Namespace for EMR Job","text":"Linux Windows <pre><code>NAMESPACE_NAME=\"&lt;namespace name&gt;\"\nkubectl create ns $NAMESPACE_NAME\n</code></pre> <pre><code>$NAMESPACE_NAME=\"&lt;namespace name&gt;\"\nkubectl create ns $NAMESPACE_NAME\n</code></pre>"},{"location":"Analytics/EMR/01-emr-on-eks/#create-iam-identity-mapping","title":"Create IAM Identity Mapping","text":"Linux Windows <pre><code>CLUSTER_NAME=\"&lt;cluster name&gt;\"\nNAMESPACE_NAME=\"&lt;namespace name&gt;\"\nREGION=\"&lt;region code&gt;\"\neksctl create iamidentitymapping \\\n--cluster $CLUSTER_NAME \\\n--namespace $NAMESPACE_NAME \\\n--service-name \"emr-containers\" \\\n--region $REGION\n</code></pre> <pre><code>$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$NAMESPACE_NAME=\"&lt;namespace name&gt;\"\n$REGION=\"&lt;region code&gt;\"\neksctl create iamidentitymapping `\n--cluster $CLUSTER_NAME `\n--namespace $NAMESPACE_NAME `\n--service-name \"emr-containers\" `\n--region $REGION\n</code></pre>"},{"location":"Analytics/EMR/01-emr-on-eks/#create-emr-virtual-cluster-and-job-role","title":"Create EMR Virtual Cluster and Job Role","text":"Linux Windows <pre><code>STACK_NAME=\"&lt;stack name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region code&gt;\"\n### EMR Configuration - General\nVirtualClusterName=\"\"   # [REQUIRED] The name of EMR virtual cluster.\n### EMR Configuration - EKS\nEksClusterName=\"\"       # [REQUIRED] The name of EKS cluster.\nNamespaceName=\"\"        # [REQUIRED] The name of Kubernetes' namespace which you want to use EMR.\n### EMR Configuration - Job Role\nRoleName=\"\"             # [REQUIRED] The name of job role.\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/emr/emr-container.yaml\n\naws cloudformation deploy \\\n--template-file ./emr-container.yaml \\\n--parameter-overrides \\\nProjectName=$PROJECT_NAME \\\nVirtualClusterName=$VirtualClusterName \\\nEksClusterName=$EksClusterName \\\nNamespaceName=$NamespaceName \\\nRoleName=$RoleName \\\n--tags project=$PROJECT_NAME \\\n--disable-rollback \\\n--region $REGION\n</code></pre> <pre><code>$STACK_NAME=\"&lt;stack name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region code&gt;\"\n### EMR Configuration - General\n$VirtualClusterName=\"\"   # [REQUIRED] The name of EMR virtual cluster.\n### EMR Configuration - EKS\n$EksClusterName=\"\"       # [REQUIRED] The name of EKS cluster.\n$NamespaceName=\"\"        # [REQUIRED] The name of Kubernetes' namespace which you want to use EMR.\n### EMR Configuration - Job Role\n$RoleName=\"\"             # [REQUIRED] The name of job role.\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/emr/emr-container.yaml\naws cloudformation deploy `\n--template-file ./emr-container.yaml `\n--parameter-overrides `\nProjectName=$PROJECT_NAME `\nVirtualClusterName=$VirtualClusterName `\nEksClusterName=$EksClusterName `\nNamespaceName=$NamespaceName `\nRoleName=$RoleName `\n--tags project=$PROJECT_NAME `\n--disable-rollback `\n--region $REGION\n</code></pre> <p>Tip</p> <p>If you want to access S3 in EMR job, you should add <code>AmazonS3FullAccess</code> or other any policies to EMR job role.</p>"},{"location":"Analytics/EMR/01-emr-on-eks/#update-job-role-trust-policy","title":"Update Job Role Trust Policy","text":"Linux Windows <pre><code>CLUSTER_NAME=\"&lt;cluster name&gt;\"\nNAMESPACE_NAME=\"&lt;namespace name&gt;\"\nROLE_NAME=\"&lt;emr job role name&gt;\"\nREGION=\"&lt;region code&gt;\"\naws emr-containers update-role-trust-policy \\\n--cluster-name $CLUSTER_NAME \\\n--namespace $NAMESPACE_NAME \\\n--role-name $ROLE_NAME \\\n--region $REGION\n</code></pre> <pre><code>$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$NAMESPACE_NAME=\"&lt;namespace name&gt;\"\n$ROLE_NAME=\"&lt;emr job role name&gt;\"\n$REGION=\"&lt;region code&gt;\"\naws emr-containers update-role-trust-policy `\n--cluster-name $CLUSTER_NAME `\n--namespace $NAMESPACE_NAME `\n--role-name $ROLE_NAME `\n--region $REGION\n</code></pre>"},{"location":"Analytics/EMR/01-emr-on-eks/#start-emr-job","title":"Start EMR Job","text":"start-job-run.json<pre><code>{\n\"name\": \"&lt;job name&gt;\",\n\"virtualClusterId\": \"&lt;emr virtual cluster id&gt;\",\n\"executionRoleArn\": \"&lt;emr job role arn&gt;\",\n\"releaseLabel\": \"emr-6.3.0-latest\",\n\"jobDriver\": {\n\"sparkSubmitJobDriver\": {\n\"entryPoint\": \"s3://aws-data-analytics-workshops/emr-eks-workshop/scripts/pi.py\",\n\"sparkSubmitParameters\": \"--conf spark.executor.instances=2 --conf spark.executor.memory=1G --conf spark.executor.cores=1 --conf spark.driver.cores=1\"\n}\n},\n\"configurationOverrides\": {\n\"applicationConfiguration\": [\n{\n\"classification\": \"spark-defaults\",\n\"properties\": {\n\"spark.kubernetes.driver.podTemplateFile\": \"s3://test-bucket/pod.yaml\",\n\"spark.kubernetes.executor.podTemplateFile\": \"s3://test-bucket/pod.yaml\",\n\"spark.ui.prometheus.enabled\": \"true\",\n\"spark.executor.processTreeMetrics.enabled\":\"true\",\n\"spark.kubernetes.driver.annotation.prometheus.io/scrape\":\"true\",\n\"spark.kubernetes.driver.annotation.prometheus.io/path\":\"/metrics/executors/prometheus/\",\n\"spark.kubernetes.driver.annotation.prometheus.io/port\":\"4040\",\n\"spark.kubernetes.driver.service.annotation.prometheus.io/scrape\":\"true\",\n\"spark.kubernetes.driver.service.annotation.prometheus.io/path\":\"/metrics/driver/prometheus/\",\n\"spark.kubernetes.driver.service.annotation.prometheus.io/port\":\"4040\",\n\"spark.metrics.conf.*.sink.prometheusServlet.class\":\"org.apache.spark.metrics.sink.PrometheusServlet\",\n\"spark.metrics.conf.*.sink.prometheusServlet.path\":\"/metrics/driver/prometheus/\",\n\"spark.metrics.conf.master.sink.prometheusServlet.path\":\"/metrics/master/prometheus/\",\n\"spark.metrics.conf.applications.sink.prometheusServlet.path\":\"/metrics/applications/prometheus/\"\n}\n}\n],\n\"monitoringConfiguration\": {\n\"persistentAppUI\": \"ENABLED\",\n\"cloudWatchMonitoringConfiguration\": {\n\"logGroupName\": \"/emr-container/jobs\",\n\"logStreamNamePrefix\": \"emr-eks-workshop\"\n}\n}\n}\n}\n</code></pre> pod.yaml<pre><code>apiVersion: v1\nkind: Pod\nspec:\nnodeSelector:\ntype: spark\ntolerations:\n- key: \"type\"        # taint key\nvalue: \"spark\"     # taint value\noperator: \"Equal\"\neffect: \"NoSchedule\"\n</code></pre> <p>Warning</p> <p>You can't define tolerations to job's controller pod. (Driver and executor only can define tolerations.)</p>  Linux Windows <pre><code>REGION=\"&lt;region code&gt;\"\naws emr-containers start-job-run \\\n--cli-input-json file://start-job-run.json \\\n--region $REGION\n</code></pre> <pre><code>$REGION=\"&lt;region code&gt;\"\naws emr-containers start-job-run `\n--cli-input-json file://start-job-run.json `\n--region $REGION\n</code></pre> <p>AWS Documentation</p>"},{"location":"Analytics/EMR/01-emr-on-eks/#sample-pyspark-script","title":"Sample PySpark Script","text":"pyspark-app.py<pre><code>import sys\nfrom pyspark.sql import SparkSession\nif __name__ == '__main__':\n\"\"\"\n        Usage: parquet [year] [month] [day] [hour] [minute]\n    \"\"\"\nyear = sys.argv[1]\nmonth = sys.argv[2]\nday = sys.argv[3]\nhour = sys.argv[4]\nminute = sys.argv[5]\npath_input = f's3://test-bucket/parsed/json/{year}/{month}/{day}/{hour}/{minute}/*'\npath_output = f's3://test-bucket/parsed/parquet/{year}/{month}/{day}/{hour}/{minute}/'\nspark = SparkSession \\\n        .builder \\\n        .appName('parquet') \\\n        .getOrCreate()\nspark \\\n        .read \\\n        .json(path_input) \\\n        .repartition(10) \\\n        .write \\\n        .option('compression', 'snappy') \\\n        .mode('overwrite') \\\n        .parquet(path_output)\nspark.sparkContext.stop()\n</code></pre>"},{"location":"Analytics/Kinesis%20Data%20Analytics/01-sample-flink-query/","title":"Sample Flink Query","text":""},{"location":"Analytics/Kinesis%20Data%20Analytics/01-sample-flink-query/#create-table-from-kinesis-data-streams","title":"Create table from Kinesis Data Streams","text":"<pre><code>%flink.bsql\ncreate table &lt;table name&gt; (\n`timestamp` TIMESTAMP(3),\n`id` VARCHAR,\n`code` INTEGER,\nWATERMARK FOR `timestamp` AS `timestamp` - INTERVAL '10' SECOND\n) WITH (\n'connector' = 'kinesis',\n'stream' = '&lt;stream name&gt;',\n'aws.region' = '&lt;region code&gt;',\n'scan.stream.initpos' = 'LATEST',\n'format' = 'json',\n'json.timestamp-format.standard' = 'ISO-8601'\n);\n</code></pre>"},{"location":"Analytics/Kinesis%20Data%20Analytics/01-sample-flink-query/#create-table-from-kafka","title":"Create table from Kafka","text":"<pre><code>%flink.bsql\ncreate table sensor (\n`timestamp` TIMESTAMP(3),\n`id` VARCHAR,\n`code` INTEGER,\nWATERMARK FOR `timestamp` AS `timestamp` - INTERVAL '10' SECOND\n) WITH (\n'connector' = 'kafka',\n'topic' = 'sensor',\n'properties.bootstrap.servers' = '&lt;host:port&gt;,&lt;host:port&gt;',\n'properties.security.protocol' = 'SSL',\n'format' = 'json',\n'json.timestamp-format.standard' = 'ISO-8601',\n'scan.startup.mode' = 'latest-offset'\n);\n</code></pre>"},{"location":"Analytics/Kinesis%20Data%20Analytics/01-sample-flink-query/#get-datas-using-sliding-window","title":"Get datas using sliding window","text":"<pre><code>%flink.ssql(type=update)\nSELECT\n`window_start`, `window_end`, `id`, COUNT(*) AS `id`, COUNT(CASE WHEN `code` &gt;= 400 AND `code` &lt; 500 THEN 1 END) AS count_4xx, COUNT(CASE WHEN `code` &gt;= 500 THEN 1 END) AS count_5xx\nFROM TABLE (\nHOP (TABLE `&lt;table name&gt;`, DESCRIPTOR (`timestamp`), INTERVAL '1' MINUTES, INTERVAL '3' MINUTES\n)\n)\nGROUP BY\nwindow_start, window_end;\n</code></pre>"},{"location":"Analytics/Kinesis%20Data%20Analytics/01-sample-flink-query/#change-timezone-in-sliding-window","title":"Change timezone in sliding window","text":"<pre><code>%flink.ssql(type=update)\nSELECT\nCONVERT_TZ(DATE_FORMAT(`window_start`, 'yyyy-MM-dd HH:mm:00'), 'UTC', 'Europe/Amsterdam') AS window_start,\nCONVERT_TZ(DATE_FORMAT(`window_end`, 'yyyy-MM-dd HH:mm:00'), 'UTC', 'Europe/Amsterdam') AS window_end,\nFROM TABLE (\nHOP (TABLE `&lt;table name&gt;`, DESCRIPTOR (`timestamp`), INTERVAL '1' MINUTES, INTERVAL '3' MINUTES\n)\n)\nGROUP BY\nwindow_start, window_end;\n</code></pre>"},{"location":"Analytics/Kinesis%20Data%20Firehose/01-transform-records-using-lambda/","title":"Transform Records Using Lambda","text":""},{"location":"Analytics/Kinesis%20Data%20Firehose/01-transform-records-using-lambda/#example-input-data","title":"Example input data","text":"<pre><code>{\n\"invocationId\": \"invocationIdExample\",\n\"deliveryStreamArn\": \"arn:aws:kinesis:EXAMPLE\",\n\"region\": \"us-east-1\",\n\"records\": [\n{\n\"recordId\": \"49546986683135544286507457936321625675700192471156785154\",\n\"approximateArrivalTimestamp\": 1495072949453,\n\"data\": \"eyAgICAidXVpZCI6ICIwZTkyZWI5Ni1iMjU5LTQwZjAtOTEyMi03N2JjZjBmYzAyYjciLCAgICAiZGV2aWNlX3RzIjogIjIwMjMtMDQtMTEgMDc6MzM6MDMuNDY4IiwgICAgImRldmljZV9pZCI6IDQsICAgICJkZXZpY2VfdGVtcCI6IDQwLCAgICAidHJhY2tfaWQiOiAxNCwgICAgICAiYWN0aXZpdHlfdHlwZSI6ICJXYWxraW5nIn0=\"\n},\n{\n\"recordId\": \"49546986683135544286507457936321625675700192471156785155\",\n\"approximateArrivalTimestamp\": 1495072949453,\n\"data\": \"eyAgICAidXVpZCI6ICJlZjcxNjRmOS0xOTY0LTQ4YzQtYmUwZi01ZDg3NDk2ZmE1MmQiLCAgICAiZGV2aWNlX3RzIjogIjIwMjMtMDQtMTEgMDc6MzM6MDMuNDY4IiwgICAgImRldmljZV9pZCI6IDQzLCAgICAiZGV2aWNlX3RlbXAiOiAyOCwgICAgInRyYWNrX2lkIjogNCwgICAgICAiYWN0aXZpdHlfdHlwZSI6ICJXb3JraW5nIn0=\"\n},\n{\n\"recordId\": \"49546986683135544286507457936321625675700192471156785156\",\n\"approximateArrivalTimestamp\": 1495072949453,\n\"data\": \"eyAgICAidXVpZCI6ICIyM2RhM2EzNS04ZGJjLTRlODctOTBlYy01MzJmZmY2NTEwMWYiLCAgICAiZGV2aWNlX3RzIjogIjIwMjMtMDQtMTEgMDc6MzM6MDMuNDY4IiwgICAgImRldmljZV9pZCI6IDQwLCAgICAiZGV2aWNlX3RlbXAiOiAyOCwgICAgInRyYWNrX2lkIjogMjgsICAgICAgImFjdGl2aXR5X3R5cGUiOiAiU2l0dGluZyJ9\"\n},\n{\n\"recordId\": \"49546986683135544286507457936321625675700192471156785157\",\n\"approximateArrivalTimestamp\": 1495072949453,\n\"data\": \"eyAgICAidXVpZCI6ICI3ZDM5OGNhNS00NjhiLTQ4Y2UtYmE4NC05Mzc0ZmJjMTUwZTUiLCAgICAiZGV2aWNlX3RzIjogIjIwMjMtMDQtMTEgMDc6MzM6MDMuNDY5IiwgICAgImRldmljZV9pZCI6IDQ3LCAgICAiZGV2aWNlX3RlbXAiOiAzMiwgICAgInRyYWNrX2lkIjogMjksICAgICAgImFjdGl2aXR5X3R5cGUiOiAiV29ya2luZyJ9\"\n},\n{\n\"recordId\": \"49546986683135544286507457936321625675700192471156785158\",\n\"approximateArrivalTimestamp\": 1495072949453,\n\"data\": \"eyAgICAidXVpZCI6ICJiYzdjNjhmNC01MjBkLTRjYWQtOTcyNC0wMTZkY2Q2ZjQ5YzEiLCAgICAiZGV2aWNlX3RzIjogIjIwMjMtMDQtMTEgMDc6MzM6MDMuNDY5IiwgICAgImRldmljZV9pZCI6IDM1LCAgICAiZGV2aWNlX3RlbXAiOiAzMiwgICAgInRyYWNrX2lkIjogMzAsICAgICAgImFjdGl2aXR5X3R5cGUiOiAiV2Fsa2luZyJ9\"\n}\n]\n}\n</code></pre>"},{"location":"Analytics/Kinesis%20Data%20Firehose/01-transform-records-using-lambda/#example-output-data","title":"Example output data","text":"<pre><code>{\n\"records\": [\n{\n\"recordId\": \"49546986683135544286507457936321625675700192471156785154\",\n\"result\": \"Ok\",\n\"data\": \"eyJ1dWlkIjogIjBlOTJlYjk2LWIyNTktNDBmMC05MTIyLTc3YmNmMGZjMDJiNyIsICJkZXZpY2VfdHMiOiAiMjAyMy0wNC0xMSAwOTozMzowMy40NjgwMDArMDI6MDAiLCAiZGV2aWNlX2lkIjogNCwgImRldmljZV90ZW1wIjogNDAsICJ0cmFja19pZCI6IDE0LCAiYWN0aXZpdHlfdHlwZSI6ICJXYWxraW5nIn0=\"\n},\n{\n\"recordId\": \"49546986683135544286507457936321625675700192471156785155\",\n\"result\": \"Ok\",\n\"data\": \"eyJ1dWlkIjogImVmNzE2NGY5LTE5NjQtNDhjNC1iZTBmLTVkODc0OTZmYTUyZCIsICJkZXZpY2VfdHMiOiAiMjAyMy0wNC0xMSAwOTozMzowMy40NjgwMDArMDI6MDAiLCAiZGV2aWNlX2lkIjogNDMsICJkZXZpY2VfdGVtcCI6IDI4LCAidHJhY2tfaWQiOiA0LCAiYWN0aXZpdHlfdHlwZSI6ICJXb3JraW5nIn0=\"\n},\n{\n\"recordId\": \"49546986683135544286507457936321625675700192471156785156\",\n\"result\": \"Ok\",\n\"data\": \"eyJ1dWlkIjogIjIzZGEzYTM1LThkYmMtNGU4Ny05MGVjLTUzMmZmZjY1MTAxZiIsICJkZXZpY2VfdHMiOiAiMjAyMy0wNC0xMSAwOTozMzowMy40NjgwMDArMDI6MDAiLCAiZGV2aWNlX2lkIjogNDAsICJkZXZpY2VfdGVtcCI6IDI4LCAidHJhY2tfaWQiOiAyOCwgImFjdGl2aXR5X3R5cGUiOiAiU2l0dGluZyJ9\"\n},\n{\n\"recordId\": \"49546986683135544286507457936321625675700192471156785157\",\n\"result\": \"Ok\",\n\"data\": \"eyJ1dWlkIjogIjdkMzk4Y2E1LTQ2OGItNDhjZS1iYTg0LTkzNzRmYmMxNTBlNSIsICJkZXZpY2VfdHMiOiAiMjAyMy0wNC0xMSAwOTozMzowMy40NjkwMDArMDI6MDAiLCAiZGV2aWNlX2lkIjogNDcsICJkZXZpY2VfdGVtcCI6IDMyLCAidHJhY2tfaWQiOiAyOSwgImFjdGl2aXR5X3R5cGUiOiAiV29ya2luZyJ9\"\n},\n{\n\"recordId\": \"49546986683135544286507457936321625675700192471156785158\",\n\"result\": \"Ok\",\n\"data\": \"eyJ1dWlkIjogImJjN2M2OGY0LTUyMGQtNGNhZC05NzI0LTAxNmRjZDZmNDljMSIsICJkZXZpY2VfdHMiOiAiMjAyMy0wNC0xMSAwOTozMzowMy40NjkwMDArMDI6MDAiLCAiZGV2aWNlX2lkIjogMzUsICJkZXZpY2VfdGVtcCI6IDMyLCAidHJhY2tfaWQiOiAzMCwgImFjdGl2aXR5X3R5cGUiOiAiV2Fsa2luZyJ9\"\n}\n]\n}\n</code></pre> <p>The possible result values are:</p> <ul> <li><code>Ok</code></li> <li><code>Dropped</code></li> <li><code>ProcessingFailed</code></li> </ul>"},{"location":"Analytics/Kinesis%20Data%20Firehose/01-transform-records-using-lambda/#example-function-transform-timezone","title":"Example function (transform timezone)","text":"lambda_function.py<pre><code>import json\nimport base64\nfrom datetime import datetime, timezone, timedelta\nUTC = timezone(timedelta(hours=0))\nCEST = timezone(timedelta(hours=2))\ndef lambda_handler(event, context):\n# print(json.dumps(event, default=str))\nrecords = event['records']\nnew_records = []\nfor record in records:\ndata = json.loads(base64.b64decode(record['data']).decode())\ndata['device_ts'] = datetime.strptime(data['device_ts'], '%Y-%m-%d %H:%M:%S.%f').replace(tzinfo=UTC).astimezone(tz=CEST)\nnew_records.append({\n'recordId': record['recordId'],\n'result': 'Ok',\n'data': base64.b64encode((json.dumps(data, default=str) + '\\n').encode())   # add new line\n})\n# print(new_records)\nreturn {\n'records': new_records\n}\n</code></pre> <p>Note</p> <p>If you want to use dynamic partitioning, you should define partition key like this.</p> <pre><code>new_records.append({\n'recordId': record['recordId'],\n'result': 'Ok',\n'data': base64.b64encode((json.dumps(data, default=str) + '\\n').encode()),\n'metadata': {\n'partitionKeys': {\n'year': str(data.year)\n}\n}\n})\n</code></pre> <p></p> <p>This function transform datetime from UTC to CEST.</p>"},{"location":"Analytics/Kinesis%20Data%20Firehose/01-transform-records-using-lambda/#example-function-transform-gzip-to-json","title":"Example function (transform GZIP to JSON)","text":"lambda_function.py<pre><code>import json\nimport base64\nimport gzip\ndef lambda_handler(event, context):\n# print(json.dumps(event, default=str))\nrecords = event['records']\nnew_records = []\nfor record in records:\ndata = record['data'] # (1)\ndecompressed = gzip.decompress(base64.b64decode(data))  # (2)\nresult = json.dumps(json.loads(decompressed.decode()))  # (3)\n# print(result)\nnew_records.append({\n'recordId': record['recordId'],\n'result': 'Ok',\n'data': base64.b64encode(result.encode())\n})\n# print(new_records)\nreturn {\n'records': new_records\n}\n</code></pre> <ol> <li>H4sIAAAAAAAAA1WNyw6DIBBFf8Ww7jQDDI/yI10aC9gQ09Yompim/17ElXd5ck/Otyljy5ICcw3TD0HCeIQejQTqYwAbUAOXgltPdNPKs0tVQlyTj22ed0+gkIAKkBrkDpWTdFVWnK81Ic1Zj6+xUMKD5qnzw3HkvKICO5/TmvLW5m2Me+3+mYb0frLfH7rzCPC9AAAA</li> <li>b'{ \"uuid\": \"6b2427c0-f073-4fed-8d06-13218c44965c\", \"device_ts\": \"2023-05-04 01:05:34.582\", \"device_id\": 37, \"device_temp\": 40, \"track_id\": 11, \"activity_type\": \"Working\"}'</li> <li>{\"uuid\": \"6b2427c0-f073-4fed-8d06-13218c44965c\", \"device_ts\": \"2023-05-04 01:05:34.582\", \"device_id\": 37, \"device_temp\": 40, \"track_id\": 11, \"activity_type\": \"Working\"}</li> </ol>"},{"location":"Analytics/Kinesis%20Data%20Firehose/02-delivery-to-opensearch-serverless/","title":"Delivery to OpenSearch Serverless","text":""},{"location":"Analytics/Kinesis%20Data%20Firehose/02-delivery-to-opensearch-serverless/#create-opensearch-serverless-collection","title":"Create OpenSearch Serverless Collection","text":""},{"location":"Analytics/Kinesis%20Data%20Firehose/02-delivery-to-opensearch-serverless/#create-openseach-serverless-vpc-endpoint","title":"Create OpenSeach Serverless VPC Endpoint","text":"<p>Choose private or protected subnet and collection's security group.</p>"},{"location":"Analytics/Kinesis%20Data%20Firehose/02-delivery-to-opensearch-serverless/#create-opensearch-serverless-collection_1","title":"Create OpenSearch Serverless Collection","text":"<p>Type the correct collection name and type.</p> <p></p> <p>Choose KMS key type.</p> <p></p> <p>Choose the VPC endpoint which you created in here.</p>"},{"location":"Analytics/Kinesis%20Data%20Firehose/05-delivery-to-s3/","title":"Delivery to S3","text":""},{"location":"Analytics/Kinesis%20Data%20Firehose/05-delivery-to-s3/#iam-role-for-kinesis-data-firehose","title":"IAM Role for Kinesis Data Firehose","text":""},{"location":"Analytics/Kinesis%20Data%20Firehose/05-delivery-to-s3/#base-permission","title":"Base Permission","text":""},{"location":"Analytics/Kinesis%20Data%20Firehose/05-delivery-to-s3/#with-customer-managed-key","title":"With Customer Managed Key","text":"<pre><code>{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"\",\n\"Effect\": \"Allow\",\n\"Action\": [\n\"glue:GetTable\",\n\"glue:GetTableVersion\",\n\"glue:GetTableVersions\"\n],\n\"Resource\": [\n\"arn:aws:glue:us-east-1:648911607072:catalog\",\n\"arn:aws:glue:us-east-1:648911607072:database/%FIREHOSE_POLICY_TEMPLATE_PLACEHOLDER%\",\n\"arn:aws:glue:us-east-1:648911607072:table/%FIREHOSE_POLICY_TEMPLATE_PLACEHOLDER%/%FIREHOSE_POLICY_TEMPLATE_PLACEHOLDER%\"\n]\n},\n{\n\"Sid\": \"\",\n\"Effect\": \"Allow\",\n\"Action\": [\n\"glue:GetSchemaByDefinition\"\n],\n\"Resource\": [\n\"arn:aws:glue:us-east-1:648911607072:registry/*\",\n\"arn:aws:glue:us-east-1:648911607072:schema/*\"\n]\n},\n{\n\"Sid\": \"\",\n\"Effect\": \"Allow\",\n\"Action\": [\n\"glue:GetSchemaVersion\"\n],\n\"Resource\": [\n\"*\"\n]\n},\n{\n\"Sid\": \"\",\n\"Effect\": \"Allow\",\n\"Action\": [\n\"s3:AbortMultipartUpload\",\n\"s3:GetBucketLocation\",\n\"s3:GetObject\",\n\"s3:ListBucket\",\n\"s3:ListBucketMultipartUploads\",\n\"s3:PutObject\"\n],\n\"Resource\": [\n\"arn:aws:s3:::test-samsung-kms\",\n\"arn:aws:s3:::test-samsung-kms/*\"\n]\n},\n{\n\"Sid\": \"\",\n\"Effect\": \"Allow\",\n\"Action\": [\n\"lambda:InvokeFunction\",\n\"lambda:GetFunctionConfiguration\"\n],\n\"Resource\": \"arn:aws:lambda:us-east-1:648911607072:function:%FIREHOSE_POLICY_TEMPLATE_PLACEHOLDER%\"\n},\n{\n\"Effect\": \"Allow\",\n\"Action\": [\n\"kms:GenerateDataKey\",\n\"kms:Decrypt\"\n],\n\"Resource\": [\n\"arn:aws:kms:us-east-1:648911607072:key/c9184191-6362-416c-a1f5-f4f31fcf1b25\"\n],\n\"Condition\": {\n\"StringEquals\": {\n\"kms:ViaService\": \"s3.us-east-1.amazonaws.com\"\n},\n\"StringLike\": {\n\"kms:EncryptionContext:aws:s3:arn\": [\n\"arn:aws:s3:::test-samsung-kms/*\",\n\"arn:aws:s3:::test-samsung-kms\"\n]\n}\n}\n},\n{\n\"Sid\": \"\",\n\"Effect\": \"Allow\",\n\"Action\": [\n\"logs:PutLogEvents\"\n],\n\"Resource\": [\n\"arn:aws:logs:us-east-1:648911607072:log-group:/aws/kinesisfirehose/test-s3:log-stream:*\",\n\"arn:aws:logs:us-east-1:648911607072:log-group:%FIREHOSE_POLICY_TEMPLATE_PLACEHOLDER%:log-stream:*\"\n]\n},\n{\n\"Sid\": \"\",\n\"Effect\": \"Allow\",\n\"Action\": [\n\"kinesis:DescribeStream\",\n\"kinesis:GetShardIterator\",\n\"kinesis:GetRecords\",\n\"kinesis:ListShards\"\n],\n\"Resource\": \"arn:aws:kinesis:us-east-1:648911607072:stream/test-stream\"\n},\n{\n\"Effect\": \"Allow\",\n\"Action\": [\n\"kms:Decrypt\"\n],\n\"Resource\": [\n\"arn:aws:kms:us-east-1:648911607072:key/11481723-87bd-435e-89fb-8eee8d3e0b4a\"\n],\n\"Condition\": {\n\"StringEquals\": {\n\"kms:ViaService\": \"kinesis.us-east-1.amazonaws.com\"\n},\n\"StringLike\": {\n\"kms:EncryptionContext:aws:kinesis:arn\": \"arn:aws:kinesis:us-east-1:648911607072:stream/test-stream\"\n}\n}\n}\n]\n}\n</code></pre>"},{"location":"Analytics/Kinesis%20Data%20Streams/01-simple-client/","title":"Simple Client","text":"<pre><code>import json\nimport boto3\nREGION_NAME = '&lt;region code&gt;'\nSTREAM_NAME = '&lt;stream name&gt;'\ndef main():\nsession = boto3.session.Session()\nkinesis = session.client('kinesis', region_name=REGION_NAME)\nresponse = kinesis.describe_stream(StreamName=STREAM_NAME)\nshard_iters = []\nfor shard in response['StreamDescription']['Shards']:\nshard_iter_response = kinesis.get_shard_iterator(StreamName=STREAM_NAME, ShardId=shard['ShardId'],\nShardIteratorType='LATEST')\nshard_iters.append(shard_iter_response['ShardIterator'])\nwhile len(shard_iters) &gt; 0:\nnext_shard_iters = []\nfor shard_iter in shard_iters:\nresponse = kinesis.get_records(ShardIterator=shard_iter, Limit=10000)\nfor record in response['Records']:\nrecord_data = record['Data']\nrecord_data = json.loads(record_data)\nprint(record_data)\nif 'NextShardIterator' in response:\nnext_shard_iters.append(response['NextShardIterator'])\nshard_iters = next_shard_iters\nif __name__ == '__main__':\nmain()\n</code></pre>"},{"location":"Analytics/Kinesis%20Data%20Streams/02-using-amazon-kinesis-agent/","title":"Using Amazon Kinesis Agent","text":""},{"location":"Analytics/Kinesis%20Data%20Streams/02-using-amazon-kinesis-agent/#install-amazon-kinesis-agent","title":"Install Amazon Kinesis Agent","text":"<pre><code>sudo yum update -y\nsudo yum install -y aws-kinesis-agent\n</code></pre>"},{"location":"Analytics/Kinesis%20Data%20Streams/02-using-amazon-kinesis-agent/#configure-agent","title":"Configure Agent","text":"/etc/aws-kinesis/agent.json<pre><code>{\n\"cloudwatch.emitMetrics\": true,\n\"cloudwatch.endpoint\": \"monitoring.us-east-1.amazonaws.com\",\n\"kinesis.endpoint\": \"kinesis.us-east-1.amazonaws.com\",\n\"firehose.endpoint\": \"firehose.us-east-1.amazonaws.com\",\n\"sts.endpoint\": \"https://sts.amazonaws.com\",\n\"flows\": [\n{\n\"filePattern\": \"/tmp/app.log*\",\n\"kinesisStream\": \"yourkinesisstream\",\n\"partitionKeyOption\": \"RANDOM\"\n},\n{\n\"filePattern\": \"/tmp/app.log*\",\n\"deliveryStream\": \"yourdeliverystream\"\n}\n]\n}\n</code></pre> <p>AWS Documentation (Streams) AWS Documentation (Firehose)</p>"},{"location":"Analytics/Kinesis%20Data%20Streams/02-using-amazon-kinesis-agent/#start-agent","title":"Start Agent","text":"<pre><code>sudo systemctl start aws-kinesis-agent\nsudo systemctl enable aws-kinesis-agent\nsudo systemctl start aws-kinesis-agent\n</code></pre>"},{"location":"Analytics/Kinesis%20Data%20Streams/03-dynamodb-to-kinesis/","title":"DynamoDB to Kinesis","text":""},{"location":"Analytics/Kinesis%20Data%20Streams/03-dynamodb-to-kinesis/#insert","title":"<code>INSERT</code>","text":"<pre><code>{\n\"awsRegion\": \"us-east-1\",\n\"eventID\": \"414b6340-ed04-4d64-bcb6-ddf123cb9f92\",\n\"eventName\": \"INSERT\",\n\"userIdentity\": null,\n\"recordFormat\": \"application/json\",\n\"tableName\": \"test\",\n\"dynamodb\": {\n\"ApproximateCreationDateTime\": 1687784463540,\n\"Keys\": {\n\"id\": {\n\"S\": \"1\"\n}\n},\n\"NewImage\": {\n\"company\": {\n\"S\": \"github\"\n},\n\"id\": {\n\"S\": \"1\"\n},\n\"name\": {\n\"S\": \"kang\"\n}\n},\n\"SizeBytes\": 27\n},\n\"eventSource\": \"aws:dynamodb\"\n}\n</code></pre>"},{"location":"Analytics/Kinesis%20Data%20Streams/03-dynamodb-to-kinesis/#modify","title":"<code>MODIFY</code>","text":"<pre><code>{\n\"awsRegion\": \"us-east-1\",\n\"eventID\": \"a13e2e32-976c-470a-bf49-b70e98e5f0c3\",\n\"eventName\": \"MODIFY\",\n\"userIdentity\": null,\n\"recordFormat\": \"application/json\",\n\"tableName\": \"test\",\n\"dynamodb\": {\n\"ApproximateCreationDateTime\": 1687784522583,\n\"Keys\": {\n\"id\": {\n\"S\": \"1\"\n}\n},\n\"NewImage\": {\n\"company\": {\n\"S\": \"github\"\n},\n\"id\": {\n\"S\": \"1\"\n},\n\"name\": {\n\"S\": \"microsoft\"\n}\n},\n\"OldImage\": {\n\"company\": {\n\"S\": \"github\"\n},\n\"id\": {\n\"S\": \"1\"\n},\n\"name\": {\n\"S\": \"kang\"\n}\n},\n\"SizeBytes\": 56\n},\n\"eventSource\": \"aws:dynamodb\"\n}\n</code></pre>"},{"location":"Analytics/Kinesis%20Data%20Streams/03-dynamodb-to-kinesis/#delete","title":"<code>DELETE</code>","text":"<pre><code>{\n\"awsRegion\": \"us-east-1\",\n\"eventID\": \"7bf5d0a3-2156-4eb8-9620-f2777e962289\",\n\"eventName\": \"REMOVE\",\n\"userIdentity\": null,\n\"recordFormat\": \"application/json\",\n\"tableName\": \"test\",\n\"dynamodb\": {\n\"ApproximateCreationDateTime\": 1687784565418,\n\"Keys\": {\n\"id\": {\n\"S\": \"1\"\n}\n},\n\"OldImage\": {\n\"company\": {\n\"S\": \"github\"\n},\n\"id\": {\n\"S\": \"1\"\n},\n\"name\": {\n\"S\": \"microsoft\"\n}\n},\n\"SizeBytes\": 32\n},\n\"eventSource\": \"aws:dynamodb\"\n}\n</code></pre>"},{"location":"Analytics/MSK/01-enable-prometheus-monitoring/","title":"Enable Prometheus Monitoring at MSK Cluster","text":""},{"location":"Analytics/MSK/01-enable-prometheus-monitoring/#create-prometheus-configuration","title":"Create Prometheus configuration","text":"<p>AWS Documentation</p> prometheus.yml<pre><code># file: prometheus.yml\n# my global config\nglobal:\nscrape_interval:     60s\n# A scrape configuration containing exactly one endpoint to scrape:\n# Here it's Prometheus itself.\nscrape_configs:\n# The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.\n- job_name: 'prometheus'\nstatic_configs:\n# 9090 is the prometheus server port\n- targets: ['localhost:9090']\n- job_name: 'broker'\nfile_sd_configs:\n- files:\n- 'targets.json'\n</code></pre> targets.json<pre><code>[\n{\n\"labels\": {\n\"job\": \"jmx\"\n},\n\"targets\": [\n\"broker_dns_1:11001\",\n\"broker_dns_2:11001\",\n.\n.\n.\n\"broker_dns_N:11001\"\n]\n},\n{\n\"labels\": {\n\"job\": \"node\"\n},\n\"targets\": [\n\"broker_dns_1:11002\",\n\"broker_dns_2:11002\",\n.\n.\n.\n\"broker_dns_N:11002\"\n]\n}\n]\n</code></pre>"},{"location":"Analytics/MSK/01-enable-prometheus-monitoring/#create-grafana-dashboard","title":"Create Grafana Dashboard","text":"<p>MSK Labs</p> <p>Download this file and import dashboard at Grafana.</p> JSON file msk_grafana_dashboard.json<pre><code>{\n\"annotations\": {\n\"list\": [\n{\n\"builtIn\": 1,\n\"datasource\": \"-- Grafana --\",\n\"enable\": true,\n\"hide\": true,\n\"iconColor\": \"rgba(0, 211, 255, 1)\",\n\"name\": \"Annotations &amp; Alerts\",\n\"type\": \"dashboard\"\n}\n]\n},\n\"editable\": true,\n\"gnetId\": null,\n\"graphTooltip\": 0,\n\"id\": 5,\n\"links\": [],\n\"panels\": [\n{\n\"collapsed\": false,\n\"datasource\": null,\n\"gridPos\": {\n\"h\": 1,\n\"w\": 24,\n\"x\": 0,\n\"y\": 0\n},\n\"id\": 28,\n\"panels\": [],\n\"title\": \"Critical Values\",\n\"type\": \"row\"\n},\n{\n\"cacheTimeout\": null,\n\"colorBackground\": true,\n\"colorPostfix\": false,\n\"colorValue\": false,\n\"colors\": [\n\"#299c46\",\n\"#F2495C\",\n\"#C4162A\"\n],\n\"datasource\": \"Prometheus\",\n\"format\": \"none\",\n\"gauge\": {\n\"maxValue\": 100,\n\"minValue\": 0,\n\"show\": false,\n\"thresholdLabels\": false,\n\"thresholdMarkers\": true\n},\n\"gridPos\": {\n\"h\": 4,\n\"w\": 3,\n\"x\": 0,\n\"y\": 1\n},\n\"id\": 17,\n\"interval\": null,\n\"links\": [],\n\"mappingType\": 1,\n\"mappingTypes\": [\n{\n\"name\": \"value to text\",\n\"value\": 1\n},\n{\n\"name\": \"range to text\",\n\"value\": 2\n}\n],\n\"maxDataPoints\": 100,\n\"nullPointMode\": \"connected\",\n\"nullText\": null,\n\"options\": {},\n\"pluginVersion\": \"6.6.1\",\n\"postfix\": \"\",\n\"postfixFontSize\": \"50%\",\n\"prefix\": \"\",\n\"prefixFontSize\": \"50%\",\n\"rangeMaps\": [\n{\n\"from\": \"null\",\n\"text\": \"N/A\",\n\"to\": \"null\"\n}\n],\n\"sparkline\": {\n\"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n\"full\": true,\n\"lineColor\": \"rgb(31, 120, 193)\",\n\"show\": true,\n\"ymax\": null,\n\"ymin\": null\n},\n\"tableColumn\": \"\",\n\"targets\": [\n{\n\"expr\": \"sum(kafka_controller_KafkaController_Value{name=\\\"OfflinePartitionsCount\\\"}) without (instance)\",\n\"legendFormat\": \"{{instance}}\",\n\"refId\": \"A\"\n}\n],\n\"thresholds\": \"1,1\",\n\"timeFrom\": null,\n\"timeShift\": null,\n\"title\": \"Offline Partitions\",\n\"type\": \"singlestat\",\n\"valueFontSize\": \"200%\",\n\"valueMaps\": [\n{\n\"op\": \"=\",\n\"text\": \"N/A\",\n\"value\": \"null\"\n}\n],\n\"valueName\": \"max\"\n},\n{\n\"cacheTimeout\": null,\n\"colorBackground\": true,\n\"colorValue\": false,\n\"colors\": [\n\"#299c46\",\n\"rgba(237, 129, 40, 0.89)\",\n\"#d44a3a\"\n],\n\"datasource\": \"Prometheus\",\n\"format\": \"none\",\n\"gauge\": {\n\"maxValue\": 100,\n\"minValue\": 0,\n\"show\": false,\n\"thresholdLabels\": false,\n\"thresholdMarkers\": true\n},\n\"gridPos\": {\n\"h\": 4,\n\"w\": 3,\n\"x\": 3,\n\"y\": 1\n},\n\"id\": 15,\n\"interval\": null,\n\"links\": [],\n\"mappingType\": 1,\n\"mappingTypes\": [\n{\n\"name\": \"value to text\",\n\"value\": 1\n},\n{\n\"name\": \"range to text\",\n\"value\": 2\n}\n],\n\"maxDataPoints\": 100,\n\"nullPointMode\": \"connected\",\n\"nullText\": null,\n\"options\": {},\n\"pluginVersion\": \"6.6.1\",\n\"postfix\": \"\",\n\"postfixFontSize\": \"50%\",\n\"prefix\": \"\",\n\"prefixFontSize\": \"50%\",\n\"rangeMaps\": [\n{\n\"from\": \"null\",\n\"text\": \"N/A\",\n\"to\": \"null\"\n}\n],\n\"sparkline\": {\n\"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n\"full\": true,\n\"lineColor\": \"rgb(31, 120, 193)\",\n\"show\": true,\n\"ymax\": null,\n\"ymin\": null\n},\n\"tableColumn\": \"\",\n\"targets\": [\n{\n\"expr\": \"sum(rate(kafka_controller_ControllerStats_Count{name=\\\"IsrChangeRateAndTimeMs\\\"}[30m])) without (instance)\",\n\"refId\": \"A\"\n}\n],\n\"thresholds\": \"1\",\n\"timeFrom\": null,\n\"timeShift\": null,\n\"title\": \"In-Sync Replica state change\",\n\"type\": \"singlestat\",\n\"valueFontSize\": \"200%\",\n\"valueMaps\": [\n{\n\"op\": \"=\",\n\"text\": \"N/A\",\n\"value\": \"null\"\n}\n],\n\"valueName\": \"avg\"\n},\n{\n\"cacheTimeout\": null,\n\"colorBackground\": true,\n\"colorPostfix\": false,\n\"colorValue\": false,\n\"colors\": [\n\"#299c46\",\n\"#F2495C\",\n\"#C4162A\"\n],\n\"datasource\": \"Prometheus\",\n\"format\": \"none\",\n\"gauge\": {\n\"maxValue\": 100,\n\"minValue\": 0,\n\"show\": false,\n\"thresholdLabels\": false,\n\"thresholdMarkers\": true\n},\n\"gridPos\": {\n\"h\": 4,\n\"w\": 3,\n\"x\": 6,\n\"y\": 1\n},\n\"id\": 18,\n\"interval\": null,\n\"links\": [],\n\"mappingType\": 1,\n\"mappingTypes\": [\n{\n\"name\": \"value to text\",\n\"value\": 1\n},\n{\n\"name\": \"range to text\",\n\"value\": 2\n}\n],\n\"maxDataPoints\": 100,\n\"nullPointMode\": \"connected\",\n\"nullText\": null,\n\"options\": {},\n\"pluginVersion\": \"6.6.1\",\n\"postfix\": \"\",\n\"postfixFontSize\": \"50%\",\n\"prefix\": \"\",\n\"prefixFontSize\": \"50%\",\n\"rangeMaps\": [\n{\n\"from\": \"null\",\n\"text\": \"N/A\",\n\"to\": \"null\"\n}\n],\n\"sparkline\": {\n\"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n\"full\": true,\n\"lineColor\": \"rgb(31, 120, 193)\",\n\"show\": true,\n\"ymax\": null,\n\"ymin\": null\n},\n\"tableColumn\": \"\",\n\"targets\": [\n{\n\"expr\": \"max(kafka_log_LogFlushStats_Count{name=\\\"LogFlushRateAndTimeMs\\\"}) without (instance)\",\n\"legendFormat\": \"{{instance}}\",\n\"refId\": \"A\"\n}\n],\n\"thresholds\": \"10,50\",\n\"timeFrom\": null,\n\"timeShift\": null,\n\"title\": \"Log Flush Latency (ms)\",\n\"type\": \"singlestat\",\n\"valueFontSize\": \"200%\",\n\"valueMaps\": [\n{\n\"op\": \"=\",\n\"text\": \"N/A\",\n\"value\": \"null\"\n}\n],\n\"valueName\": \"current\"\n},\n{\n\"cacheTimeout\": null,\n\"colorBackground\": false,\n\"colorValue\": false,\n\"colors\": [\n\"#299c46\",\n\"rgba(237, 129, 40, 0.89)\",\n\"#d44a3a\"\n],\n\"datasource\": \"Prometheus\",\n\"format\": \"none\",\n\"gauge\": {\n\"maxValue\": 100,\n\"minValue\": 0,\n\"show\": false,\n\"thresholdLabels\": false,\n\"thresholdMarkers\": true\n},\n\"gridPos\": {\n\"h\": 4,\n\"w\": 3,\n\"x\": 12,\n\"y\": 1\n},\n\"id\": 19,\n\"interval\": null,\n\"links\": [],\n\"mappingType\": 1,\n\"mappingTypes\": [\n{\n\"name\": \"value to text\",\n\"value\": 1\n},\n{\n\"name\": \"range to text\",\n\"value\": 2\n}\n],\n\"maxDataPoints\": 100,\n\"nullPointMode\": \"connected\",\n\"nullText\": null,\n\"options\": {},\n\"pluginVersion\": \"6.6.1\",\n\"postfix\": \"\",\n\"postfixFontSize\": \"50%\",\n\"prefix\": \"\",\n\"prefixFontSize\": \"50%\",\n\"rangeMaps\": [\n{\n\"from\": \"null\",\n\"text\": \"N/A\",\n\"to\": \"null\"\n}\n],\n\"sparkline\": {\n\"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n\"full\": true,\n\"lineColor\": \"rgb(31, 120, 193)\",\n\"show\": true,\n\"ymax\": null,\n\"ymin\": null\n},\n\"tableColumn\": \"\",\n\"targets\": [\n{\n\"expr\": \"sum(kafka_controller_KafkaController_Value{name=\\\"GlobalTopicCount\\\"}) without (instance)\",\n\"refId\": \"A\"\n}\n],\n\"thresholds\": \"\",\n\"timeFrom\": null,\n\"timeShift\": null,\n\"title\": \"Total Topics\",\n\"type\": \"singlestat\",\n\"valueFontSize\": \"200%\",\n\"valueMaps\": [\n{\n\"op\": \"=\",\n\"text\": \"N/A\",\n\"value\": \"null\"\n}\n],\n\"valueName\": \"max\"\n},\n{\n\"cacheTimeout\": null,\n\"colorBackground\": false,\n\"colorValue\": false,\n\"colors\": [\n\"#299c46\",\n\"rgba(237, 129, 40, 0.89)\",\n\"#d44a3a\"\n],\n\"datasource\": \"Prometheus\",\n\"format\": \"none\",\n\"gauge\": {\n\"maxValue\": 100,\n\"minValue\": 0,\n\"show\": false,\n\"thresholdLabels\": false,\n\"thresholdMarkers\": true\n},\n\"gridPos\": {\n\"h\": 4,\n\"w\": 3,\n\"x\": 15,\n\"y\": 1\n},\n\"id\": 20,\n\"interval\": null,\n\"links\": [],\n\"mappingType\": 1,\n\"mappingTypes\": [\n{\n\"name\": \"value to text\",\n\"value\": 1\n},\n{\n\"name\": \"range to text\",\n\"value\": 2\n}\n],\n\"maxDataPoints\": 100,\n\"nullPointMode\": \"connected\",\n\"nullText\": null,\n\"options\": {},\n\"pluginVersion\": \"6.6.1\",\n\"postfix\": \"\",\n\"postfixFontSize\": \"50%\",\n\"prefix\": \"\",\n\"prefixFontSize\": \"50%\",\n\"rangeMaps\": [\n{\n\"from\": \"null\",\n\"text\": \"N/A\",\n\"to\": \"null\"\n}\n],\n\"sparkline\": {\n\"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n\"full\": true,\n\"lineColor\": \"rgb(31, 120, 193)\",\n\"show\": true,\n\"ymax\": null,\n\"ymin\": null\n},\n\"tableColumn\": \"\",\n\"targets\": [\n{\n\"expr\": \"sum(kafka_controller_KafkaController_Value{name=\\\"PreferredReplicaImbalanceCount\\\"}) without (instance)\",\n\"refId\": \"A\"\n}\n],\n\"thresholds\": \"\",\n\"timeFrom\": null,\n\"timeShift\": null,\n\"title\": \"Preferred Leader Imbalance\",\n\"type\": \"singlestat\",\n\"valueFontSize\": \"200%\",\n\"valueMaps\": [\n{\n\"op\": \"=\",\n\"text\": \"N/A\",\n\"value\": \"null\"\n}\n],\n\"valueName\": \"max\"\n},\n{\n\"cacheTimeout\": null,\n\"colorBackground\": false,\n\"colorValue\": false,\n\"colors\": [\n\"#299c46\",\n\"rgba(237, 129, 40, 0.89)\",\n\"#d44a3a\"\n],\n\"datasource\": \"Prometheus\",\n\"format\": \"none\",\n\"gauge\": {\n\"maxValue\": 100,\n\"minValue\": 0,\n\"show\": false,\n\"thresholdLabels\": false,\n\"thresholdMarkers\": true\n},\n\"gridPos\": {\n\"h\": 4,\n\"w\": 3,\n\"x\": 18,\n\"y\": 1\n},\n\"id\": 14,\n\"interval\": null,\n\"links\": [],\n\"mappingType\": 1,\n\"mappingTypes\": [\n{\n\"name\": \"value to text\",\n\"value\": 1\n},\n{\n\"name\": \"range to text\",\n\"value\": 2\n}\n],\n\"maxDataPoints\": 100,\n\"nullPointMode\": \"connected\",\n\"nullText\": null,\n\"options\": {},\n\"pluginVersion\": \"6.6.1\",\n\"postfix\": \"\",\n\"postfixFontSize\": \"50%\",\n\"prefix\": \"\",\n\"prefixFontSize\": \"50%\",\n\"rangeMaps\": [\n{\n\"from\": \"null\",\n\"text\": \"N/A\",\n\"to\": \"null\"\n}\n],\n\"sparkline\": {\n\"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n\"full\": true,\n\"lineColor\": \"rgb(31, 120, 193)\",\n\"show\": true,\n\"ymax\": null,\n\"ymin\": null\n},\n\"tableColumn\": \"\",\n\"targets\": [\n{\n\"expr\": \"sum(kafka_controller_KafkaController_Value{name=\\\"GlobalPartitionCount\\\"}) without (instance)\",\n\"refId\": \"A\"\n}\n],\n\"thresholds\": \"\",\n\"timeFrom\": null,\n\"timeShift\": null,\n\"title\": \"Total Partitions\",\n\"type\": \"singlestat\",\n\"valueFontSize\": \"200%\",\n\"valueMaps\": [\n{\n\"op\": \"=\",\n\"text\": \"N/A\",\n\"value\": \"null\"\n}\n],\n\"valueName\": \"max\"\n},\n{\n\"cacheTimeout\": null,\n\"colorBackground\": false,\n\"colorValue\": false,\n\"colors\": [\n\"#299c46\",\n\"rgba(237, 129, 40, 0.89)\",\n\"#d44a3a\"\n],\n\"datasource\": \"Prometheus\",\n\"format\": \"none\",\n\"gauge\": {\n\"maxValue\": 100,\n\"minValue\": 0,\n\"show\": false,\n\"thresholdLabels\": false,\n\"thresholdMarkers\": true\n},\n\"gridPos\": {\n\"h\": 4,\n\"w\": 3,\n\"x\": 21,\n\"y\": 1\n},\n\"id\": 25,\n\"interval\": null,\n\"links\": [],\n\"mappingType\": 1,\n\"mappingTypes\": [\n{\n\"name\": \"value to text\",\n\"value\": 1\n},\n{\n\"name\": \"range to text\",\n\"value\": 2\n}\n],\n\"maxDataPoints\": 100,\n\"nullPointMode\": \"connected\",\n\"nullText\": null,\n\"options\": {},\n\"pluginVersion\": \"6.6.1\",\n\"postfix\": \"\",\n\"postfixFontSize\": \"50%\",\n\"prefix\": \"\",\n\"prefixFontSize\": \"50%\",\n\"rangeMaps\": [\n{\n\"from\": \"null\",\n\"text\": \"N/A\",\n\"to\": \"null\"\n}\n],\n\"sparkline\": {\n\"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n\"full\": true,\n\"lineColor\": \"rgb(31, 120, 193)\",\n\"show\": true,\n\"ymax\": null,\n\"ymin\": null\n},\n\"tableColumn\": \"\",\n\"targets\": [\n{\n\"expr\": \"sum(kafka_server_Fetch_queue_size) without (instance)\",\n\"refId\": \"A\"\n}\n],\n\"thresholds\": \"\",\n\"timeFrom\": null,\n\"timeShift\": null,\n\"title\": \"Fetch Queue Size\",\n\"type\": \"singlestat\",\n\"valueFontSize\": \"200%\",\n\"valueMaps\": [\n{\n\"op\": \"=\",\n\"text\": \"N/A\",\n\"value\": \"null\"\n}\n],\n\"valueName\": \"max\"\n},\n{\n\"aliasColors\": {},\n\"bars\": false,\n\"dashLength\": 10,\n\"dashes\": false,\n\"datasource\": \"Prometheus\",\n\"fill\": 1,\n\"fillGradient\": 0,\n\"gridPos\": {\n\"h\": 7,\n\"w\": 24,\n\"x\": 0,\n\"y\": 5\n},\n\"hiddenSeries\": false,\n\"id\": 2,\n\"legend\": {\n\"avg\": false,\n\"current\": false,\n\"max\": false,\n\"min\": false,\n\"show\": true,\n\"total\": false,\n\"values\": false\n},\n\"lines\": true,\n\"linewidth\": 1,\n\"nullPointMode\": \"null\",\n\"options\": {\n\"dataLinks\": []\n},\n\"percentage\": false,\n\"pointradius\": 2,\n\"points\": false,\n\"renderer\": \"flot\",\n\"seriesOverrides\": [],\n\"spaceLength\": 10,\n\"stack\": true,\n\"steppedLine\": false,\n\"targets\": [\n{\n\"expr\": \"sum(kafka_server_BrokerTopicMetrics_OneMinuteRate{name=\\\"MessagesInPerSec\\\"}) by (instance)\",\n\"legendFormat\": \"{{instance}}\",\n\"refId\": \"A\"\n}\n],\n\"thresholds\": [],\n\"timeFrom\": null,\n\"timeRegions\": [],\n\"timeShift\": null,\n\"title\": \"MessagesInPerSec\",\n\"tooltip\": {\n\"shared\": true,\n\"sort\": 0,\n\"value_type\": \"individual\"\n},\n\"type\": \"graph\",\n\"xaxis\": {\n\"buckets\": null,\n\"mode\": \"time\",\n\"name\": null,\n\"show\": true,\n\"values\": []\n},\n\"yaxes\": [\n{\n\"format\": \"short\",\n\"label\": null,\n\"logBase\": 1,\n\"max\": null,\n\"min\": null,\n\"show\": true\n},\n{\n\"format\": \"short\",\n\"label\": null,\n\"logBase\": 1,\n\"max\": null,\n\"min\": null,\n\"show\": true\n}\n],\n\"yaxis\": {\n\"align\": false,\n\"alignLevel\": null\n}\n},\n{\n\"collapsed\": false,\n\"datasource\": null,\n\"gridPos\": {\n\"h\": 1,\n\"w\": 24,\n\"x\": 0,\n\"y\": 12\n},\n\"id\": 10,\n\"panels\": [],\n\"title\": \"Cluster Traffic\",\n\"type\": \"row\"\n},\n{\n\"aliasColors\": {},\n\"bars\": false,\n\"dashLength\": 10,\n\"dashes\": false,\n\"datasource\": \"Prometheus\",\n\"fill\": 1,\n\"fillGradient\": 0,\n\"gridPos\": {\n\"h\": 8,\n\"w\": 12,\n\"x\": 0,\n\"y\": 13\n},\n\"hiddenSeries\": false,\n\"id\": 8,\n\"legend\": {\n\"avg\": false,\n\"current\": false,\n\"max\": false,\n\"min\": false,\n\"show\": true,\n\"total\": false,\n\"values\": false\n},\n\"lines\": true,\n\"linewidth\": 1,\n\"nullPointMode\": \"null\",\n\"options\": {\n\"dataLinks\": []\n},\n\"percentage\": false,\n\"pointradius\": 2,\n\"points\": false,\n\"renderer\": \"flot\",\n\"seriesOverrides\": [],\n\"spaceLength\": 10,\n\"stack\": true,\n\"steppedLine\": false,\n\"targets\": [\n{\n\"expr\": \"sum(kafka_server_BrokerTopicMetrics_OneMinuteRate{job=\\\"jmx\\\",name=\\\"ReplicationBytesInPerSec\\\"}) by (instance)\",\n\"legendFormat\": \"{{instance}}\",\n\"refId\": \"A\"\n}\n],\n\"thresholds\": [],\n\"timeFrom\": null,\n\"timeRegions\": [],\n\"timeShift\": null,\n\"title\": \"ReplicationBytesInPerSec\",\n\"tooltip\": {\n\"shared\": true,\n\"sort\": 0,\n\"value_type\": \"individual\"\n},\n\"type\": \"graph\",\n\"xaxis\": {\n\"buckets\": null,\n\"mode\": \"time\",\n\"name\": null,\n\"show\": true,\n\"values\": []\n},\n\"yaxes\": [\n{\n\"format\": \"short\",\n\"label\": null,\n\"logBase\": 1,\n\"max\": null,\n\"min\": null,\n\"show\": true\n},\n{\n\"format\": \"short\",\n\"label\": null,\n\"logBase\": 1,\n\"max\": null,\n\"min\": null,\n\"show\": true\n}\n],\n\"yaxis\": {\n\"align\": false,\n\"alignLevel\": null\n}\n},\n{\n\"aliasColors\": {},\n\"bars\": false,\n\"dashLength\": 10,\n\"dashes\": false,\n\"datasource\": \"Prometheus\",\n\"fill\": 1,\n\"fillGradient\": 0,\n\"gridPos\": {\n\"h\": 8,\n\"w\": 12,\n\"x\": 12,\n\"y\": 13\n},\n\"hiddenSeries\": false,\n\"id\": 7,\n\"legend\": {\n\"avg\": false,\n\"current\": false,\n\"max\": false,\n\"min\": false,\n\"show\": true,\n\"total\": false,\n\"values\": false\n},\n\"lines\": true,\n\"linewidth\": 1,\n\"nullPointMode\": \"null\",\n\"options\": {\n\"dataLinks\": []\n},\n\"percentage\": false,\n\"pointradius\": 2,\n\"points\": false,\n\"renderer\": \"flot\",\n\"seriesOverrides\": [],\n\"spaceLength\": 10,\n\"stack\": true,\n\"steppedLine\": false,\n\"targets\": [\n{\n\"expr\": \"sum(kafka_server_BrokerTopicMetrics_OneMinuteRate{job=\\\"jmx\\\",name=\\\"ReplicationBytesOutPerSec\\\"}) by (instance)\",\n\"legendFormat\": \"{{instance}}\",\n\"refId\": \"A\"\n}\n],\n\"thresholds\": [],\n\"timeFrom\": null,\n\"timeRegions\": [],\n\"timeShift\": null,\n\"title\": \"ReplicationBytesOutPerSec\",\n\"tooltip\": {\n\"shared\": true,\n\"sort\": 0,\n\"value_type\": \"individual\"\n},\n\"type\": \"graph\",\n\"xaxis\": {\n\"buckets\": null,\n\"mode\": \"time\",\n\"name\": null,\n\"show\": true,\n\"values\": []\n},\n\"yaxes\": [\n{\n\"format\": \"short\",\n\"label\": null,\n\"logBase\": 1,\n\"max\": null,\n\"min\": null,\n\"show\": true\n},\n{\n\"format\": \"short\",\n\"label\": null,\n\"logBase\": 1,\n\"max\": null,\n\"min\": null,\n\"show\": true\n}\n],\n\"yaxis\": {\n\"align\": false,\n\"alignLevel\": null\n}\n},\n{\n\"aliasColors\": {},\n\"bars\": false,\n\"dashLength\": 10,\n\"dashes\": false,\n\"datasource\": \"Prometheus\",\n\"fill\": 1,\n\"fillGradient\": 0,\n\"gridPos\": {\n\"h\": 8,\n\"w\": 12,\n\"x\": 0,\n\"y\": 21\n},\n\"hiddenSeries\": false,\n\"id\": 6,\n\"legend\": {\n\"avg\": false,\n\"current\": false,\n\"max\": false,\n\"min\": false,\n\"show\": true,\n\"total\": false,\n\"values\": false\n},\n\"lines\": true,\n\"linewidth\": 1,\n\"nullPointMode\": \"null\",\n\"options\": {\n\"dataLinks\": []\n},\n\"percentage\": false,\n\"pointradius\": 2,\n\"points\": false,\n\"renderer\": \"flot\",\n\"seriesOverrides\": [],\n\"spaceLength\": 10,\n\"stack\": true,\n\"steppedLine\": false,\n\"targets\": [\n{\n\"expr\": \"sum(kafka_server_BrokerTopicMetrics_OneMinuteRate{job=\\\"jmx\\\",name=\\\"TotalProduceRequestsPerSec\\\"}) by (instance)\",\n\"legendFormat\": \"{{instance}}\",\n\"refId\": \"A\"\n}\n],\n\"thresholds\": [],\n\"timeFrom\": null,\n\"timeRegions\": [],\n\"timeShift\": null,\n\"title\": \"TotalProduceRequestsPerSec\",\n\"tooltip\": {\n\"shared\": true,\n\"sort\": 0,\n\"value_type\": \"individual\"\n},\n\"type\": \"graph\",\n\"xaxis\": {\n\"buckets\": null,\n\"mode\": \"time\",\n\"name\": null,\n\"show\": true,\n\"values\": []\n},\n\"yaxes\": [\n{\n\"format\": \"short\",\n\"label\": null,\n\"logBase\": 1,\n\"max\": null,\n\"min\": null,\n\"show\": true\n},\n{\n\"format\": \"short\",\n\"label\": null,\n\"logBase\": 1,\n\"max\": null,\n\"min\": null,\n\"show\": true\n}\n],\n\"yaxis\": {\n\"align\": false,\n\"alignLevel\": null\n}\n},\n{\n\"aliasColors\": {},\n\"bars\": false,\n\"dashLength\": 10,\n\"dashes\": false,\n\"datasource\": \"Prometheus\",\n\"fill\": 1,\n\"fillGradient\": 0,\n\"gridPos\": {\n\"h\": 8,\n\"w\": 12,\n\"x\": 12,\n\"y\": 21\n},\n\"hiddenSeries\": false,\n\"id\": 31,\n\"legend\": {\n\"avg\": false,\n\"current\": false,\n\"max\": false,\n\"min\": false,\n\"show\": true,\n\"total\": false,\n\"values\": false\n},\n\"lines\": true,\n\"linewidth\": 1,\n\"nullPointMode\": \"null\",\n\"options\": {\n\"dataLinks\": []\n},\n\"percentage\": false,\n\"pointradius\": 2,\n\"points\": false,\n\"renderer\": \"flot\",\n\"seriesOverrides\": [],\n\"spaceLength\": 10,\n\"stack\": true,\n\"steppedLine\": false,\n\"targets\": [\n{\n\"expr\": \"sum(kafka_cluster_Partition_Value{name=\\\"UnderReplicated\\\"}) by (topic)\",\n\"legendFormat\": \"{{topic}}\",\n\"refId\": \"A\"\n}\n],\n\"thresholds\": [],\n\"timeFrom\": null,\n\"timeRegions\": [],\n\"timeShift\": null,\n\"title\": \"Under replicated partitions by Topic\",\n\"tooltip\": {\n\"shared\": true,\n\"sort\": 0,\n\"value_type\": \"individual\"\n},\n\"type\": \"graph\",\n\"xaxis\": {\n\"buckets\": null,\n\"mode\": \"time\",\n\"name\": null,\n\"show\": true,\n\"values\": []\n},\n\"yaxes\": [\n{\n\"format\": \"short\",\n\"label\": null,\n\"logBase\": 1,\n\"max\": null,\n\"min\": null,\n\"show\": true\n},\n{\n\"format\": \"short\",\n\"label\": null,\n\"logBase\": 1,\n\"max\": null,\n\"min\": null,\n\"show\": true\n}\n],\n\"yaxis\": {\n\"align\": false,\n\"alignLevel\": null\n}\n},\n{\n\"aliasColors\": {},\n\"bars\": false,\n\"dashLength\": 10,\n\"dashes\": false,\n\"datasource\": \"Prometheus\",\n\"fill\": 1,\n\"fillGradient\": 0,\n\"gridPos\": {\n\"h\": 8,\n\"w\": 12,\n\"x\": 0,\n\"y\": 29\n},\n\"hiddenSeries\": false,\n\"id\": 32,\n\"legend\": {\n\"avg\": false,\n\"current\": false,\n\"max\": false,\n\"min\": false,\n\"show\": true,\n\"total\": false,\n\"values\": false\n},\n\"lines\": true,\n\"linewidth\": 1,\n\"nullPointMode\": \"null\",\n\"options\": {\n\"dataLinks\": []\n},\n\"percentage\": false,\n\"pointradius\": 2,\n\"points\": false,\n\"renderer\": \"flot\",\n\"seriesOverrides\": [],\n\"spaceLength\": 10,\n\"stack\": true,\n\"steppedLine\": false,\n\"targets\": [\n{\n\"expr\": \"kafka_server_SessionExpireListener_OneMinuteRate{name=\\\"ZooKeeperDisconnectsPerSec\\\"}\",\n\"legendFormat\": \"{{instance}}\",\n\"refId\": \"A\"\n}\n],\n\"thresholds\": [],\n\"timeFrom\": null,\n\"timeRegions\": [],\n\"timeShift\": null,\n\"title\": \"ZooKeeperDisconnectsPerSec\",\n\"tooltip\": {\n\"shared\": true,\n\"sort\": 0,\n\"value_type\": \"individual\"\n},\n\"type\": \"graph\",\n\"xaxis\": {\n\"buckets\": null,\n\"mode\": \"time\",\n\"name\": null,\n\"show\": true,\n\"values\": []\n},\n\"yaxes\": [\n{\n\"format\": \"short\",\n\"label\": null,\n\"logBase\": 1,\n\"max\": null,\n\"min\": null,\n\"show\": true\n},\n{\n\"format\": \"short\",\n\"label\": null,\n\"logBase\": 1,\n\"max\": null,\n\"min\": null,\n\"show\": true\n}\n],\n\"yaxis\": {\n\"align\": false,\n\"alignLevel\": null\n}\n},\n{\n\"collapsed\": false,\n\"datasource\": null,\n\"gridPos\": {\n\"h\": 1,\n\"w\": 24,\n\"x\": 0,\n\"y\": 37\n},\n\"id\": 30,\n\"panels\": [],\n\"title\": \"Networking\",\n\"type\": \"row\"\n},\n{\n\"aliasColors\": {},\n\"bars\": false,\n\"dashLength\": 10,\n\"dashes\": false,\n\"datasource\": \"Prometheus\",\n\"decimals\": 1,\n\"fill\": 1,\n\"fillGradient\": 0,\n\"gridPos\": {\n\"h\": 7,\n\"w\": 12,\n\"x\": 0,\n\"y\": 38\n},\n\"hiddenSeries\": false,\n\"id\": 12,\n\"legend\": {\n\"alignAsTable\": true,\n\"avg\": true,\n\"current\": true,\n\"max\": true,\n\"min\": true,\n\"show\": true,\n\"total\": false,\n\"values\": true\n},\n\"lines\": true,\n\"linewidth\": 1,\n\"nullPointMode\": \"null\",\n\"options\": {\n\"dataLinks\": []\n},\n\"percentage\": false,\n\"pointradius\": 2,\n\"points\": false,\n\"renderer\": \"flot\",\n\"seriesOverrides\": [\n{\n\"alias\": \"Out\",\n\"transform\": \"negative-Y\"\n}\n],\n\"spaceLength\": 10,\n\"stack\": false,\n\"steppedLine\": false,\n\"targets\": [\n{\n\"expr\": \"sum(rate(kafka_server_BrokerTopicMetrics_Count{name=\\\"BytesInPerSec\\\"}[1m])) by (name)\",\n\"instant\": false,\n\"interval\": \"10s\",\n\"intervalFactor\": 1,\n\"legendFormat\": \"In\",\n\"refId\": \"A\"\n},\n{\n\"expr\": \"sum(rate(kafka_server_BrokerTopicMetrics_Count{name=\\\"BytesOutPerSec\\\"}[1m])) by (name)\",\n\"instant\": false,\n\"interval\": \"10s\",\n\"legendFormat\": \"Out\",\n\"refId\": \"B\"\n}\n],\n\"thresholds\": [],\n\"timeFrom\": null,\n\"timeRegions\": [],\n\"timeShift\": null,\n\"title\": \"Network Bytes\",\n\"tooltip\": {\n\"shared\": true,\n\"sort\": 0,\n\"value_type\": \"individual\"\n},\n\"type\": \"graph\",\n\"xaxis\": {\n\"buckets\": null,\n\"mode\": \"time\",\n\"name\": null,\n\"show\": true,\n\"values\": []\n},\n\"yaxes\": [\n{\n\"format\": \"Bps\",\n\"label\": null,\n\"logBase\": 1,\n\"max\": null,\n\"min\": null,\n\"show\": true\n},\n{\n\"format\": \"short\",\n\"label\": null,\n\"logBase\": 1,\n\"max\": null,\n\"min\": null,\n\"show\": false\n}\n],\n\"yaxis\": {\n\"align\": false,\n\"alignLevel\": null\n}\n},\n{\n\"aliasColors\": {},\n\"bars\": false,\n\"dashLength\": 10,\n\"dashes\": false,\n\"datasource\": null,\n\"fill\": 1,\n\"fillGradient\": 0,\n\"gridPos\": {\n\"h\": 7,\n\"w\": 12,\n\"x\": 12,\n\"y\": 38\n},\n\"hiddenSeries\": false,\n\"id\": 22,\n\"legend\": {\n\"avg\": false,\n\"current\": false,\n\"max\": false,\n\"min\": false,\n\"show\": true,\n\"total\": false,\n\"values\": false\n},\n\"lines\": true,\n\"linewidth\": 1,\n\"nullPointMode\": \"null\",\n\"options\": {\n\"dataLinks\": []\n},\n\"percentage\": false,\n\"pointradius\": 2,\n\"points\": false,\n\"renderer\": \"flot\",\n\"seriesOverrides\": [],\n\"spaceLength\": 10,\n\"stack\": false,\n\"steppedLine\": false,\n\"targets\": [\n{\n\"expr\": \"sum(kafka_network_RequestMetrics_OneMinuteRate{name=\\\"RequestsPerSec\\\"  }) by (instance)\",\n\"legendFormat\": \"{{instance}}\",\n\"refId\": \"A\"\n}\n],\n\"thresholds\": [],\n\"timeFrom\": null,\n\"timeRegions\": [],\n\"timeShift\": null,\n\"title\": \"Network: RequestsPerSec\",\n\"tooltip\": {\n\"shared\": true,\n\"sort\": 0,\n\"value_type\": \"individual\"\n},\n\"type\": \"graph\",\n\"xaxis\": {\n\"buckets\": null,\n\"mode\": \"time\",\n\"name\": null,\n\"show\": true,\n\"values\": []\n},\n\"yaxes\": [\n{\n\"format\": \"short\",\n\"label\": null,\n\"logBase\": 1,\n\"max\": null,\n\"min\": null,\n\"show\": true\n},\n{\n\"format\": \"short\",\n\"label\": null,\n\"logBase\": 1,\n\"max\": null,\n\"min\": null,\n\"show\": true\n}\n],\n\"yaxis\": {\n\"align\": false,\n\"alignLevel\": null\n}\n},\n{\n\"aliasColors\": {},\n\"bars\": false,\n\"dashLength\": 10,\n\"dashes\": false,\n\"datasource\": null,\n\"fill\": 1,\n\"fillGradient\": 0,\n\"gridPos\": {\n\"h\": 5,\n\"w\": 12,\n\"x\": 0,\n\"y\": 45\n},\n\"hiddenSeries\": false,\n\"id\": 26,\n\"legend\": {\n\"alignAsTable\": true,\n\"avg\": false,\n\"current\": true,\n\"max\": false,\n\"min\": true,\n\"show\": true,\n\"total\": false,\n\"values\": true\n},\n\"lines\": true,\n\"linewidth\": 1,\n\"nullPointMode\": \"null\",\n\"options\": {\n\"dataLinks\": []\n},\n\"percentage\": false,\n\"pointradius\": 2,\n\"points\": false,\n\"renderer\": \"flot\",\n\"seriesOverrides\": [],\n\"spaceLength\": 10,\n\"stack\": false,\n\"steppedLine\": false,\n\"targets\": [\n{\n\"expr\": \"sum(kafka_network_Processor_Value{name=\\\"IdlePercent\\\"}) by (instance)\",\n\"legendFormat\": \"{{instance}}\",\n\"refId\": \"A\"\n}\n],\n\"thresholds\": [],\n\"timeFrom\": null,\n\"timeRegions\": [],\n\"timeShift\": null,\n\"title\": \"Network: CPU Idle Time\",\n\"tooltip\": {\n\"shared\": true,\n\"sort\": 0,\n\"value_type\": \"individual\"\n},\n\"type\": \"graph\",\n\"xaxis\": {\n\"buckets\": null,\n\"mode\": \"time\",\n\"name\": null,\n\"show\": true,\n\"values\": []\n},\n\"yaxes\": [\n{\n\"format\": \"percentunit\",\n\"label\": null,\n\"logBase\": 1,\n\"max\": null,\n\"min\": null,\n\"show\": true\n},\n{\n\"format\": \"short\",\n\"label\": null,\n\"logBase\": 1,\n\"max\": null,\n\"min\": null,\n\"show\": true\n}\n],\n\"yaxis\": {\n\"align\": false,\n\"alignLevel\": null\n}\n},\n{\n\"aliasColors\": {},\n\"bars\": false,\n\"dashLength\": 10,\n\"dashes\": false,\n\"datasource\": null,\n\"fill\": 1,\n\"fillGradient\": 0,\n\"gridPos\": {\n\"h\": 5,\n\"w\": 12,\n\"x\": 12,\n\"y\": 45\n},\n\"hiddenSeries\": false,\n\"id\": 23,\n\"legend\": {\n\"avg\": false,\n\"current\": false,\n\"max\": false,\n\"min\": false,\n\"show\": true,\n\"total\": false,\n\"values\": false\n},\n\"lines\": true,\n\"linewidth\": 1,\n\"nullPointMode\": \"null\",\n\"options\": {\n\"dataLinks\": []\n},\n\"percentage\": false,\n\"pointradius\": 2,\n\"points\": false,\n\"renderer\": \"flot\",\n\"seriesOverrides\": [],\n\"spaceLength\": 10,\n\"stack\": false,\n\"steppedLine\": false,\n\"targets\": [\n{\n\"expr\": \"sum(kafka_network_RequestMetrics_OneMinuteRate{name=\\\"ErrorsPerSec\\\"  }) by (instance)\",\n\"legendFormat\": \"{{instance}}\",\n\"refId\": \"A\"\n}\n],\n\"thresholds\": [],\n\"timeFrom\": null,\n\"timeRegions\": [],\n\"timeShift\": null,\n\"title\": \"Network: ErrorsPerSec\",\n\"tooltip\": {\n\"shared\": true,\n\"sort\": 0,\n\"value_type\": \"individual\"\n},\n\"type\": \"graph\",\n\"xaxis\": {\n\"buckets\": null,\n\"mode\": \"time\",\n\"name\": null,\n\"show\": true,\n\"values\": []\n},\n\"yaxes\": [\n{\n\"format\": \"short\",\n\"label\": null,\n\"logBase\": 1,\n\"max\": null,\n\"min\": null,\n\"show\": true\n},\n{\n\"format\": \"short\",\n\"label\": null,\n\"logBase\": 1,\n\"max\": null,\n\"min\": null,\n\"show\": true\n}\n],\n\"yaxis\": {\n\"align\": false,\n\"alignLevel\": null\n}\n}\n],\n\"refresh\": \"\",\n\"schemaVersion\": 22,\n\"style\": \"dark\",\n\"tags\": [],\n\"templating\": {\n\"list\": []\n},\n\"time\": {\n\"from\": \"now-5m\",\n\"to\": \"now\"\n},\n\"timepicker\": {\n\"refresh_intervals\": [\n\"5s\",\n\"10s\",\n\"30s\",\n\"1m\",\n\"5m\",\n\"15m\",\n\"30m\",\n\"1h\",\n\"2h\",\n\"1d\"\n]\n},\n\"timezone\": \"\",\n\"title\": \"MSK Cluster Overview\",\n\"uid\": \"LYXrrYwZz\",\n\"version\": 5\n}\n</code></pre>"},{"location":"Analytics/MSK/02-using-kafdrop/","title":"Using Kafdrop","text":""},{"location":"Analytics/MSK/02-using-kafdrop/#running-with-docker","title":"Running with docker","text":"<pre><code>docker run \\\n-itd \\\n-p 9000:9000 \\\n-e KAFKA_BROKERCONNECT=&lt;host:port,host:port&gt; \\\n-e JVM_OPTS=\"-Xms32M -Xmx64M\" \\\n-e SERVER_SERVLET_CONTEXTPATH=\"/\" \\\n--name kafdrop \\\nobsidiandynamics/kafdrop\n</code></pre> <p>Github</p>"},{"location":"Analytics/MSK/03-msk-connector-configurations/","title":"MSK Connector Configurations","text":""},{"location":"Analytics/MSK/03-msk-connector-configurations/#mysql-source","title":"MySQL (Source)","text":""},{"location":"Analytics/MSK/03-msk-connector-configurations/#diagram","title":"Diagram","text":""},{"location":"Analytics/MSK/03-msk-connector-configurations/#connector-configuration","title":"Connector Configuration","text":""},{"location":"Analytics/MSK/03-msk-connector-configurations/#elasticsearch-710","title":"ElasticSearch 7.10","text":""},{"location":"Analytics/MSK/03-msk-connector-configurations/#connector-configuration_1","title":"Connector configuration","text":"<pre><code>connector.class=io.confluent.connect.elasticsearch.ElasticsearchSinkConnector\ntype.name=log\ntasks.max=3\ntopics=&lt;topic&gt;\nbatch.size=100\ntopic.index.map=&lt;topic:index&gt;\nname=&lt;msk connector name&gt;\nbootstrap.servers=&lt;kafka bootstrap server&gt;\nconnection.url=&lt;elasticsearch domain&gt;   # ex. https://&lt;hostname&gt;:443\nconnection.username=&lt;elasticsearch username&gt;\nconnection.password=&lt;elasticsearch password&gt;\nkey.ignore=true\nschema.ignore=true\nkey.serializer=org.apache.kafka.common.serialization.StringSerializer\nvalue.serializer=org.apache.kafka.common.serialization.JSONSerializer\nkey.serializer.schemas.enable=false\nvalue.serializer.schemas.enable=false\nkey.converter=org.apache.kafka.connect.storage.StringConverter\nkey.converter.schemas.enable=false\nvalue.converter=org.apache.kafka.connect.json.JsonConverter\nvalue.converter.schemas.enable=false\nconsumer.auto.offset.reset=latest\n</code></pre> <p>Please use ElasticSearch Sink Connector v11.2.0.</p>"},{"location":"Containers/Docker/01-base-dockerfile/","title":"Base Dockerfile","text":""},{"location":"Containers/Docker/01-base-dockerfile/#alpine","title":"Alpine","text":"GeneralAMD64ARM64 <pre><code>FROM public.ecr.aws/docker/library/alpine:3.18.3\nENV USER_NAME &lt;USER NAME&gt;\nENV USER_UID &lt;UID NUMBER&gt;\n\nENV GROUP_NAME &lt;GROUP NAME&gt;\nENV GROUP_GID &lt;GID NUMBER&gt;\n\nENV WORKDIR &lt;WORKDIR PATH&gt;\nWORKDIR $WORKDIR\nRUN apk add --no-cache tini=~0.19.0 &amp;&amp; \\\naddgroup -g $GROUP_GID $GROUP_NAME &amp;&amp; \\\nadduser -D -u $USER_UID -G $GROUP_NAME $USER_NAME &amp;&amp; \\\nchown -R $USER_NAME:$GROUP_NAME .\n\n# RUN apk add --no-cache curl=~8.2.1 &amp;&amp; \\\n#     curl --version\nUSER $USER_NAME\n# COPY [--chown=&lt;user&gt;:&lt;group&gt;] [--chmod=&lt;permission (ex. 755)&gt;] &lt;src&gt; &lt;dest&gt;   # with Docker Buildkit\n# RUN ...\nENTRYPOINT [ \"/sbin/tini\", \"--\", \"&lt;APPLICATION&gt;\" ]\n</code></pre> <p>Image Information</p> <pre><code>FROM amd64/alpine:3.18.3\nENV USER_NAME &lt;USER NAME&gt;\nENV USER_UID &lt;UID NUMBER&gt;\n\nENV GROUP_NAME &lt;GROUP NAME&gt;\nENV GROUP_GID &lt;GID NUMBER&gt;\n\nENV WORKDIR &lt;WORKDIR PATH&gt;\nWORKDIR $WORKDIR\nRUN apk add --no-cache tini=~0.19.0 &amp;&amp; \\\naddgroup -g $GROUP_GID $GROUP_NAME &amp;&amp; \\\nadduser -D -u $USER_UID -G $GROUP_NAME $USER_NAME &amp;&amp; \\\nchown -R $USER_NAME:$GROUP_NAME .\n\n# RUN apk add --no-cache curl=~8.2.1 &amp;&amp; \\\n#     curl --version\nUSER $USER_NAME\n# COPY [--chown=&lt;user&gt;:&lt;group&gt;] [--chmod=&lt;permission (ex. 755)&gt;] &lt;src&gt; &lt;dest&gt;   # with Docker Buildkit\n# RUN ...\nENTRYPOINT [ \"/sbin/tini\", \"--\", \"&lt;APPLICATION&gt;\" ]\n</code></pre> <p>Image Information</p> <pre><code>FROM arm64v8/alpine:3.18.3\nENV USER_NAME &lt;USER NAME&gt;\nENV USER_UID &lt;UID NUMBER&gt;\n\nENV GROUP_NAME &lt;GROUP NAME&gt;\nENV GROUP_GID &lt;GID NUMBER&gt;\n\nENV WORKDIR &lt;WORKDIR PATH&gt;\nWORKDIR $WORKDIR\nRUN apk add --no-cache tini=~0.19.0 &amp;&amp; \\\naddgroup -g $GROUP_GID $GROUP_NAME &amp;&amp; \\\nadduser -D -u $USER_UID -G $GROUP_NAME $USER_NAME &amp;&amp; \\\nchown -R $USER_NAME:$GROUP_NAME .\n\n# RUN apk add --no-cache curl=~8.2.1 &amp;&amp; \\\n#     curl --version\nUSER $USER_NAME\n# COPY [--chown=&lt;user&gt;:&lt;group&gt;] [--chmod=&lt;permission (ex. 755)&gt;] &lt;src&gt; &lt;dest&gt;   # with Docker Buildkit\n# RUN ...\nENTRYPOINT [ \"/sbin/tini\", \"--\", \"&lt;APPLICATION&gt;\" ]\n</code></pre> <p>Image Information</p>"},{"location":"Containers/Docker/01-base-dockerfile/#amazon-linux-2","title":"Amazon Linux 2","text":"GeneralAMD64ARM64 <pre><code>FROM public.ecr.aws/docker/library/amazonlinux:2.0.20230727.0\nENV TINI_VERSION v0.19.0\n\nENV USER_NAME &lt;USER NAME&gt;\nENV USER_UID &lt;UID NUMBER&gt;\n\nENV GROUP_NAME &lt;GROUP NAME&gt;\nENV GROUP_GID &lt;GID NUMBER&gt;\n\nENV WORKDIR &lt;WORKDIR PATH&gt;\nWORKDIR $WORKDIR\nRUN yum update -y &amp;&amp; \\\nyum install -y shadow-utils &amp;&amp; \\\ngroupadd -g $GROUP_GID $GROUP_NAME &amp;&amp; \\\nuseradd -l -g $GROUP_NAME -u $USER_UID $USER_NAME &amp;&amp; \\\nif [ \"$(arch)\" = \"x86_64\" ]; then export ARCH=\"amd64\"; else export ARCH=\"arm64\"; fi &amp;&amp; \\\ncurl -o /tini -L https://github.com/krallin/tini/releases/download/\"${TINI_VERSION}\"/tini-\"${ARCH}\" &amp;&amp; \\\nchmod +x /tini &amp;&amp; \\\nchown $USER_NAME:$GROUP_NAME /tini &amp;&amp; \\\nchown -R $USER_NAME:$GROUP_NAME .\n\nUSER $USER_NAME\n# COPY [--chown=&lt;user&gt;:&lt;group&gt;] [--chmod=&lt;permission (ex. 755)&gt;] &lt;src&gt; &lt;dest&gt;   # with Docker Buildkit\n# RUN ...\nENTRYPOINT [ \"/tini\", \"--\", \"&lt;APPLICATION&gt;\" ]\n</code></pre> <p>Image Information</p> <pre><code>FROM amd64/amazonlinux:2.0.20230727.0\nENV TINI_VERSION v0.19.0\n\nENV USER_NAME &lt;USER NAME&gt;\nENV USER_UID &lt;UID NUMBER&gt;\n\nENV GROUP_NAME &lt;GROUP NAME&gt;\nENV GROUP_GID &lt;GID NUMBER&gt;\n\nENV WORKDIR &lt;WORKDIR PATH&gt;\nWORKDIR $WORKDIR\nRUN yum update -y &amp;&amp; \\\nyum install -y shadow-utils &amp;&amp; \\\ngroupadd -g $GROUP_GID $GROUP_NAME &amp;&amp; \\\nuseradd -l -g $GROUP_NAME -u $USER_UID $USER_NAME &amp;&amp; \\\nif [ \"$(arch)\" = \"x86_64\" ]; then export ARCH=\"amd64\"; else export ARCH=\"arm64\"; fi &amp;&amp; \\\ncurl -o /tini -L https://github.com/krallin/tini/releases/download/\"${TINI_VERSION}\"/tini-\"${ARCH}\" &amp;&amp; \\\nchmod +x /tini &amp;&amp; \\\nchown $USER_NAME:$GROUP_NAME /tini &amp;&amp; \\\nchown -R $USER_NAME:$GROUP_NAME .\n\nUSER $USER_NAME\n# COPY [--chown=&lt;user&gt;:&lt;group&gt;] [--chmod=&lt;permission (ex. 755)&gt;] &lt;src&gt; &lt;dest&gt;   # with Docker Buildkit\n# RUN ...\nENTRYPOINT [ \"/tini\", \"--\", \"&lt;APPLICATION&gt;\" ]\n</code></pre> <p>Image Information</p> <pre><code>FROM arm64v8/amazonlinux:2.0.20230727.0\nENV TINI_VERSION v0.19.0\n\nENV USER_NAME &lt;USER NAME&gt;\nENV USER_UID &lt;UID NUMBER&gt;\n\nENV GROUP_NAME &lt;GROUP NAME&gt;\nENV GROUP_GID &lt;GID NUMBER&gt;\n\nENV WORKDIR &lt;WORKDIR PATH&gt;\nWORKDIR $WORKDIR\nRUN yum update -y &amp;&amp; \\\nyum install -y shadow-utils &amp;&amp; \\\ngroupadd -g $GROUP_GID $GROUP_NAME &amp;&amp; \\\nuseradd -l -g $GROUP_NAME -u $USER_UID $USER_NAME &amp;&amp; \\\nif [ \"$(arch)\" = \"x86_64\" ]; then export ARCH=\"amd64\"; else export ARCH=\"arm64\"; fi &amp;&amp; \\\ncurl -o /tini -L https://github.com/krallin/tini/releases/download/\"${TINI_VERSION}\"/tini-\"${ARCH}\" &amp;&amp; \\\nchmod +x /tini &amp;&amp; \\\nchown $USER_NAME:$GROUP_NAME /tini &amp;&amp; \\\nchown -R $USER_NAME:$GROUP_NAME .\n\nUSER $USER_NAME\n# COPY [--chown=&lt;user&gt;:&lt;group&gt;] [--chmod=&lt;permission (ex. 755)&gt;] &lt;src&gt; &lt;dest&gt;   # with Docker Buildkit\n# RUN ...\nENTRYPOINT [ \"/tini\", \"--\", \"&lt;APPLICATION&gt;\" ]\n</code></pre> <p>Image Information</p>"},{"location":"Containers/Docker/01-base-dockerfile/#centos","title":"CentOS","text":"GeneralAMD64ARM64 <pre><code>FROM public.ecr.aws/docker/library/centos:7.9.2009\nENV TINI_VERSION v0.19.0\n\nENV USER_NAME &lt;USER NAME&gt;\nENV USER_UID &lt;UID NUMBER&gt;\n\nENV GROUP_NAME &lt;GROUP NAME&gt;\nENV GROUP_GID &lt;GID NUMBER&gt;\n\nENV WORKDIR &lt;WORKDIR PATH&gt;\nWORKDIR $WORKDIR\nRUN yum update -y &amp;&amp; \\\ngroupadd -g $GROUP_GID $GROUP_NAME &amp;&amp; \\\nuseradd -l -g $GROUP_NAME -u $USER_UID $USER_NAME &amp;&amp; \\\nif [ \"$(arch)\" = \"x86_64\" ]; then export ARCH=\"amd64\"; else export ARCH=\"arm64\"; fi &amp;&amp; \\\ncurl -o /tini -L https://github.com/krallin/tini/releases/download/\"${TINI_VERSION}\"/tini-\"${ARCH}\" &amp;&amp; \\\nchmod +x /tini &amp;&amp; \\\nchown $USER_NAME:$GROUP_NAME /tini &amp;&amp; \\\nchown -R $USER_NAME:$GROUP_NAME .\n\nUSER $USER_NAME\n# COPY [--chown=&lt;user&gt;:&lt;group&gt;] [--chmod=&lt;permission (ex. 755)&gt;] &lt;src&gt; &lt;dest&gt;   # with Docker Buildkit\n# RUN ...\nENTRYPOINT [ \"/tini\", \"--\", \"&lt;APPLICATION&gt;\" ]\n</code></pre> <p>Image Information</p> <pre><code>FROM amd64/centos:7.9.2009\nENV TINI_VERSION v0.19.0\n\nENV USER_NAME &lt;USER NAME&gt;\nENV USER_UID &lt;UID NUMBER&gt;\n\nENV GROUP_NAME &lt;GROUP NAME&gt;\nENV GROUP_GID &lt;GID NUMBER&gt;\n\nENV WORKDIR &lt;WORKDIR PATH&gt;\nWORKDIR $WORKDIR\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-amd64 /tini\n\nRUN yum update -y &amp;&amp; \\\ngroupadd -g $GROUP_GID $GROUP_NAME &amp;&amp; \\\nuseradd -l -g $GROUP_NAME -u $USER_UID $USER_NAME &amp;&amp; \\\nchmod +x /tini &amp;&amp; \\\nchown $USER_NAME:$GROUP_NAME /tini &amp;&amp; \\\nchown -R $USER_NAME:$GROUP_NAME .\n\nUSER $USER_NAME\n# COPY [--chown=&lt;user&gt;:&lt;group&gt;] [--chmod=&lt;permission (ex. 755)&gt;] &lt;src&gt; &lt;dest&gt;   # with Docker Buildkit\n# RUN ...\nENTRYPOINT [ \"/tini\", \"--\", \"&lt;APPLICATION&gt;\" ]\n</code></pre> <p>Image Information</p> <pre><code>FROM arm64v8/centos:7.9.2009\nENV TINI_VERSION v0.19.0\n\nENV USER_NAME &lt;USER NAME&gt;\nENV USER_UID &lt;UID NUMBER&gt;\n\nENV GROUP_NAME &lt;GROUP NAME&gt;\nENV GROUP_GID &lt;GID NUMBER&gt;\n\nENV WORKDIR &lt;WORKDIR PATH&gt;\nWORKDIR $WORKDIR\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-arm64 /tini\n\nRUN yum update -y &amp;&amp; \\\ngroupadd -g $GROUP_GID $GROUP_NAME &amp;&amp; \\\nuseradd -l -g $GROUP_NAME -u $USER_UID $USER_NAME &amp;&amp; \\\nchmod +x /tini &amp;&amp; \\\nchown $USER_NAME:$GROUP_NAME /tini &amp;&amp; \\\nchown -R $USER_NAME:$GROUP_NAME .\n\nUSER $USER_NAME\n# COPY [--chown=&lt;user&gt;:&lt;group&gt;] [--chmod=&lt;permission (ex. 755)&gt;] &lt;src&gt; &lt;dest&gt;   # with Docker Buildkit\n# RUN ...\nENTRYPOINT [ \"/tini\", \"--\", \"&lt;APPLICATION&gt;\" ]\n</code></pre> <p>Image Information</p>"},{"location":"Containers/Docker/01-base-dockerfile/#debian","title":"Debian","text":"GeneralAMD64ARM64 <pre><code>FROM public.ecr.aws/docker/library/debian:11.7-slim\nENV USER_NAME &lt;USER NAME&gt;\nENV USER_UID &lt;UID NUMBER&gt;\n\nENV GROUP_NAME &lt;GROUP NAME&gt;\nENV GROUP_GID &lt;GID NUMBER&gt;\n\nENV WORKDIR &lt;WORKDIR PATH&gt;\nWORKDIR $WORKDIR\nRUN apt-get update -y &amp;&amp; \\\napt-get install -y --no-install-recommends tini=* &amp;&amp; \\\napt-get clean &amp;&amp; \\\nrm -rf /var/lib/apt/lists/* &amp;&amp; \\\ngroupadd -g $GROUP_GID $GROUP_NAME &amp;&amp; \\\nuseradd -l -g $GROUP_NAME -u $USER_UID $USER_NAME &amp;&amp; \\\nchown -R $USER_NAME:$GROUP_NAME .\n\n# RUN apt-get install -y curl=*\nUSER $USER_NAME\n# COPY [--chown=&lt;user&gt;:&lt;group&gt;] [--chmod=&lt;permission (ex. 755)&gt;] &lt;src&gt; &lt;dest&gt;   # with Docker Buildkit\n# RUN ...\nENTRYPOINT [ \"/usr/bin/tini\", \"--\", \"&lt;APPLICATION&gt;\" ]\n</code></pre> <p>Image Information</p> <pre><code>FROM amd64/debian:11.7-slim\nENV USER_NAME &lt;USER NAME&gt;\nENV USER_UID &lt;UID NUMBER&gt;\n\nENV GROUP_NAME &lt;GROUP NAME&gt;\nENV GROUP_GID &lt;GID NUMBER&gt;\n\nENV WORKDIR &lt;WORKDIR PATH&gt;\nWORKDIR $WORKDIR\nRUN apt-get update -y &amp;&amp; \\\napt-get install -y --no-install-recommends tini=* &amp;&amp; \\\napt-get clean &amp;&amp; \\\nrm -rf /var/lib/apt/lists/* &amp;&amp; \\\ngroupadd -g $GROUP_GID $GROUP_NAME &amp;&amp; \\\nuseradd -l -g $GROUP_NAME -u $USER_UID $USER_NAME &amp;&amp; \\\nchown -R $USER_NAME:$GROUP_NAME .\n\n# RUN apt-get install -y curl=*\nUSER $USER_NAME\n# COPY [--chown=&lt;user&gt;:&lt;group&gt;] [--chmod=&lt;permission (ex. 755)&gt;] &lt;src&gt; &lt;dest&gt;   # with Docker Buildkit\n# RUN ...\nENTRYPOINT [ \"/usr/bin/tini\", \"--\", \"&lt;APPLICATION&gt;\" ]\n</code></pre> <p>Image Information</p> <pre><code>FROM arm64v8/debian:11.7-slim\nENV USER_NAME &lt;USER NAME&gt;\nENV USER_UID &lt;UID NUMBER&gt;\n\nENV GROUP_NAME &lt;GROUP NAME&gt;\nENV GROUP_GID &lt;GID NUMBER&gt;\n\nENV WORKDIR &lt;WORKDIR PATH&gt;\nWORKDIR $WORKDIR\nRUN apt-get update -y &amp;&amp; \\\napt-get install -y --no-install-recommends tini=* &amp;&amp; \\\napt-get clean &amp;&amp; \\\nrm -rf /var/lib/apt/lists/* &amp;&amp; \\\ngroupadd -g $GROUP_GID $GROUP_NAME &amp;&amp; \\\nuseradd -l -g $GROUP_NAME -u $USER_UID $USER_NAME &amp;&amp; \\\nchown -R $USER_NAME:$GROUP_NAME .\n\n# RUN apt-get install -y curl=*\nUSER $USER_NAME\n# COPY [--chown=&lt;user&gt;:&lt;group&gt;] [--chmod=&lt;permission (ex. 755)&gt;] &lt;src&gt; &lt;dest&gt;   # with Docker Buildkit\n# RUN ...\nENTRYPOINT [ \"/usr/bin/tini\", \"--\", \"&lt;APPLICATION&gt;\" ]\n</code></pre> <p>Image Information</p>"},{"location":"Containers/Docker/01-base-dockerfile/#ubuntu","title":"Ubuntu","text":"GeneralAMD64ARM64 <pre><code>FROM public.ecr.aws/docker/library/ubuntu:22.04\nENV USER_NAME &lt;USER NAME&gt;\nENV USER_UID &lt;UID NUMBER&gt;\n\nENV GROUP_NAME &lt;GROUP NAME&gt;\nENV GROUP_GID &lt;GID NUMBER&gt;\n\nENV WORKDIR &lt;WORKDIR PATH&gt;\nWORKDIR $WORKDIR\nRUN apt-get update -y &amp;&amp; \\\napt-get install -y --no-install-recommends tini=* &amp;&amp; \\\napt-get clean &amp;&amp; \\\nrm -rf /var/lib/apt/lists/* &amp;&amp; \\\ngroupadd -g $GROUP_GID $GROUP_NAME &amp;&amp; \\\nuseradd -l -g $GROUP_NAME -u $USER_UID $USER_NAME &amp;&amp; \\\nchown -R $USER_NAME:$GROUP_NAME .\n\n# RUN apt-get install -y curl=*\nUSER $USER_NAME\n# COPY [--chown=&lt;user&gt;:&lt;group&gt;] [--chmod=&lt;permission (ex. 755)&gt;] &lt;src&gt; &lt;dest&gt;   # with Docker Buildkit\n# RUN ...\nENTRYPOINT [ \"/usr/bin/tini\", \"--\", \"&lt;APPLICATION&gt;\" ]\n</code></pre> <p>Image Information</p> <pre><code>FROM amd64/ubuntu:22.04\nENV USER_NAME &lt;USER NAME&gt;\nENV USER_UID &lt;UID NUMBER&gt;\n\nENV GROUP_NAME &lt;GROUP NAME&gt;\nENV GROUP_GID &lt;GID NUMBER&gt;\n\nENV WORKDIR &lt;WORKDIR PATH&gt;\nWORKDIR $WORKDIR\nRUN apt-get update -y &amp;&amp; \\\napt-get install -y --no-install-recommends tini=* &amp;&amp; \\\napt-get clean &amp;&amp; \\\nrm -rf /var/lib/apt/lists/* &amp;&amp; \\\ngroupadd -g $GROUP_GID $GROUP_NAME &amp;&amp; \\\nuseradd -l -g $GROUP_NAME -u $USER_UID $USER_NAME &amp;&amp; \\\nchown -R $USER_NAME:$GROUP_NAME .\n\n# RUN apt-get install -y curl=*\nUSER $USER_NAME\n# COPY [--chown=&lt;user&gt;:&lt;group&gt;] [--chmod=&lt;permission (ex. 755)&gt;] &lt;src&gt; &lt;dest&gt;   # with Docker Buildkit\n# RUN ...\nENTRYPOINT [ \"/usr/bin/tini\", \"--\", \"&lt;APPLICATION&gt;\" ]\n</code></pre> <p>Image Information</p> <pre><code>FROM arm64v8/ubuntu:22.04\nENV USER_NAME &lt;USER NAME&gt;\nENV USER_UID &lt;UID NUMBER&gt;\n\nENV GROUP_NAME &lt;GROUP NAME&gt;\nENV GROUP_GID &lt;GID NUMBER&gt;\n\nENV WORKDIR &lt;WORKDIR PATH&gt;\nWORKDIR $WORKDIR\nRUN apt-get update -y &amp;&amp; \\\napt-get install -y --no-install-recommends tini=* &amp;&amp; \\\napt-get clean &amp;&amp; \\\nrm -rf /var/lib/apt/lists/* &amp;&amp; \\\ngroupadd -g $GROUP_GID $GROUP_NAME &amp;&amp; \\\nuseradd -l -g $GROUP_NAME -u $USER_UID $USER_NAME &amp;&amp; \\\nchown -R $USER_NAME:$GROUP_NAME .\n\n# RUN apt-get install -y curl=*\nUSER $USER_NAME\n# COPY [--chown=&lt;user&gt;:&lt;group&gt;] [--chmod=&lt;permission (ex. 755)&gt;] &lt;src&gt; &lt;dest&gt;   # with Docker Buildkit\n# RUN ...\nENTRYPOINT [ \"/usr/bin/tini\", \"--\", \"&lt;APPLICATION&gt;\" ]\n</code></pre> <p>Image Information</p>"},{"location":"Containers/Docker/02-using-docker-on-kubernetes-pod/","title":"Using Docker on Kubernetes Pod","text":""},{"location":"Containers/Docker/02-using-docker-on-kubernetes-pod/#deploy-docker-pod","title":"Deploy docker pod","text":"docker-pod.yaml<pre><code>apiVersion: v1\nkind: ServiceAccount\nmetadata:\nname: internal-kubectl\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\nname: modify-pods\nrules:\n- apiGroups: [\"\"]\nresources:\n- pods\nverbs:\n- get\n- list\n- delete\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\nname: modify-pods-to-sa\nsubjects:\n- kind: ServiceAccount\nname: internal-kubectl\nroleRef:\nkind: Role\nname: modify-pods\napiGroup: rbac.authorization.k8s.io\n---\napiVersion: batch/v1\nkind: Job\nmetadata:\nname: kubectl-job\nnamespace: default\nlabels:\napp: kubectl-job\nspec:\ntemplate:\nspec:\nserviceAccountName: internal-kubectl\ncontainers:\n- name: kubectl\nimage: bitnami/kubectl:1.26.2-debian-11-r4\ncommand:\n- \"sh\"\n- \"-c\"\n- \"sleep 3600 &amp;&amp; kubectl delete pod -n default docker &amp;&amp; sleep 10 &amp;&amp; exit 0\"\nrestartPolicy: Never\n# tolerations:\n#   - key: \"key1\"         # taint key\n#     value: \"value1\"     # taint value\n#     operator: \"Equal\"\n#     effect: \"NoSchedule\"\n# nodeSelector:\n#   key1: value1            # node label key and value\nbackoffLimit: 0\nttlSecondsAfterFinished: 10\n---\napiVersion: v1\nkind: Pod\nmetadata:\nname: docker\nnamespace: default\nlabels:\napp: docker\nspec:\ncontainers:\n- name: docker\nimage: public.ecr.aws/docker/library/docker:24.0.5-dind-alpine3.18\nsecurityContext:\nprivileged: true\n# tolerations:\n#   - key: \"key1\"         # taint key\n#     value: \"value1\"     # taint value\n#     operator: \"Equal\" \n#     effect: \"NoSchedule\"\n# nodeSelector:\n#   key1: value1            # node label key and value\n</code></pre> <pre><code>kubectl apply -f docker-pod.yaml\n</code></pre>"},{"location":"Containers/Docker/02-using-docker-on-kubernetes-pod/#access-docker-pod","title":"Access docker pod","text":"<pre><code>kubectl exec -it docker -n default -- sh\n</code></pre> <p>Note</p> <p>You can use docker command after few seconds.</p>"},{"location":"Containers/Docker/02-using-docker-on-kubernetes-pod/#delete-docker-pod","title":"Delete docker pod","text":"<pre><code>kubectl delete -f docker-pod.yaml\n</code></pre>"},{"location":"Containers/Docker/03-multi-stage-build/","title":"Multi Stage Build","text":"Dockerfile<pre><code>FROM public.ecr.aws/docker/library/golang:1.20.3-alpine3.17 as builder\nWORKDIR /tmp/tiny-golang-image\nCOPY ./main.go ./\n\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -ldflags '-s -w' -o main main.go\n\nFROM public.ecr.aws/docker/library/alpine:3.17.3\nENV USER_NAME main\nENV USER_UID 1000\nENV GROUP_NAME main\nENV GROUP_GID 1000\nENV WORKDIR /app\nWORKDIR $WORKDIR\nRUN apk add --no-cache tini=~0.19.0 &amp;&amp; \\\naddgroup -g $GROUP_GID $GROUP_NAME &amp;&amp; \\\nadduser -D -u $USER_UID -G $GROUP_NAME $USER_NAME &amp;&amp; \\\nchown -R $USER_NAME:$GROUP_NAME . &amp;&amp; \\\napk add --no-cache curl=~8.0.1 &amp;&amp; \\\ncurl --version\n\nUSER $USER_NAME\nCOPY --from=builder --chown=main:main --chmod=755 /tmp/tiny-golang-image/main ./\n\nENTRYPOINT [ \"/sbin/tini\", \"--\", \"./main\" ]\n</code></pre> Linux (x86_64)Linux (ARM64) <pre><code>export DOCKER_BUILDKIT=1\nwget https://github.com/docker/buildx/releases/download/v0.11.2/buildx-v0.11.2.linux-amd64\nmkdir -p ~/.docker/cli-plugins\nmv buildx-v0.11.2.linux-amd64 ~/.docker/cli-plugins/docker-buildx\nchmod a+x ~/.docker/cli-plugins/docker-buildx\ndocker run --privileged --rm ghcr.io/marcus16-kang/binfmt:latest --install all\ndocker buildx create --use --driver docker-container --driver-opt image=ghcr.io/marcus16-kang/buildkit:latest\ndocker buildx build --platform linux/amd64,linux/arm64 --tag &lt;REPO&gt;:&lt;TAG&gt; --push .\n</code></pre> <pre><code>export DOCKER_BUILDKIT=1\nwget https://github.com/docker/buildx/releases/download/v0.11.2/buildx-v0.11.2.linux-arm64\nmkdir -p ~/.docker/cli-plugins\nmv buildx-v0.11.2.linux-arm64 ~/.docker/cli-plugins/docker-buildx\nchmod a+x ~/.docker/cli-plugins/docker-buildx\ndocker run --privileged --rm ghcr.io/marcus16-kang/binfmt:latest --install all\ndocker buildx create --use --driver docker-container --driver-opt image=ghcr.io/marcus16-kang/buildkit:latest\ndocker buildx build --platform linux/amd64,linux/arm64 --tag &lt;REPO&gt;:&lt;TAG&gt; --push .\n</code></pre>"},{"location":"Containers/ECR/01-create-ecr-repository/","title":"Create ECR Repository","text":"Linux Windows <pre><code>STACK_NAME=\"&lt;stack name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region code&gt;\"\n### Repository Configuration - General\nRepositoryName=\"\"       # [REQUIRED] The name of ECR repository.\n### Repository Configuration - Encryption\nEncryptionType=\"KMS\"    # `KMS`(default) or `AES256` | [REQUIRED] The type of ECR repository encryption.\nKmsKey=\"alias/aws/ecr\"  # [optional] The alias, ID, or ARN of KMS key for ECR repository encryption.\n### Repository Configuration - Scanning\nScanning=\"true\"         # `true`(default) or `false` | [REQUIRED] Enable or disable image scanning.\n### Repository Configuration - Immutable\nImmutable=\"IMMUTABLE\"   # `IMMUTABLE`(default) or `MUTABLE` | [REQUIRED] Mutable of immutable ECR repository's images.\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/ecr/repository.yaml\n\n# Using `deploy`\naws cloudformation deploy \\\n--template-file ./repository.yaml \\\n--stack-name $STACK_NAME \\\n--parameter-overrides \\\nProjectName=$PROJECT_NAME \\\nRepositoryName=$RepositoryName \\\nEncryptionType=$EncryptionType \\\nKmsKey=$KmsKey \\\nScanning=$Scanning \\\nImmutable=$Immutable \\\n--disable-rollback \\\n--tags project=$PROJECT_NAME \\\n--region $REGION\n# Using `create-stack`\naws cloudformation create-stack \\\n--template-body file://repository.yaml \\\n--stack-name $STACK_NAME \\\n--parameters \\\nParameterKey=ProjectName,ParameterValue=$PROJECT_NAME \\\nParameterKey=RepositoryName,ParameterValue=$RepositoryName \\\nParameterKey=EncryptionType,ParameterValue=$EncryptionType \\\nParameterKey=KmsKey,ParameterValue=$KmsKey \\\nParameterKey=Scanning,ParameterValue=$Scanning \\\nParameterKey=Immutable,ParameterValue=$Immutable \\\n--disable-rollback \\\n--tags Key=project,Value=$PROJECT_NAME \\\n--region $REGION\n</code></pre> <pre><code>$STACK_NAME=\"&lt;stack name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region code&gt;\"\n### Repository Configuration - General\n$RepositoryName=\"\"      # [REQUIRED] The name of ECR repository.\n### Repository Configuration - Encryption\n$EncryptionType=\"KMS\"   # `KMS`(default) or `AES256` | [REQUIRED] The type of ECR repository encryption.\n$KmsKey=\"alias/aws/ecr\" # [optional] The alias, ID, or ARN of KMS key for ECR repository encryption.\n### Repository Configuration - Scanning\n$Scanning=\"true\"        # `true`(default) or `false` | [REQUIRED] Enable or disable image scanning.\n### Repository Configuration - Immutable\n$Immutable=\"IMMUTABLE\"  # `IMMUTABLE`(default) or `MUTABLE` | [REQUIRED] Mutable of immutable ECR repository's images.\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/ecr/repository.yaml\n# Using `deploy`\naws cloudformation deploy `\n--template-file ./repository.yaml `\n--stack-name $STACK_NAME `\n--parameter-overrides `\nProjectName=$PROJECT_NAME `\nRepositoryName=$RepositoryName `\nEncryptionType=$EncryptionType `\nKmsKey=$KmsKey `\nScanning=$Scanning `\nImmutable=$Immutable `\n--disable-rollback `\n--tags project=$PROJECT_NAME `\n--region $REGION\n# Using `create-stack`\naws cloudformation create-stack `\n--template-body file://repository.yaml `\n--stack-name $STACK_NAME `\n--parameters `\nParameterKey=ProjectName,ParameterValue=$PROJECT_NAME `\nParameterKey=RepositoryName,ParameterValue=$RepositoryName `\nParameterKey=EncryptionType,ParameterValue=$EncryptionType `\nParameterKey=KmsKey,ParameterValue=$KmsKey `\nParameterKey=Scanning,ParameterValue=$Scanning `\nParameterKey=Immutable,ParameterValue=$Immutable `\n--disable-rollback `\n--tags Key=project,Value=$PROJECT_NAME `\n--region $REGION\n</code></pre>"},{"location":"Containers/ECS/01-create-ecs-cluster/","title":"Create ECS Cluster","text":"Linux Windows <pre><code>STACK_NAME=\"&lt;stack name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region code&gt;\"\n### ECS Cluster Configuration - General\nClusterName=\"\"                              # [REQUIRED] The name of ECS cluster.\n### ECS Cluster Configuration - Container Insights\nContainerInsights=\"enabled\"                 # `enabled`(default) of `disabled` | [optional] Enable of disable ECS cluster's container insights.\n### ECS Cluster Configuration - Alarm\nEnableClusterAlarms=\"true\"                  # `true`(default) of `false` | [optional] Enable of disable to create ECS cluster's alarms.\nCpuUtilizationAlarmName=\"\"                  # [optional] The name of CpuUtilizationAlarm.\nMemoryUtilizationAlarmName=\"\"               # [optional] The name of MemoryUtilizationAlarm.\nCpuUtilizationThreshold=\"70\"                # [optional] The number of CPUUtilization threshold. Default is 70(%).\nMemoryUtilizationThreshold=\"70\"             # [optional] The number of MemoryUtilization threshold. Default is 70(%).\n### ECS Capacity Provider Configuration - EC2\nEnableEc2CapacityProvider=\"false\"           # `true`(default) of `false` | [REQUIRED] Enable or disable EC2 capacity provider for ECS cluster.\nEc2VpcId=\"\"                                 # [REQUIRED] The VPC id of EC2 capacity provider for ECS cluster.\nEc2securityGroupName=\"\"                     # [REQUIRED] The security group name of EC2 capacity provider for ECS cluster.\nBastionSecurityGroupForEc2=\"\"               # [optional] The security group id of bastion security group.\nEc2RoleName=\"\"                              # [REQUIRED] The name of EC2 capacity provider for ECS cluster.\nEC2InstanceName=\"\"                          # [REQUIRED] The instance name of EC2 capacity provider for ECS cluster.\nEc2LaunchTemplateName=\"\"                    # [optional] The launch template name of EC2 capacity provider for ECS cluster.\nEc2InstanceArchitecture=\"\"                  # `x86-64` of `arm64` | [REQUIRED] The instance architecture of EC2 capacity provider for ECS cluster.\nEc2InstanceOs=\"\"                            # `amazonlinux2` of `bottlerocket` | [REQUIRED] The instance os of EC2 capacity provider for ECS cluster.\nEc2InstanceType=\"\"                          # [REQUIRED] The instance type of EC2 capacity provider for ECS cluster.\nEc2KeyName=\"\"                               # [optional] The key pair name of EC2 capacity provider for ECS cluster.\nEc2SshPort=\"22\"                             # [optional] The SSH port number of EC2 capacity provider for ECS cluster.\nEc2AutoScalingGroupName=\"\"                  # [optional] The auto scaling group name of EC2 capacity provider for ECS cluster.\nEc2AutoScalingDesiredSize=\"2\"               # [REQUIRED] The desired size of EC2 AutoScaling Group.\nEc2AutoScalingMinSize=\"2\"                   # [REQUIRED] The min size of EC2 AutoScaling Group.\nEc2AutoScalingMaxSize=\"10\"                  # [REQUIRED] The max size of EC2 AutoScaling Group.\nEc2AutoScalingSubnetIds=\"\"                  # [REQUIRED] The subnet id list of EC2 AutoScaling Group.\n### ECS Capacity Provider Configuration - Fargate\nEnableFargateCapacityProvider=\"false\"       # `false`(default) of `true` | [REQUIRED] Enable or disable Fargate capacity provider for ECS cluster.\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/ecs/cluster/cluster.yaml\n\naws cloudformation deploy \\\n--stack-name $STACK_NAME \\\n--template-file ./cluster.yaml \\\n--parameter-overrides \\\nProjectName=$PROJECT_NAME \\\nClusterName=$ClusterName \\\nContainerInsights=$ContainerInsights \\\nEnableClusterAlarms=$EnableClusterAlarms \\\nCpuUtilizationAlarmName=$CpuUtilizationAlarmName \\\nMemoryUtilizationAlarmName=$MemoryUtilizationAlarmName \\\nCpuUtilizationThreshold=$CpuUtilizationThreshold \\\nMemoryUtilizationThreshold=$MemoryUtilizationThreshold \\\nEnableEc2CapacityProvider=$EnableEc2CapacityProvider \\\nEc2VpcId=$Ec2VpcId \\\nEc2securityGroupName=$Ec2securityGroupName \\\nBastionSecurityGroupForEc2=$BastionSecurityGroupForEc2 \\\nEc2RoleName=$Ec2RoleName \\\nEC2InstanceName=$EC2InstanceName \\\nEc2LaunchTemplateName=$Ec2LaunchTemplateName \\\nEc2InstanceArchitecture=$Ec2InstanceArchitecture \\\nEc2InstanceOs=$Ec2InstanceOs \\\nEc2InstanceType=$Ec2InstanceType \\\nEc2KeyName=$Ec2KeyName \\\nEc2SshPort=$Ec2SshPort \\\nEc2AutoScalingGroupName=$Ec2AutoScalingGroupName \\\nEc2AutoScalingDesiredSize=$Ec2AutoScalingDesiredSize \\\nEc2AutoScalingMinSize=$Ec2AutoScalingMinSize \\\nEc2AutoScalingMaxSize=$Ec2AutoScalingMaxSize \\\nEc2AutoScalingSubnetIds=$Ec2AutoScalingSubnetIds \\\nEnableFargateCapacityProvider=$EnableFargateCapacityProvider \\\n--tags project=$PROJECT_NAME \\\n--capabilities CAPABILITY_NAMED_IAM \\\n--disable-rollback \\\n--region $REGION\n</code></pre> <pre><code>$STACK_NAME=\"&lt;stack name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region code&gt;\"\n### ECS Cluster Configuration - General\n$ClusterName=\"\"                             # [REQUIRED] The name of ECS cluster.\n### ECS Cluster Configuration - Container Insights\n$ContainerInsights=\"enabled\"                # `enabled`(default) of `disabled` | [optional] Enable of disable ECS cluster's container insights.\n### ECS Cluster Configuration - Alarm\n$EnableClusterAlarms=\"true\"                 # `true`(default) of `false` | [optional] Enable of disable to create ECS cluster's alarms.\n$CpuUtilizationAlarmName=\"\"                 # [optional] The name of CpuUtilizationAlarm.\n$MemoryUtilizationAlarmName=\"\"              # [optional] The name of MemoryUtilizationAlarm.\n$CpuUtilizationThreshold=\"70\"               # [optional] The number of CPUUtilization threshold. Default is 70(%).\n$MemoryUtilizationThreshold=\"70\"            # [optional] The number of MemoryUtilization threshold. Default is 70(%).\n### ECS Capacity Provider Configuration - EC2\n$EnableEc2CapacityProvider=\"false\"          # `true`(default) of `false` | [REQUIRED] Enable or disable EC2 capacity provider for ECS cluster.\n$Ec2VpcId=\"\"                                # [REQUIRED] The VPC id of EC2 capacity provider for ECS cluster.\n$Ec2securityGroupName=\"\"                    # [REQUIRED] The security group name of EC2 capacity provider for ECS cluster.\n$BastionSecurityGroupForEc2=\"\"              # [optional] The security group id of bastion security group.\n$Ec2RoleName=\"\"                             # [REQUIRED] The name of EC2 capacity provider for ECS cluster.\n$EC2InstanceName=\"\"                         # [REQUIRED] The instance name of EC2 capacity provider for ECS cluster.\n$Ec2LaunchTemplateName=\"\"                   # [optional] The launch template name of EC2 capacity provider for ECS cluster.\n$Ec2InstanceArchitecture=\"\"                 # `x86-64` of `arm64` | [REQUIRED] The instance architecture of EC2 capacity provider for ECS cluster.\n$Ec2InstanceOs=\"\"                           # `amazonlinux2` of `bottlerocket` | [REQUIRED] The instance os of EC2 capacity provider for ECS cluster.\n$Ec2InstanceType=\"\"                         # [REQUIRED] The instance type of EC2 capacity provider for ECS cluster.\n$Ec2KeyName=\"\"                              # [optional] The key pair name of EC2 capacity provider for ECS cluster.\n$Ec2SshPort=\"22\"                            # [optional] The SSH port number of EC2 capacity provider for ECS cluster.\n$Ec2AutoScalingGroupName=\"\"                 # [optional] The auto scaling group name of EC2 capacity provider for ECS cluster.\n$Ec2AutoScalingDesiredSize=\"2\"              # [REQUIRED] The desired size of EC2 AutoScaling Group.\n$Ec2AutoScalingMinSize=\"2\"                  # [REQUIRED] The min size of EC2 AutoScaling Group.\n$Ec2AutoScalingMaxSize=\"10\"                 # [REQUIRED] The max size of EC2 AutoScaling Group.\n$Ec2AutoScalingSubnetIds=\"\"                 # [REQUIRED] The subnet id list of EC2 AutoScaling Group.\n### ECS Capacity Provider Configuration - Fargate\n$EnableFargateCapacityProvider=\"false\"      # `false`(default) of `true` | [REQUIRED] Enable or disable Fargate capacity provider for ECS cluster.\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/ecs/cluster/cluster.yaml\naws cloudformation deploy `\n--stack-name $STACK_NAME `\n--template-file ./cluster.yaml `\n--parameter-overrides `\nProjectName=$PROJECT_NAME `\nClusterName=$ClusterName `\nContainerInsights=$ContainerInsights `\nEnableClusterAlarms=$EnableClusterAlarms `\nCpuUtilizationAlarmName=$CpuUtilizationAlarmName `\nMemoryUtilizationAlarmName=$MemoryUtilizationAlarmName `\nCpuUtilizationThreshold=$CpuUtilizationThreshold `\nMemoryUtilizationThreshold=$MemoryUtilizationThreshold `\nEnableEc2CapacityProvider=$EnableEc2CapacityProvider `\nEc2VpcId=$Ec2VpcId `\nEc2securityGroupName=$Ec2securityGroupName `\nBastionSecurityGroupForEc2=$BastionSecurityGroupForEc2 `\nEc2RoleName=$Ec2RoleName `\nEC2InstanceName=$EC2InstanceName `\nEc2LaunchTemplateName=$Ec2LaunchTemplateName `\nEc2InstanceArchitecture=$Ec2InstanceArchitecture `\nEc2InstanceOs=$Ec2InstanceOs `\nEc2InstanceType=$Ec2InstanceType `\nEc2KeyName=$Ec2KeyName `\nEc2SshPort=$Ec2SshPort `\nEc2AutoScalingGroupName=$Ec2AutoScalingGroupName `\nEc2AutoScalingDesiredSize=$Ec2AutoScalingDesiredSize `\nEc2AutoScalingMinSize=$Ec2AutoScalingMinSize `\nEc2AutoScalingMaxSize=$Ec2AutoScalingMaxSize `\nEc2AutoScalingSubnetIds=$Ec2AutoScalingSubnetIds `\nEnableFargateCapacityProvider=$EnableFargateCapacityProvider `\n--tags project=$PROJECT_NAME `\n--capabilities CAPABILITY_NAMED_IAM `\n--disable-rollback `\n--region $REGION\n</code></pre>"},{"location":"Containers/ECS/02-create-ecs-service/","title":"Create ECS Service","text":"Linux Windows <pre><code>STACK_NAME=\"&lt;stack name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region code&gt;\"\n### Service Configuration - General\nClusterName=\"\"              # [REQUIRED] The name of ECS cluster.\nServiceName=\"\"              # [REQUIRED] The name of this service.\nCapacityProviderName=\"\"     # `FARGATE` or capacity provider name | [REQUIRED] The name of capacity provider.\nDesiredCount=\"\"             # [REQUIRED] The number of task in service.\nTaskDefinition=\"\"           # [REQUIRED] The family and revision (family:revision).\nDeploymentType=\"ECS\"        # `ECS`(default) or `CODE_DEPLOY` | [REQUIRED] The type of service's deployment type.\n### Service Configuration - Load Balancer\nContainerName=\"\"            # [REQUIRED] The name of the container to associate with the laod balancer.\nContainerPort=\"\"            # [REQUIRED] The port on the container to associate with the load balancer.\nTargetGroupArn=\"\"           # [REQUIRED] The ARN of the ALB target group.\n### Service Configuration - Network\nSecurityGroups=\"\"           # [REQUIRED] The IDs of the security groups associated with the service.\nSubnets=\"\"                  # [REQUIRED] The IDs of the subents associated with the service.\n### Service Configuration - Service Discovery\nCloudMapServiceId=\"\"        # [optional] The ID of Cloud Map service for service discovery in ECS.\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/ecs/service/service.yaml\n\naws cloudformation deploy \\\n--stack-name $STACK_NAME \\\n--template-file ./service.yaml \\\n--parameter-overrides \\\nProjectName=$PROJECT_NAME \\\nClusterName=$ClusterName \\\nServiceName=$ServiceName \\\nCapacityProviderName=$CapacityProviderName \\\nDesiredCount=$DesiredCount \\\nTaskDefinition=$TaskDefinition \\\nDeploymentType=$DeploymentType \\\nContainerName=$ContainerName \\\nContainerPort=$ContainerPort \\\nTargetGroupArn=$TargetGroupArn \\\nSecurityGroups=$SecurityGroups \\\nSubnets=$Subnets \\\nCloudMapServiceId=$CloudMapServiceId \\\n--tags project=$PROJECT_NAME \\\n--capabilities CAPABILITY_NAMED_IAM \\\n--disable-rollback \\\n--region $REGION\n</code></pre> <pre><code>$STACK_NAME=\"&lt;stack name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region code&gt;\"\n### Service Configuration - General\n$ClusterName=\"\"             # [REQUIRED] The name of ECS cluster.\n$ServiceName=\"\"             # [REQUIRED] The name of this service.\n$CapacityProviderName=\"\"    # `FARGATE` or capacity provider name | [REQUIRED] The name of capacity provider.\n$DesiredCount=\"\"            # [REQUIRED] The number of task in service.\n$TaskDefinition=\"\"          # [REQUIRED] The family and revision (family:revision).\n$DeploymentType=\"ECS\"       # `ECS`(default) or `CODE_DEPLOY` | [REQUIRED] The type of service's deployment type.\n### Service Configuration - Load Balancer\n$ContainerName=\"\"           # [REQUIRED] The name of the container to associate with the laod balancer.\n$ContainerPort=\"\"           # [REQUIRED] The port on the container to associate with the load balancer.\n$TargetGroupArn=\"\"          # [REQUIRED] The ARN of the ALB target group.\n### Service Configuration - Network\n$SecurityGroups=\"\"          # [REQUIRED] The IDs of the security groups associated with the service.\n$Subnets=\"\"                 # [REQUIRED] The IDs of the subents associated with the service.\n### Service Configuration - Service Discovery\n$CloudMapServiceId=\"\"       # [optional] The ID of Cloud Map service for service discovery in ECS.\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/ecs/service/service.yaml\naws cloudformation deploy `\n--stack-name $STACK_NAME `\n--template-file ./service.yaml `\n--parameter-overrides `\nProjectName=$PROJECT_NAME `\nClusterName=$ClusterName `\nServiceName=$ServiceName `\nCapacityProviderName=$CapacityProviderName `\nDesiredCount=$DesiredCount `\nTaskDefinition=$TaskDefinition `\nDeploymentType=$DeploymentType `\nContainerName=$ContainerName `\nContainerPort=$ContainerPort `\nTargetGroupArn=$TargetGroupArn `\nSecurityGroups=$SecurityGroups `\nSubnets=$Subnets `\nCloudMapServiceId=$CloudMapServiceId `\n--tags project=$PROJECT_NAME `\n--capabilities CAPABILITY_NAMED_IAM `\n--disable-rollback `\n--region $REGION\n</code></pre>"},{"location":"Containers/EKS/01-install-tools/","title":"Install tools","text":""},{"location":"Containers/EKS/01-install-tools/#install-utilities","title":"Install utilities","text":"RedHatDebianWindows <pre><code>sudo yum update -y\nsudo yum install -y unzip jq bash-completion\n</code></pre> <pre><code>sudo apt-get update -y\nsudo apt-get upgrade -y\nsudo apt-get install -y unzip jq bash-completion\n</code></pre> <pre><code>Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))\n</code></pre> <p>Note</p> <p>You should run this command as administrator.</p>"},{"location":"Containers/EKS/01-install-tools/#install-kubectl","title":"Install <code>kubectl</code>","text":"Linux (x86_64)Linux (ARM64)Windows (Chocolatey)Windows (Executable) Kubernetes <code>1.27</code> <pre><code>curl -LO https://s3.us-west-2.amazonaws.com/amazon-eks/1.27.1/2023-04-19/bin/linux/amd64/kubectl\nsudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl\nsudo install -o root -g root -m 0755 kubectl /usr/bin/kubectl\nkubectl version --short --client\nsudo kubectl version --short --client\nrm kubectl\n</code></pre> Kubernetes <code>1.26</code> <pre><code>curl -LO https://s3.us-west-2.amazonaws.com/amazon-eks/1.26.4/2023-05-11/bin/linux/amd64/kubectl\nsudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl\nsudo install -o root -g root -m 0755 kubectl /usr/bin/kubectl\nkubectl version --short --client\nsudo kubectl version --short --client\nrm kubectl\n</code></pre> Kubernetes <code>1.25</code> <pre><code>curl -LO https://s3.us-west-2.amazonaws.com/amazon-eks/1.25.9/2023-05-11/bin/linux/amd64/kubectl\nsudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl\nsudo install -o root -g root -m 0755 kubectl /usr/bin/kubectl\nkubectl version --short --client\nsudo kubectl version --short --client\nrm kubectl\n</code></pre> Kubernetes <code>1.24</code> <pre><code>curl -LO https://s3.us-west-2.amazonaws.com/amazon-eks/1.24.13/2023-05-11/bin/linux/amd64/kubectl\nsudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl\nsudo install -o root -g root -m 0755 kubectl /usr/bin/kubectl\nkubectl version --short --client\nsudo kubectl version --short --client\nrm kubectl\n</code></pre> Kubernetes <code>1.23</code> <pre><code>curl -LO https://s3.us-west-2.amazonaws.com/amazon-eks/1.23.17/2023-05-11/bin/linux/amd64/kubectl\nsudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl\nsudo install -o root -g root -m 0755 kubectl /usr/bin/kubectl\nkubectl version --short --client\nsudo kubectl version --short --client\nrm kubectl\n</code></pre> Kubernetes <code>1.27</code> <pre><code>curl -LO https://s3.us-west-2.amazonaws.com/amazon-eks/1.27.1/2023-04-19/bin/linux/arm64/kubectl\nsudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl\nsudo install -o root -g root -m 0755 kubectl /usr/bin/kubectl\nkubectl version --short --client\nsudo kubectl version --short --client\nrm kubectl\n</code></pre> Kubernetes <code>1.26</code> <pre><code>curl -LO https://s3.us-west-2.amazonaws.com/amazon-eks/1.26.4/2023-05-11/bin/linux/arm64/kubectl\nsudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl\nsudo install -o root -g root -m 0755 kubectl /usr/bin/kubectl\nkubectl version --short --client\nsudo kubectl version --short --client\nrm kubectl\n</code></pre> Kubernetes <code>1.25</code> <pre><code>curl -LO https://s3.us-west-2.amazonaws.com/amazon-eks/1.25.9/2023-05-11/bin/linux/arm64/kubectl\nsudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl\nsudo install -o root -g root -m 0755 kubectl /usr/bin/kubectl\nkubectl version --short --client\nsudo kubectl version --short --client\nrm kubectl\n</code></pre> Kubernetes <code>1.24</code> <pre><code>curl -LO https://s3.us-west-2.amazonaws.com/amazon-eks/1.24.13/2023-05-11/bin/linux/arm64/kubectl\nsudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl\nsudo install -o root -g root -m 0755 kubectl /usr/bin/kubectl\nkubectl version --short --client\nsudo kubectl version --short --client\nrm kubectl\n</code></pre> Kubernetes <code>1.23</code> <pre><code>curl -LO https://s3.us-west-2.amazonaws.com/amazon-eks/1.23.17/2023-05-11/bin/linux/arm64/kubectl\nsudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl\nsudo install -o root -g root -m 0755 kubectl /usr/bin/kubectl\nkubectl version --short --client\nsudo kubectl version --short --client\nrm kubectl\n</code></pre> <pre><code>choco install kubernetes-cli\n</code></pre> Kubernetes <code>1.27</code> <pre><code>curl.exe -LO \"https://s3.us-west-2.amazonaws.com/amazon-eks/1.27.1/2023-04-19/bin/windows/amd64/kubectl.exe\"\n</code></pre> Kubernetes <code>1.26</code> <pre><code>curl.exe -LO \"https://s3.us-west-2.amazonaws.com/amazon-eks/1.26.4/2023-05-11/bin/windows/amd64/kubectl.exe\"\n</code></pre> Kubernetes <code>1.25</code> <pre><code>curl.exe -LO \"https://s3.us-west-2.amazonaws.com/amazon-eks/1.25.9/2023-05-11/bin/windows/amd64/kubectl.exe\"\n</code></pre> Kubernetes <code>1.24</code> <pre><code>curl.exe -LO \"https://s3.us-west-2.amazonaws.com/amazon-eks/1.24.13/2023-05-11/bin/windows/amd64/kubectl.exe\"\n</code></pre> Kubernetes <code>1.23</code> <pre><code>curl.exe -LO \"https://s3.us-west-2.amazonaws.com/amazon-eks/1.23.17/2023-05-11/bin/windows/amd64/kubectl.exe\"\n</code></pre> Enable Shell Autocomplete <pre><code>kubectl completion bash | sudo tee /etc/bash_completion.d/kubectl &gt; /dev/null\nsudo chmod a+r /etc/bash_completion.d/kubectl\n</code></pre> <p>AWS Documentation</p>"},{"location":"Containers/EKS/01-install-tools/#install-eksctl","title":"Install <code>eksctl</code>","text":"Linux (x86_64)Linux (ARM64)Windows (Chocolatey)Windows (Executable) <pre><code>curl --silent --location \"https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_Linux_amd64.tar.gz\" | tar xz -C /tmp\nsudo cp /tmp/eksctl /usr/local/bin\nsudo cp /tmp/eksctl /usr/bin\neksctl version\nsudo eksctl version\n</code></pre> <pre><code>curl --silent --location \"https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_Linux_arm64.tar.gz\" | tar xz -C /tmp\nsudo cp /tmp/eksctl /usr/local/bin\nsudo cp /tmp/eksctl /usr/bin\neksctl version\nsudo eksctl version\n</code></pre> <pre><code>choco install eksctl\n</code></pre> <pre><code>curl.exe -LO https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_Windows_amd64.zip\nExpand-Archive ./eksctl_Windows_amd64.zip -DestinationPath ./\nrm eksctl_Windows_amd64.zip\n</code></pre> Enable Shell Autocomplete <pre><code>eksctl completion bash | sudo tee /etc/bash_completion.d/eksctl &gt; /dev/null\nsudo chmod a+r /etc/bash_completion.d/eksctl\n</code></pre> Minimum IAM policies for <code>eksctl</code> AmazonEC2FullAccess (AWS Managed Policy)<pre><code>{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Action\": \"ec2:*\",\n\"Effect\": \"Allow\",\n\"Resource\": \"*\"\n},\n{\n\"Effect\": \"Allow\",\n\"Action\": \"elasticloadbalancing:*\",\n\"Resource\": \"*\"\n},\n{\n\"Effect\": \"Allow\",\n\"Action\": \"cloudwatch:*\",\n\"Resource\": \"*\"\n},\n{\n\"Effect\": \"Allow\",\n\"Action\": \"autoscaling:*\",\n\"Resource\": \"*\"\n},\n{\n\"Effect\": \"Allow\",\n\"Action\": \"iam:CreateServiceLinkedRole\",\n\"Resource\": \"*\",\n\"Condition\": {\n\"StringEquals\": {\n\"iam:AWSServiceName\": [\n\"autoscaling.amazonaws.com\",\n\"ec2scheduled.amazonaws.com\",\n\"elasticloadbalancing.amazonaws.com\",\n\"spot.amazonaws.com\",\n\"spotfleet.amazonaws.com\",\n\"transitgateway.amazonaws.com\"\n]\n}\n}\n}\n]\n}\n</code></pre> AWSCloudFormationFullAccess (AWS Managed Policy)<pre><code>{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Action\": [\n\"cloudformation:*\"\n],\n\"Resource\": \"*\"\n}\n]\n}\n</code></pre> EksAllAccess<pre><code>{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Action\": \"eks:*\",\n\"Resource\": \"*\"\n},\n{\n\"Action\": [\n\"ssm:GetParameter\",\n\"ssm:GetParameters\"\n],\n\"Resource\": [\n\"arn:aws:ssm:*:&lt;account_id&gt;:parameter/aws/*\",\n\"arn:aws:ssm:*::parameter/aws/*\"\n],\n\"Effect\": \"Allow\"\n},\n{\n\"Action\": [\n\"kms:CreateGrant\",\n\"kms:DescribeKey\"\n],\n\"Resource\": \"*\",\n\"Effect\": \"Allow\"\n},\n{\n\"Action\": [\n\"logs:PutRetentionPolicy\"\n],\n\"Resource\": \"*\",\n\"Effect\": \"Allow\"\n}        ]\n}\n</code></pre> IamLimitedAccess<pre><code>{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Action\": [\n\"iam:CreateInstanceProfile\",\n\"iam:DeleteInstanceProfile\",\n\"iam:GetInstanceProfile\",\n\"iam:RemoveRoleFromInstanceProfile\",\n\"iam:GetRole\",\n\"iam:CreateRole\",\n\"iam:DeleteRole\",\n\"iam:AttachRolePolicy\",\n\"iam:PutRolePolicy\",\n\"iam:ListInstanceProfiles\",\n\"iam:AddRoleToInstanceProfile\",\n\"iam:ListInstanceProfilesForRole\",\n\"iam:PassRole\",\n\"iam:DetachRolePolicy\",\n\"iam:DeleteRolePolicy\",\n\"iam:GetRolePolicy\",\n\"iam:GetOpenIDConnectProvider\",\n\"iam:CreateOpenIDConnectProvider\",\n\"iam:DeleteOpenIDConnectProvider\",\n\"iam:TagOpenIDConnectProvider\",\n\"iam:ListAttachedRolePolicies\",\n\"iam:TagRole\",\n\"iam:GetPolicy\",\n\"iam:CreatePolicy\",\n\"iam:DeletePolicy\",\n\"iam:ListPolicyVersions\"\n],\n\"Resource\": [\n\"arn:aws:iam::&lt;account_id&gt;:instance-profile/eksctl-*\",\n\"arn:aws:iam::&lt;account_id&gt;:role/eksctl-*\",\n\"arn:aws:iam::&lt;account_id&gt;:policy/eksctl-*\",\n\"arn:aws:iam::&lt;account_id&gt;:oidc-provider/*\",\n\"arn:aws:iam::&lt;account_id&gt;:role/aws-service-role/eks-nodegroup.amazonaws.com/AWSServiceRoleForAmazonEKSNodegroup\",\n\"arn:aws:iam::&lt;account_id&gt;:role/eksctl-managed-*\"\n]\n},\n{\n\"Effect\": \"Allow\",\n\"Action\": [\n\"iam:GetRole\"\n],\n\"Resource\": [\n\"arn:aws:iam::&lt;account_id&gt;:role/*\"\n]\n},\n{\n\"Effect\": \"Allow\",\n\"Action\": [\n\"iam:CreateServiceLinkedRole\"\n],\n\"Resource\": \"*\",\n\"Condition\": {\n\"StringEquals\": {\n\"iam:AWSServiceName\": [\n\"eks.amazonaws.com\",\n\"eks-nodegroup.amazonaws.com\",\n\"eks-fargate.amazonaws.com\"\n]\n}\n}\n}\n]\n}\n</code></pre> <p>eksctl Documentation</p> <p>AWS Documentation</p>"},{"location":"Containers/EKS/01-install-tools/#install-helm","title":"Install <code>helm</code>","text":"Linux (x86_64)Linux (ARM64)Windows (Chocolatey)Windows (Executable) <pre><code>curl -LO https://get.helm.sh/helm-v3.12.2-linux-amd64.tar.gz\ntar -xvzf helm-v3.12.2-linux-amd64.tar.gz\nsudo install -o root -g root -m 0755 linux-amd64/helm /usr/local/bin/helm\nsudo install -o root -g root -m 0755 linux-amd64/helm /usr/bin/helm\nhelm version\nsudo helm version\nrm -rf linux-amd64\nrm -rf helm-v3.12.2-linux-amd64.tar.gz\n</code></pre> <pre><code>curl -LO https://get.helm.sh/helm-v3.12.2-linux-arm64.tar.gz\ntar -xvzf helm-v3.12.2-linux-arm64.tar.gz\nsudo install -o root -g root -m 0755 linux-arm64/helm /usr/local/bin/helm\nsudo install -o root -g root -m 0755 linux-arm64/helm /usr/bin/helm\nhelm version\nsudo helm version\nrm -rf linux-arm64\nrm -rf helm-v3.12.2-linux-arm64.tar.gz\n</code></pre> <pre><code>choco install kubernetes-helm\n</code></pre> <pre><code>curl.exe -LO https://get.helm.sh/helm-v3.12.2-windows-amd64.zip\nExpand-Archive ./helm-v3.12.2-windows-amd64.zip -DestinationPath ./\ncp windows-amd64/helm.exe ./helm.exe\nrm helm-v3.12.2-windows-amd64.zip\nrm -r windows-amd64\n</code></pre> Enable Shell Autocomplete <pre><code>helm completion bash | sudo tee /etc/bash_completion.d/helm &gt; /dev/null\nsudo chmod a+r /etc/bash_completion.d/helm\n</code></pre> <p>AWS Documentation</p>"},{"location":"Containers/EKS/01-install-tools/#install-docker","title":"Install <code>docker</code>","text":"RedHatDebian <pre><code>sudo yum install -y docker\nsudo systemctl start docker\nsudo systemctl enable docker\nsudo usermod -a -G docker ec2-user\necho \"export DOCKER_BUILDKIT=1\" | sudo tee -a /etc/bashrc\n</code></pre> <pre><code>sudo apt-get install -y docker docker.io\nsudo systemctl start docker\nsudo systemctl enable docker\nsudo usermod -a -G docker ubuntu\necho \"export DOCKER_BUILDKIT=1\" | sudo tee -a /etc/bashrc\n</code></pre> Enable Shell Autocomplete <pre><code>sudo curl -sL -o /etc/bash_completion.d/docker https://raw.githubusercontent.com/docker/cli/master/contrib/completion/bash/docker\nsudo chmod a+r /etc/bash_completion.d/docker\n</code></pre>"},{"location":"Containers/EKS/01-install-tools/#install-docker-buildx","title":"Install <code>docker buildx</code>","text":"Linux (x86_64)Linux (ARM64) <pre><code>export DOCKER_BUILDKIT=1\nwget https://github.com/docker/buildx/releases/download/v0.11.2/buildx-v0.11.2.linux-amd64\nmkdir -p ~/.docker/cli-plugins\nmv buildx-v0.11.2.linux-amd64 ~/.docker/cli-plugins/docker-buildx\nchmod a+x ~/.docker/cli-plugins/docker-buildx\ndocker run --privileged --rm ghcr.io/marcus16-kang/binfmt:amd64 --install all\n</code></pre> <pre><code>export DOCKER_BUILDKIT=1\nwget https://github.com/docker/buildx/releases/download/v0.11.2/buildx-v0.11.2.linux-arm64\nmkdir -p ~/.docker/cli-plugins\nmv buildx-v0.11.2.linux-arm64 ~/.docker/cli-plugins/docker-buildx\nchmod a+x ~/.docker/cli-plugins/docker-buildx\ndocker run --privileged --rm ghcr.io/marcus16-kang/binfmt:arm64 --install all\n</code></pre> Note <p>You can build and push using this command:</p> <pre><code>docker buildx build --platform linux/amd64,linux/arm64 --tag &lt;IMAGE_TAG&gt; --push .\n</code></pre> <p>Buildx Repository</p>"},{"location":"Containers/EKS/01-install-tools/#install-k9s","title":"Install <code>k9s</code>","text":"<p>YOU SHOULD INSTALL <code>awscliv2</code> IN HERE</p> Linux (x86_64)Linux (ARM64)Windows (Chocolatey)Windows (Executable) <pre><code>curl --silent --location \"https://github.com/derailed/k9s/releases/download/v0.27.4/k9s_Linux_amd64.tar.gz\" | tar xz -C /tmp\nsudo cp /tmp/k9s /usr/local/bin\nsudo cp /tmp/k9s /usr/bin\nk9s version\nsudo k9s version\n</code></pre> <pre><code>curl --silent --location \"https://github.com/derailed/k9s/releases/download/v0.27.4/k9s_Linux_arm64.tar.gz\" | tar xz -C /tmp\nsudo cp /tmp/k9s /usr/local/bin\nsudo cp /tmp/k9s /usr/bin\nk9s version\nsudo k9s version\n</code></pre> <pre><code>choco install k9s\n</code></pre> <pre><code>curl.exe -LO https://github.com/derailed/k9s/releases/download/v0.27.4/k9s_Windows_amd64.zip\nExpand-Archive ./k9s_Windows_amd64.zip -DestinationPath ./\nrm k9s_Windows_amd64.zip\nrm LICENSE\nrm README.md\n./k9s.exe version\n</code></pre> Enable Shell Autocomplete <pre><code>k9s completion bash | sudo tee /etc/bash_completion.d/k9s &gt; /dev/null\nsudo chmod a+r /etc/bash_completion.d/k9s\n</code></pre> <p>K9s Documentation</p>"},{"location":"Containers/EKS/01-install-tools/#install-kubectx","title":"Install <code>kubectx</code>","text":"Linux (x86_64)Linux (ARM64)Windows (Chocolatey)Windows (Executable) <pre><code>wget https://github.com/ahmetb/kubectx/releases/download/v0.9.5/kubectx\nsudo install -o root -g root -m 0755 kubectx /usr/local/bin/kubectx\nsudo install -o root -g root -m 0755 kubectx /usr/bin/kubectx\nkubectx -h\nrm ./kubectx\n</code></pre> <pre><code>wget https://github.com/ahmetb/kubectx/releases/download/v0.9.5/kubectx\nsudo install -o root -g root -m 0755 kubectx /usr/local/bin/kubectx\nsudo install -o root -g root -m 0755 kubectx /usr/bin/kubectx\nkubectx -h\nrm ./kubectx\n</code></pre> <pre><code>choco install kubectx\n</code></pre> <pre><code>curl.exe -LO https://github.com/ahmetb/kubectx/releases/download/v0.9.5/kubectx_v0.9.5_windows_x86_64.zip\nExpand-Archive ./kubectx_v0.9.5_windows_x86_64.zip -DestinationPath ./\nrm kubectx_v0.9.5_windows_x86_64.zip\nrm LICENSE\n</code></pre> Enable Shell Autocomplete <pre><code>sudo curl -sL -o /etc/bash_completion.d/kubectx https://raw.githubusercontent.com/ahmetb/kubectx/master/completion/kubectx.bash\nsudo chmod a+r /etc/bash_completion.d/kubectx\n</code></pre> <p>kubectx Documentations</p>"},{"location":"Containers/EKS/01-install-tools/#install-kubens","title":"Install <code>kubens</code>","text":"Linux (x86_64)Linux (ARM64)Windows (Chocolatey)Windows (Executable) <pre><code>wget https://github.com/ahmetb/kubectx/releases/download/v0.9.5/kubens\nsudo install -o root -g root -m 0755 kubens /usr/local/bin/kubens\nsudo install -o root -g root -m 0755 kubens /usr/bin/kubens\nkubens -h\nrm ./kubens\n</code></pre> <pre><code>wget https://github.com/ahmetb/kubectx/releases/download/v0.9.5/kubens\nsudo install -o root -g root -m 0755 kubens /usr/local/bin/kubens\nsudo install -o root -g root -m 0755 kubens /usr/bin/kubens\nkubens -h\nrm ./kubens\n</code></pre> <pre><code>choco install kubens\n</code></pre> <pre><code>curl.exe -LO https://github.com/ahmetb/kubectx/releases/download/v0.9.5/kubens_v0.9.5_windows_x86_64.zip\nExpand-Archive ./kubens_v0.9.5_windows_x86_64.zip -DestinationPath ./\nrm kubens_v0.9.5_windows_x86_64.zip\nrm LICENSE\n</code></pre> Enable Shell Autocomplete <pre><code>sudo curl -sL -o /etc/bash_completion.d/kubens https://raw.githubusercontent.com/ahmetb/kubectx/master/completion/kubens.bash\nsudo chmod a+r /etc/bash_completion.d/kubens\n</code></pre> <p>kubens Documentations</p>"},{"location":"Containers/EKS/01-install-tools/#install-argocd","title":"Install <code>argocd</code>","text":"Linux (x86_64)Linux (ARM64)Windows (Chocolatey)Windows (Executable) <pre><code>curl -LO https://github.com/argoproj/argo-cd/releases/download/v2.8.0/argocd-linux-amd64\nsudo install -o root -g root -m 0755 argocd-linux-amd64 /usr/local/bin/argocd\nsudo install -o root -g root -m 0755 argocd-linux-amd64 /usr/bin/argocd\nrm argocd-linux-amd64\nargocd -h\n</code></pre> <pre><code>curl -LO https://github.com/argoproj/argo-cd/releases/download/v2.8.0/argocd-linux-arm64\nsudo install -o root -g root -m 0755 argocd-linux-arm64 /usr/local/bin/argocd\nsudo install -o root -g root -m 0755 argocd-linux-arm64 /usr/bin/argocd\nrm argocd-linux-arm64\nargocd -h\n</code></pre> <pre><code>choco install argocd-cli\n</code></pre> <pre><code>curl.exe -L https://github.com/argoproj/argo-cd/releases/download/v2.8.0/argocd-windows-amd64.exe -o argocd.exe\n</code></pre> Enable Shell Autocomplete <pre><code>argocd completion bash | sudo tee /etc/bash_completion.d/argocd &gt; /dev/null\nsudo chmod a+r /etc/bash_completion.d/argocd\n</code></pre>"},{"location":"Containers/EKS/02-start-eks-cluster/","title":"Start EKS cluster","text":"<p>Using <code>eksctl</code></p>"},{"location":"Containers/EKS/02-start-eks-cluster/#create-eks-cluster-iam-role","title":"Create EKS cluster IAM role","text":""},{"location":"Containers/EKS/02-start-eks-cluster/#using-cloudformation","title":"Using CloudFormation","text":"Linux Windows <pre><code>EKS_CLUSTER_ROLE_STACK_NAME=\"&lt;stack name&gt;\"\nEKS_CLUSTER_ROLE_NAME=\"&lt;role name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region code&gt;\"\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/cluster-role-cfn.yaml\n\n# Deploy stack\naws cloudformation deploy \\\n--template-file ./cluster-role-cfn.yaml \\\n--stack-name $EKS_CLUSTER_ROLE_STACK_NAME \\\n--capabilities CAPABILITY_NAMED_IAM \\\n--parameter-overrides RoleName=$EKS_CLUSTER_ROLE_NAME ProjectName=$PROJECT_NAME \\\n--tags project=$PROJECT_NAME \\\n--disable-rollback \\\n--region $REGION\n# Get IAM role arn\naws cloudformation describe-stacks \\\n--stack-name $EKS_CLUSTER_ROLE_STACK_NAME \\\n--query \"Stacks[0].Outputs[0].OutputValue\" \\\n--output text \\\n--region $REGION\n</code></pre> <pre><code>$EKS_CLUSTER_ROLE_STACK_NAME=\"&lt;stack name&gt;\"\n$EKS_CLUSTER_ROLE_NAME=\"&lt;role name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region code&gt;\"\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/cluster-role-cfn.yaml\n# Deploy stack\naws cloudformation deploy `\n--template-file ./cluster-role-cfn.yaml `\n--stack-name $EKS_CLUSTER_ROLE_STACK_NAME `\n--capabilities CAPABILITY_NAMED_IAM `\n--parameter-overrides RoleName=$EKS_CLUSTER_ROLE_NAME ProjectName=$PROJECT_NAME `\n--tags project=$PROJECT_NAME `\n--disable-rollback `\n--region $REGION\n# Get IAM role arn\naws cloudformation describe-stacks `\n--stack-name $EKS_CLUSTER_ROLE_STACK_NAME `\n--query \"Stacks[0].Outputs[0].OutputValue\" `\n--output text `\n--region $REGION\n</code></pre>"},{"location":"Containers/EKS/02-start-eks-cluster/#using-aws-cli","title":"Using AWS CLI","text":"<p>Create cluster trust policy file</p> JSON fileUsing command cluster-trust-policy.json<pre><code>{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"Service\": \"eks.amazonaws.com\"\n},\n\"Action\": \"sts:AssumeRole\"\n}\n]\n}\n</code></pre> <pre><code>cat &lt;&lt; EOF &gt; cluster-trust-policy.json\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\nEOF\n</code></pre> <p>Create the cluster role</p> <pre><code>aws iam create-role \\\n--role-name &lt;role name&gt; \\\n--assume-role-policy-document file://cluster-trust-policy.json\n</code></pre> <p>Note</p> <p>If you want to create tag, use this parameter.</p> <pre><code>--tags Key=project,Value=project-name Key=hello,Value=world\n</code></pre> <p>Attach the required IAM policy to the role</p> <pre><code>aws iam attach-role-policy \\\n--policy-arn arn:aws:iam::aws:policy/AmazonEKSClusterPolicy \\\n--role-name &lt;role name&gt;\n</code></pre> <p>AWS Documentation</p>"},{"location":"Containers/EKS/02-start-eks-cluster/#create-eks-cluster","title":"Create EKS cluster","text":"<p>Please use AWS Management Console to create EKS cluster.</p> Using eksctl   You can see <code>cluster.yaml</code> in here.  <pre><code>eksctl create cluster -f cluster.yaml\n</code></pre>"},{"location":"Containers/EKS/02-start-eks-cluster/#create-iam-oidc-provider","title":"Create IAM OIDC provider","text":"Linux Windows <pre><code>CLUSTER_NAME=\"&lt;cluster name&gt;\"\nREGION=\"&lt;region code&gt;\"\neksctl utils associate-iam-oidc-provider \\\n--cluster $CLUSTER_NAME \\\n--region $REGION \\\n--approve\n</code></pre> <pre><code>$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$REGION=\"&lt;region code&gt;\"\neksctl utils associate-iam-oidc-provider `\n--cluster $CLUSTER_NAME `\n--region $REGION `\n--approve\n</code></pre> <p>AWS Documentation</p>"},{"location":"Containers/EKS/02-start-eks-cluster/#create-kubeconfig-for-eks-cluster","title":"Create <code>kubeconfig</code> for EKS cluster","text":"Linux Windows <pre><code>CLUSTER_NAME=\"&lt;cluster name&gt;\"\nREGION=\"&lt;region code&gt;\"\naws eks update-kubeconfig \\\n--name $CLUSTER_NAME \\\n--region $REGION\n</code></pre> <pre><code>$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$REGION=\"&lt;region code&gt;\"\naws eks update-kubeconfig `\n--name $CLUSTER_NAME `\n--region $REGION\n</code></pre> <p>Note</p> <p>If you want to use IAM role, use this parameter.</p> <pre><code>--role-name &lt;role name&gt;\n</code></pre>"},{"location":"Containers/EKS/02-start-eks-cluster/#install-aws-authenticator-config-map","title":"Install AWS Authenticator Config Map","text":"<pre><code>curl -LO aws-auth-cm.yaml https://s3.us-west-2.amazonaws.com/amazon-eks/cloudformation/2020-10-29/aws-auth-cm.yaml\n</code></pre> <p>You should open file and change to IAM role arn(not instance profile).</p> <pre><code># Please use access key and secret access key this step.\nkubectl apply -f aws-auth-cm.yaml\n</code></pre>"},{"location":"Containers/EKS/02-start-eks-cluster/#using-kubectl-with-iam-role","title":"Using <code>kubectl</code> with IAM role","text":"<pre><code>cat &lt;&lt; EOF &gt;&gt; cluster-role-binding.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: iam-role-binding\nroleRef:\n  kind: ClusterRole\n  name: cluster-admin\n  apiGroup: rbac.authorization.k8s.io\nsubjects:\n  - kind: User\n    name: &lt;role name&gt;\n    apiGroup: rbac.authorization.k8s.io\nEOF\n# Delete aws configure files\nrm -rf ~/.aws\naws sts get-caller-identity\n</code></pre> <p>AWS Documentation</p> <p>Blogs</p>"},{"location":"Containers/EKS/02-start-eks-cluster/#create-iam-identity-mapping","title":"Create IAM Identity Mapping","text":"Linux Windows <pre><code>CLUSTER_NAME=\"&lt;cluster name&gt;\"\nROLE_ARN=\"&lt;role arn&gt;\"\nGROUP=\"system:masters\"\nUSERNAME=\"&lt;user name&gt;\"\nREGION=\"&lt;region code&gt;\"\neksctl create iamidentitymapping \\\n--cluster $CLUSTER_NAME \\\n--arn $ROLE_ARN \\\n--group $GROUP \\\n--username $USERNAME \\\n--region $REGION\n</code></pre> <pre><code>$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$ROLE_ARN=\"&lt;role arn&gt;\"\n$GROUP=\"system:masters\"\n$USERNAME=\"&lt;user name&gt;\"\n$REGION=\"&lt;region code&gt;\"\neksctl create iamidentitymapping `\n--cluster $CLUSTER_NAME `\n--arn $ROLE_ARN `\n--group $GROUP `\n--username $USERNAME `\n--region $REGION\n</code></pre>"},{"location":"Containers/EKS/02-start-eks-cluster/#create-irsas-for-addons","title":"Create IRSAs for Addons","text":"irsa.yaml<pre><code>apiVersion: eksctl.io/v1alpha5\nkind: ClusterConfig\nmetadata:\nname: &lt;cluster name&gt;\nregion: &lt;region code&gt;\niam:\nwithOIDC: true\nserviceAccounts:\n- metadata: # aws load balancer controller\nname: aws-load-balancer-controller\nnamespace: kube-system\nwellKnownPolicies:\nawsLoadBalancerController: true\nroleName: &lt;eks elb controller role name&gt;\ntags:\nName: &lt;eks elb controller role name&gt;\nproject: &lt;project name&gt;\n- metadata: # cluster autoscaler\nname: cluster-autoscaler\nnamespace: kube-system\nwellKnownPolicies:\nautoScaler: true\nroleName: &lt;cluster autoscaler role name&gt;\ntags:\nName: &lt;cluster autoscaler role name&gt;\nproject: &lt;project name&gt;\n- metadata: # karpenter\nname: karpenter\nnamespace: karpenter\nattachPolicyARNs:\n- \"&lt;karpenter policy arn (https://marcus16-kang.github.io/aws-resources-example/Containers/EKS/08-cluster-autoscaling/#create-the-karpenter-controller-policy)&gt;\"\nroleName: &lt;karpenter role name&gt;\ntags:\nName: &lt;karpenter role name&gt;\nproject: &lt;project name&gt;\n- metadata: # external dns\nname: external-dns\nnamespace: external-dns\nwellKnownPolicies:\nexternalDNS: true\nroleName: &lt;external dns role name&gt;\ntags:\nName: &lt;external dns role name&gt;\nproject: &lt;project name&gt;\n- metadata: # ebs csi controller\nname: ebs-csi-controller-sa\nnamespace: kube-system\nwellKnownPolicies:\nebsCSIController: true\nroleName: &lt;ebs csi controller role name&gt;\ntags:\nName: &lt;ebs csi controller role name&gt;\nproject: &lt;project name&gt;\n- metadata: # efs csi controller\nname: efs-csi-controller-sa\nnamespace: kube-system\nwellKnownPolicies:\nefsCSIController: true\nroleName: &lt;efs csi controller role name&gt;\ntags:\nName: &lt;efs csi controller role name&gt;\nproject: &lt;project name&gt;\n- metadata: # prometheus server\nname: prometheus-server\nnamespace: prometheus\nattachPolicyARNs:\n- \"&lt;prometheus policy arn (https://marcus16-kang.github.io/aws-resources-example/Containers/EKS/09-install-amp/#create-prometheus-iam-role-for-service-account)&gt;\"\nroleName: &lt;prometheus server role name&gt;\ntags:\nName: &lt;prometheus server role name&gt;\nproject: &lt;project name&gt;\n- metadata: # cloudwatch agent\nname: cloudwatch-agent\nnamespace: amazon-cloudwatch\nattachPolicyARNs:\n- \"arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy\"\nroleName: &lt;cloudwatch agent role name&gt;\ntags:\nName: &lt;cloudwatch agent role name&gt;\nproject: &lt;project name&gt;\n- metadata: # fluent bit\nname: fluent-bit\nnamespace: amazon-cloudwatch\nattachPolicyARNs:\n- \"arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy\"\nroleName: &lt;fluent bit role name&gt;\ntags:\nName: &lt;fluent bit role name&gt;\nproject: &lt;project name&gt;\n- metadata: # adot on ec2\nname: aws-otel-sa\nnamespace: amazon-cloudwatch\nattachPolicyARNs:\n- \"arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy\"\nroleName: &lt;adot ec2 role name&gt;\ntags:\nName: &lt;adot ec2 role name&gt;\nproject: &lt;project name&gt;\n- metadata: # adot on fargate\nname: adot-collector\nnamespace: amazon-cloudwatch\nattachPolicyARNs:\n- \"arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy\"\nroleName: &lt;adot fargate role name&gt;\ntags:\nName: &lt;adot fargate role name&gt;\nproject: &lt;project name&gt;\n- metadata: # aws node termination handler (nth)\nname: aws-node-termination-handler\nnamespace: kube-system\nattachPolicyARNs:\n- \"&lt;nth policy arn (https://marcus16-kang.github.io/aws-resources-example/Containers/EKS/18-install-aws-nth/#create-an-iam-policy-for-serviceaccount)&gt;\"\nroleName: &lt;nth role name&gt;\ntags:\nName: &lt;nth role name&gt;\nproject: &lt;project name&gt;\n- metadata: # argocd image updater\nname: argocd-image-updater\nnamespace: argocd\nattachPolicyARNs:\n- \"arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly\"\nroleName: &lt;argocd image updater role name&gt;\ntags:\nName: &lt;argocd image updater role name&gt;\nproject: &lt;project name&gt;\n- metadata: # appmesh controller\nname: appmesh-controller\nnamespace: appmesh-system\nattachPolicyARNs:\n- \"arn:aws:iam::aws:policy/AWSCloudMapFullAccess\"\n- \"arn:aws:iam::aws:policy/AWSAppMeshFullAccess\"\nroleName: &lt;appmesh system role name&gt;\ntags:\nName: &lt;appmesh system role name&gt;\nproject: &lt;project name&gt;\n- metadata: # fsx csi controller\nname: fsx-csi-controller-sa\nnamespace: kube-system\nattachPolicyARNs:\n- \"arn:aws:iam::aws:policy/AmazonFSxFullAccess\"\nroleName: &lt;fsx csi controller role name&gt;\ntags:\nName: &lt;fsx csi controller role name&gt;\nproject: &lt;project name&gt;\n</code></pre> <pre><code>eksctl create iamserviceaccount -f irsa.yaml --approve\n</code></pre>"},{"location":"Containers/EKS/02-start-eks-cluster/#encrypt-secrets-using-kms","title":"Encrypt secrets using KMS","text":""},{"location":"Containers/EKS/02-start-eks-cluster/#create-cmk","title":"Create CMK","text":"Using CloudFormationUsing AWS CLI <pre><code>CLUSTER_ROLE=&lt;cluster role arn&gt;\nKMS_ALIAS=&lt;KMS key alias(name)&gt;\nREGION=&lt;region code&gt;\n\ncat &lt;&lt; EOF &gt; eks-kms.yaml\nParameters:\n  ClusterRole:\n    Description: \"The arn of cluster's IAM role.\"\n    Type: String\n  AliasName:\n    Description: \"The name of KMS key.\"\n    Type: String\nResources:\n  Key:\n    Type: 'AWS::KMS::Key'\n    Properties:\n      Description: CMK for EKS secrets\n      KeyPolicy:\n        Version: 2012-10-17\n        Id: key-default-1\n        Statement:\n          - Sid: Enable IAM User Permissions.\n            Effect: Allow\n            Principal:\n              AWS: !Sub arn:aws:iam::\\${AWS::AccountId}:root\n            Action: 'kms:*'\n            Resource: '*'\n          - Sid: Enable IAM Role at EKS Cluster.\n            Effect: Allow\n            Principal:\n              AWS: !Ref ClusterRole\n            Action: 'kms:*'\n            Resource: '*'\n  Alias:\n    Type: 'AWS::KMS::Alias'\n    Properties:\n      AliasName: !Sub 'alias/\\${AliasName}'\n      TargetKeyId: !Ref Key\nEOF\naws cloudformation deploy \\\n--stack-name eks-kms-stack \\\n--template-file ./eks-kms.yaml \\\n--parameter-overrides ClusterRole=$CLUSTER_ROLE AliasName=$KMS_ALIAS \\\n--region $REGION\n</code></pre> <pre><code>\n</code></pre>"},{"location":"Containers/EKS/02-start-eks-cluster/#limit-iam-role-to-access-kubernetes-resource-by-namespace","title":"Limit IAM role to access kubernetes resource by namespace","text":""},{"location":"Containers/EKS/02-start-eks-cluster/#create-a-role","title":"Create a role","text":"<pre><code>kind: Role\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: &lt;role name&gt;\n  namespace: &lt;namespace name&gt;\nrules:\n  - apiGroups:\n      - \"\"\n      - \"apps\"\n      - \"batch\"\n      - \"extensions\"\n#      - \"autoscaling\"\n    resources:\n      - \"configmaps\"\n      - \"cronjobs\"\n      - \"deployments\"\n      - \"events\"\n      - \"ingresses\"\n      - \"jobs\"\n      - \"pods\"\n      - \"pods/attach\"\n      - \"pods/exec\"\n      - \"pods/log\"\n      - \"pods/portforward\"\n      - \"secrets\"\n      - \"services\"\n#      - \"horizontalpodautoscalers\"\n    verbs:\n      - \"create\"\n      - \"delete\"\n      - \"describe\"\n      - \"get\"\n      - \"list\"\n      - \"patch\"\n      - \"update\"\n</code></pre>"},{"location":"Containers/EKS/02-start-eks-cluster/#create-a-role-binding","title":"Create a role binding","text":"<pre><code>kind: RoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: &lt;role binding name&gt;\n  namespace: &lt;namespace name&gt;\nsubjects:\n- kind: User\n  name: &lt;user name&gt;\n  apiGroup: rbac.authorization.k8s.io\nroleRef:\n  kind: Role\n  name: &lt;role name&gt;\n  apiGroup: rbac.authorization.k8s.io\n</code></pre>"},{"location":"Containers/EKS/02-start-eks-cluster/#create-an-identity-mapping","title":"Create an identity mapping","text":"Linux Windows <pre><code>CLUSTER_NAME=\"&lt;cluster name&gt;\"\nROLE_ARN=\"&lt;role arn&gt;\"\nUSERNAME=\"&lt;user name&gt;\"\nREGION=\"&lt;region code&gt;\"\neksctl create iamidentitymapping \\\n--cluster $CLUSTER_NAME \\\n--arn $ROLE_ARN \\\n--username $USERNAME \\\n--region $REGION\n</code></pre> <pre><code>$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$ROLE_ARN=\"&lt;role arn&gt;\"\n$USERNAME=\"&lt;user name&gt;\"\n$REGION=\"&lt;region code&gt;\"\neksctl create iamidentitymapping `\n--cluster $CLUSTER_NAME `\n--arn $ROLE_ARN `\n--username $USERNAME `\n--region $REGION\n</code></pre>"},{"location":"Containers/EKS/03-create-node-group/","title":"Create Node Group","text":""},{"location":"Containers/EKS/03-create-node-group/#create-the-eks-managed-node-iam-role","title":"Create the EKS managed node IAM role","text":""},{"location":"Containers/EKS/03-create-node-group/#using-cloudformation","title":"Using CloudFormation","text":"Linux Windows <pre><code>NODE_GROUP_ROLE_STACK_NAME=\"&lt;stack name&gt;\"\nNODE_GROUP_ROLE_NAME=\"&lt;role name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region code&gt;\"\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/nodegroup-role-cfn.yaml\n\naws cloudformation deploy \\\n--stack-name $NODE_GROUP_ROLE_STACK_NAME \\\n--template-file ./nodegroup-role-cfn.yaml \\\n--parameter-overrides RoleName=$NODE_GROUP_ROLE_NAME ProjectName=$PROJECT_NAME \\\n--capabilities CAPABILITY_NAMED_IAM \\\n--tags project=$PROJECT_NAME \\\n--region $REGION\naws cloudformation describe-stacks \\\n--stack-name $NODE_GROUP_ROLE_STACK_NAME \\\n--query \"Stacks[0].Outputs[0].OutputValue\" \\\n--output text \\\n--region $REGION\n</code></pre> <pre><code>$NODE_GROUP_ROLE_STACK_NAME=\"&lt;stack name&gt;\"\n$NODE_GROUP_ROLE_NAME=\"&lt;role name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region code&gt;\"\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/nodegroup-role-cfn.yaml\n\naws cloudformation deploy `\n--stack-name $NODE_GROUP_ROLE_STACK_NAME `\n--template-file ./nodegroup-role-cfn.yaml `\n--parameter-overrides RoleName=$NODE_GROUP_ROLE_NAME ProjectName=$PROJECT_NAME `\n--capabilities CAPABILITY_NAMED_IAM `\n--tags project=$PROJECT_NAME `\n--region $REGION\naws cloudformation describe-stacks `\n--stack-name $NODE_GROUP_ROLE_STACK_NAME `\n--query \"Stacks[0].Outputs[0].OutputValue\" `\n--output text `\n--region $REGION\n</code></pre>"},{"location":"Containers/EKS/03-create-node-group/#using-aws-cli","title":"Using AWS CLI","text":"<p>Create the node trust policy file</p> JSON fileUsing command node-role-trust-relationship.json<pre><code>{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"Service\": \"ec2.amazonaws.com\"\n},\n\"Action\": \"sts:AssumeRole\"\n}\n]\n}\n</code></pre> <pre><code>cat &lt;&lt; EOF &gt; node-role-trust-relationship.json\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\nEOF\n</code></pre> <p>Create the node role</p> <pre><code>NODE_GROUP_ROLE_NAME=&lt;role name&gt;\n\naws iam create-role \\\n--role-name $NODE_GROUP_ROLE_NAME \\\n--assume-role-policy-document file://node-role-trust-relationship.json\n\naws iam attach-role-policy \\\n--policy-arn arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy \\\n--role-name $NODE_GROUP_ROLE_NAME\naws iam attach-role-policy \\\n--policy-arn arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly \\\n--role-name $NODE_GROUP_ROLE_NAME\naws iam attach-role-policy \\\n--policy-arn arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy \\\n--role-name $NODE_GROUP_ROLE_NAME\naws iam create-instance-profile \\\n--instance-profile-name $NODE_GROUP_ROLE_NAME\naws iam add-role-to-instance-profile \\\n--instance-profile-name $NODE_GROUP_ROLE_NAME \\\n--role-name $NODE_GROUP_ROLE_NAME\n</code></pre> Using IPv6 in VPC CNI <pre><code>cat &lt;&lt; EOF &gt;&gt; vpc-cni-ipv6-policy.json\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:AssignIpv6Addresses\",\n                \"ec2:DescribeInstances\",\n                \"ec2:DescribeTags\",\n                \"ec2:DescribeNetworkInterfaces\",\n                \"ec2:DescribeInstanceTypes\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CreateTags\"\n            ],\n            \"Resource\": [\n                \"arn:aws:ec2:*:*:network-interface/*\"\n            ]\n        }\n    ]\n}\nEOF\nIPV6_POLICY_ARN=$(aws iam create-policy \\\n--policy-name AmazonEKS_CNI_IPv6_Policy \\\n--policy-document file://vpc-cni-ipv6-policy.json | \\\njq -r '.Policy.Arn')\naws iam attach-role-policy \\\n--policy-arn $IPV6_POLICY_ARN \\\n--role-name $NODE_GROUP_ROLE_NAME\n</code></pre> <p>AWS Documentation</p>"},{"location":"Containers/EKS/03-create-node-group/#create-the-eks-managed-node-group-with-launch-template","title":"Create the EKS managed node group with launch template","text":"<p>You can see documentation here too.</p>  Linux Windows <pre><code>STACK_NAME=\"\"\nPROJECT_NAME=\"\"\nREGION=\"\"\n### Launch Template Configuration\nLaunchTemplateName=\"\"   # [REQUIRED] he name of this launch template.\nInstanceName=\"\"         # [REQUIRED] The name of EC2 instance.\nSecurityGroupIds=\"\"     # [REQUIRED] The ids of security group for EC2 instances.\n### NodeGroup Configuration\nClusterName=\"\"          # [REQUIRED] The name of eks cluster.\nNodeGroupName=\"\"        # [REQUIRED] The name of eks nodegroup.\nAmiType=\"\"              # [REQUIRED] The ami type of nodegroup's EC2 instances.\n# AL2_x86_64 | AL2_x86_64_GPU | AL2_ARM_64\n# BOTTLEROCKET_x86_64 | BOTTLEROCKET_ARM_64 | BOTTLEROCKET_x86_64_NVIDIA | BOTTLEROCKET_ARM_64_NVIDIA\n# WINDOWS_CORE_2019_x86_64 | WINDOWS_CORE_2022_x86_64 | WINDOWS_FULL_2019_x86_64 | WINDOWS_FULL_2022_x86_64 | CUSTOM\nCapacityType=\"\"         # `ON_DEMAND` or `SPOT` | [REQUIRED] The capacity type of nodegroup's EC2 instances.\nInstanceTypes=\"\"        # [REQUIRED] The instance types of nodegroup's EC2 instances.\nNodeRoleArn=\"\"          # [REQUIRED] The role arn of nodegroup's EC2 instances.\nDesiredSize=\"\"          # [REQUIRED] The number of desired size.\nMinSize=\"\"              # [REQUIRED] The number of min size.\nMaxSize=\"\"              # [REQUIRED] The number of max size.\nSubnets=\"\"              # [REQUIRED] The subnet ids of nodegroup's EC2 instances.\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/eks/node-group/eks-nodegroup.yaml\n\n### If you want to add labels to nodegroup, using this command.\n# echo \"\n#       Labels:\n#         key1: value1\n#         key2: value2\n# \" &gt;&gt; eks-nodegroup.yaml\n### If you want to add taints to nodegroup, using this command.\n# echo \"\n#       Taints:\n#         - Effect: # `NO_SCHEDULE` | `NO_EXECUTE` | `PREFER_NO_SCHEDULE`\n#           Key:\n#           Value:\n# \" &gt;&gt; eks-nodegroup.yaml\naws cloudformation deploy \\\n--template-file ./eks-nodegroup.yaml \\\n--stack-name $STACK_NAME \\\n--parameter-overrides \\\nProjectName=$PROJECT_NAME \\\nLaunchTemplateName=$LaunchTemplateName \\\nInstanceName=$InstanceName \\\nSecurityGroupIds=$SecurityGroupIds \\\nClusterName=$ClusterName \\\nNodeGroupName=$NodeGroupName \\\nAmiType=$AmiType \\\nCapacityType=$CapacityType \\\nInstanceTypes=$InstanceTypes \\\nNodeRoleArn=$NodeRoleArn \\\nDesiredSize=$DesiredSize \\\nMinSize=$MinSize \\\nMaxSize=$MaxSize \\\nSubnets=$Subnets \\\n--disable-rollback \\\n--tags project=$PROJECT_NAME \\\n--region $REGION\n</code></pre> <pre><code>$STACK_NAME=\"\"\n$PROJECT_NAME=\"\"\n$REGION=\"\"\n### Launch Template Configuration\n$LaunchTemplateName=\"\"   # [REQUIRED] he name of this launch template.\n$InstanceName=\"\"         # [REQUIRED] The name of EC2 instance.\n$SecurityGroupIds=\"\"     # [REQUIRED] The ids of security group for EC2 instances.\n### NodeGroup Configuration\n$ClusterName=\"\"          # [REQUIRED] The name of eks cluster.\n$NodeGroupName=\"\"        # [REQUIRED] The name of eks nodegroup.\n$AmiType=\"\"              # [REQUIRED] The ami type of nodegroup's EC2 instances.\n# AL2_x86_64 | AL2_x86_64_GPU | AL2_ARM_64\n# BOTTLEROCKET_x86_64 | BOTTLEROCKET_ARM_64 | BOTTLEROCKET_x86_64_NVIDIA | BOTTLEROCKET_ARM_64_NVIDIA\n# WINDOWS_CORE_2019_x86_64 | WINDOWS_CORE_2022_x86_64 | WINDOWS_FULL_2019_x86_64 | WINDOWS_FULL_2022_x86_64 | CUSTOM\n$CapacityType=\"\"         # `ON_DEMAND` or `SPOT` | [REQUIRED] The capacity type of nodegroup's EC2 instances.\n$InstanceTypes=\"\"        # [REQUIRED] The instance types of nodegroup's EC2 instances.\n$NodeRoleArn=\"\"          # [REQUIRED] The role arn of nodegroup's EC2 instances.\n$DesiredSize=\"\"          # [REQUIRED] The number of desired size.\n$MinSize=\"\"              # [REQUIRED] The number of min size.\n$MaxSize=\"\"              # [REQUIRED] The number of max size.\n$Subnets=\"\"              # [REQUIRED] The subnet ids of nodegroup's EC2 instances.\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/eks/node-group/eks-nodegroup.yaml\n### If you want to add labels to nodegroup, using this command.\n# Add-Content -Path eks-nodegroup.yaml -Value @\"\n#\n#       Labels:\n#         key1: value1\n#         key2: value2\n# \"@\n### If you want to add taints to nodegroup, using this command.\n# Add-Content -Path eks-nodegroup.yaml -Value @\"\n#\n#       Taints:\n#         - Effect: # `NO_SCHEDULE` | `NO_EXECUTE` | `PREFER_NO_SCHEDULE`\n#           Key:\n#           Value:\n# \"@\naws cloudformation deploy `\n--template-file ./eks-nodegroup.yaml `\n--stack-name $STACK_NAME `\n--parameter-overrides `\nProjectName=$PROJECT_NAME `\nLaunchTemplateName=$LaunchTemplateName `\nInstanceName=$InstanceName `\nSecurityGroupIds=$SecurityGroupIds `\nClusterName=$ClusterName `\nNodeGroupName=$NodeGroupName `\nAmiType=$AmiType `\nCapacityType=$CapacityType `\nInstanceTypes=$InstanceTypes `\nNodeRoleArn=$NodeRoleArn `\nDesiredSize=$DesiredSize `\nMinSize=$MinSize `\nMaxSize=$MaxSize `\nSubnets=$Subnets `\n--disable-rollback `\n--tags project=$PROJECT_NAME `\n--region $REGION\n</code></pre>"},{"location":"Containers/EKS/04-create-fargate-profile/","title":"Create Fargate Profile","text":""},{"location":"Containers/EKS/04-create-fargate-profile/#create-the-pod-execution-iam-role","title":"Create the Pod execution IAM role","text":""},{"location":"Containers/EKS/04-create-fargate-profile/#using-cloudformation","title":"Using CloudFormation","text":"Linux Windows <pre><code>CLUSTER_NAME=\"&lt;cluster name&gt;\"\nSTACK_NAME=\"&lt;stack name&gt;\"\nROLE_NAME=\"&lt;role name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region&gt;\"\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/fargate-profile-role-cfn.yaml\n\n# Deploy stack\naws cloudformation deploy \\\n--template-file ./fargate-profile-role-cfn.yaml \\\n--stack-name $STACK_NAME \\\n--capabilities CAPABILITY_NAMED_IAM \\\n--parameter-overrides RoleName=$ROLE_NAME ProjectName=$PROJECT_NAME \\\n--tags project=$PROJECT_NAME \\\n--region $REGION\n# Get IAM role arn\naws cloudformation describe-stacks \\\n--stack-name $STACK_NAME \\\n--query \"Stacks[0].Outputs[0].OutputValue\" \\\n--output text \\\n--region $REGION\n</code></pre> <pre><code>$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$STACK_NAME=\"&lt;stack name&gt;\"\n$ROLE_NAME=\"&lt;role name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region&gt;\"\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/fargate-profile-role-cfn.yaml\n\n# Deploy stack\naws cloudformation deploy `\n--template-file ./fargate-profile-role-cfn.yaml `\n--stack-name $STACK_NAME `\n--capabilities CAPABILITY_NAMED_IAM `\n--parameter-overrides ClusterName=$CLUSTER_NAME RoleName=$ROLE_NAME ProjectName=$PROJECT_NAME `\n--tags project=$PROJECT_NAME `\n--region $REGION\n# Get IAM role arn\naws cloudformation describe-stacks `\n--stack-name $STACK_NAME `\n--query \"Stacks[0].Outputs[0].OutputValue\" `\n--output text `\n--region $REGION\n</code></pre>"},{"location":"Containers/EKS/04-create-fargate-profile/#create-the-trust-policy-file","title":"Create the trust policy file","text":"JSON fileUsing command pod-execution-role-trust-policy.json<pre><code>{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Condition\": {\n\"ArnLike\": {\n\"aws:SourceArn\": \"arn:aws:eks:&lt;region code&gt;:&lt;account id&gt;:fargateprofile/&lt;cluster name&gt;/*\"\n}\n},\n\"Principal\": {\n\"Service\": \"eks-fargate-pods.amazonaws.com\"\n},\n\"Action\": \"sts:AssumeRole\"\n}\n]\n}\n</code></pre> <pre><code>cat &lt;&lt; EOF &gt;&gt; pod-execution-role-trust-policy.json\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Condition\": {\n        \"ArnLike\": {\n            \"aws:SourceArn\": \"arn:aws:eks:&lt;region code&gt;:&lt;account id&gt;:fargateprofile/&lt;cluster name&gt;/*\"\n        }\n      },\n      \"Principal\": {\n        \"Service\": \"eks-fargate-pods.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\nEOF\n</code></pre>"},{"location":"Containers/EKS/04-create-fargate-profile/#create-the-role","title":"Create the role","text":"<pre><code>aws iam create-role \\\n--role-name &lt;pod execution role name&gt; \\\n--assume-role-policy-document file://\"pod-execution-role-trust-policy.json\"\naws iam attach-role-policy \\\n--policy-arn arn:aws:iam::aws:policy/AmazonEKSFargatePodExecutionRolePolicy \\\n--role-name &lt;pod execution role name&gt;\n</code></pre> <p>AWS Documentation</p>"},{"location":"Containers/EKS/04-create-fargate-profile/#create-fargate-profile_1","title":"Create Fargate profile","text":""},{"location":"Containers/EKS/04-create-fargate-profile/#using-aws-cli","title":"Using AWS CLI","text":"Linux Windows <pre><code>CLUSTER_NAME=\"&lt;cluster name&gt;\"\nFARGATE_PROFILE_NAME=\"&lt;fargate profile name&gt;\"\nFARGATE_PROFILE_ROLE_ARN=\"&lt;fargate profile role arn&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region&gt;\"\naws eks create-fargate-profile \\\n--fargate-profile-name $FARGATE_PROFILE_NAME \\\n--cluster-name $CLUSTER_NAME \\\n--pod-execution-role-arn $FARGATE_PROFILE_ROLE_ARN \\\n--subnets &lt;subnets&gt; &lt;subnets&gt; \\\n--selectors namespace=&lt;namespace&gt; namespace=&lt;namespace&gt; `\n--tags project=$PROJECT_NAME \\\n--region $REGION\n</code></pre> <pre><code>$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$FARGATE_PROFILE_NAME=\"&lt;fargate profile name&gt;\"\n$FARGATE_PROFILE_ROLE_ARN=\"&lt;fargate profile role arn&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region&gt;\"\naws eks create-fargate-profile `\n--fargate-profile-name $FARGATE_PROFILE_NAME `\n--cluster-name $CLUSTER_NAME `\n--pod-execution-role-arn $FARGATE_PROFILE_ROLE_ARN `\n--subnets &lt;subnets&gt; &lt;subnets&gt; `\n--selectors namespace=&lt;namespace&gt; namespace=&lt;namespace&gt; `\n--tags project=$PROJECT_NAME `\n--region $REGION\n</code></pre> <p>Note</p> <p>If you want to create tag, use this parameter.</p> <pre><code>--tags key1=value1,key2=value2,...\n</code></pre> <p>If you want to use label selector with namespace, use this parameter.</p> <pre><code>--selectors namespace=string,labels={KeyName1=string,KeyName2=string} ...\n</code></pre> <p>AWS CLI Documentation</p>"},{"location":"Containers/EKS/04-create-fargate-profile/#using-eksctl","title":"Using <code>eksctl</code>","text":"<p>Warning</p> <p>If you use <code>eksctl</code>, you cannot choose pod execution role.</p>  Linux Windows <pre><code>eksctl create fargateprofile \\\n--cluster &lt;cluster name&gt; \\\n--name &lt;fargate profile name&gt; \\\n--namespace &lt;fargate profile namespace&gt;\n</code></pre> <pre><code>eksctl create fargateprofile `\n--cluster &lt;cluster name&gt; `\n--name &lt;fargate profile name&gt; `\n--namespace &lt;fargate profile namespace&gt;\n</code></pre> <p>Note</p> <p>If you want to use Fargate profile with <code>kube-system</code>, use this parameter.</p> <pre><code>--namespace kube-system\n</code></pre> <p>Note</p> <p>If you want to create labels, use this parameter.</p> <pre><code>-- labels &lt;fargate profile labels&gt;\n</code></pre> <p>AWS Documentation</p>"},{"location":"Containers/EKS/04-create-fargate-profile/#patch-coredns","title":"Patch CoreDNS","text":"<p>Note</p> <p>If you want to only run your pods on Fargate in your cluster, complete the following steps.</p>  Linux Windows <pre><code>kubectl patch deployment coredns \\\n-n kube-system \\\n--type json \\\n-p='[{\"op\": \"remove\", \"path\": \"/spec/template/metadata/annotations/eks.amazonaws.com~1compute-type\"}]'\nkubectl rollout restart deployment coredns \\\n-n kube-system\n\nkubectl get deployment coredns \\\n-n kube-system\n</code></pre> <pre><code>kubectl patch deployment coredns `\n-n kube-system `\n--type json `\n-p='[{\"op\": \"remove\", \"path\": \"/spec/template/metadata/annotations/eks.amazonaws.com~1compute-type\"}]'\nkubectl rollout restart deployment coredns `\n-n kube-system\nkubectl get deployment coredns `\n-n kube-system\n</code></pre> <p>AWS Documentation</p>"},{"location":"Containers/EKS/05-using-elb-on-eks/","title":"Using ELB on EKS","text":""},{"location":"Containers/EKS/05-using-elb-on-eks/#create-aws-load-balancer-controller-iam-role","title":"Create AWS Load Balancer Controller IAM role","text":"Linux Windows <pre><code>CLUSTER_NAME=\"&lt;cluster name&gt;\"\nPOLICY_NAME=\"&lt;policy name&gt;\"\nROLE_NAME=\"&lt;role name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region&gt;\"\ncurl -L -o aws-load-balancer-controller-iam-policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/main/docs/install/iam_policy.json\n\nPOLICY_ARN=$(aws iam create-policy \\\n--policy-name $POLICY_NAME \\\n--policy-document file://aws-load-balancer-controller-iam-policy.json \\\n--query 'Policy.Arn' \\\n--output text \\\n# --tags Key=project,Value=$PROJECT_NAME \\  # AWS CLI v2\n)\neksctl create iamserviceaccount \\\n--cluster=$CLUSTER_NAME \\\n--namespace=kube-system \\\n--name=aws-load-balancer-controller \\\n--role-name \"$ROLE_NAME\" \\\n--attach-policy-arn=$POLICY_ARN \\\n--tags project=$PROJECT_NAME \\\n--region $REGION \\\n--override-existing-serviceaccounts \\\n--approve\n</code></pre> <pre><code>$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$POLICY_NAME=\"&lt;policy name&gt;\"\n$ROLE_NAME=\"&lt;role name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region&gt;\"\ncurl.exe -L -o aws-load-balancer-controller-iam-policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/main/docs/install/iam_policy.json\n$POLICY_ARN = aws iam create-policy `\n--policy-name $POLICY_NAME `\n--policy-document file://aws-load-balancer-controller-iam-policy.json `\n--query 'Policy.Arn' `\n--output text `\n--tags Key=project,Value=$PROJECT_NAME\neksctl create iamserviceaccount `\n--cluster=$CLUSTER_NAME `\n--namespace=kube-system `\n--name=aws-load-balancer-controller `\n--role-name \"$ROLE_NAME\" `\n--attach-policy-arn=$POLICY_ARN `\n--tags project=$PROJECT_NAME `\n--region $REGION `\n--override-existing-serviceaccounts `\n--approve\n</code></pre> <p>AWS Documentation</p>"},{"location":"Containers/EKS/05-using-elb-on-eks/#install-aws-load-balancer-controller-using-helm","title":"Install AWS Load Balancer Controller using <code>helm</code>","text":"Linux Windows <pre><code>VPC_ID=\"&lt;vpc id&gt;\"\nCLUSTER_NAME=\"&lt;cluster name&gt;\"\nREGION=\"&lt;region&gt;\"\nhelm repo add eks https://aws.github.io/eks-charts\nhelm repo update\n\nhelm install aws-load-balancer-controller eks/aws-load-balancer-controller \\\n-n kube-system \\\n--set clusterName=$CLUSTER_NAME \\\n--set serviceAccount.create=false \\\n--set serviceAccount.name=aws-load-balancer-controller \\\n--set region=$REGION \\\n--set vpcId=$VPC_ID\nkubectl get deployment aws-load-balancer-controller \\\n-n kube-system \\\n-w\n</code></pre> <pre><code>$VPC_ID=\"&lt;vpc id&gt;\"\n$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$REGION=\"&lt;region&gt;\"\nhelm repo add eks https://aws.github.io/eks-charts\nhelm repo update\nhelm install aws-load-balancer-controller eks/aws-load-balancer-controller `\n-n kube-system `\n--set clusterName=$CLUSTER_NAME `\n--set serviceAccount.create=false `\n--set serviceAccount.name=aws-load-balancer-controller `\n--set region=$REGION `\n--set vpcId=$VPC_ID\nkubectl get deployment aws-load-balancer-controller `\n-n kube-system `\n-w\n</code></pre> <p>AWS Documentation</p>"},{"location":"Containers/EKS/05-using-elb-on-eks/#create-alb-using-ingress","title":"Create ALB using Ingress","text":"ingress.yaml<pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\nname: &lt;ingress name&gt;\nnamespace: &lt;namespace&gt;\nannotations:\nalb.ingress.kubernetes.io/scheme: internet-facing\nalb.ingress.kubernetes.io/target-type: ip\nalb.ingress.kubernetes.io/load-balancer-name: &lt;load balancer name&gt;\nalb.ingress.kubernetes.io/security-groups: &lt;security group ids&gt;\nalb.ingress.kubernetes.io/healthcheck-path: &lt;healthcheck path&gt;\nalb.ingress.kubernetes.io/tags: &lt;tags&gt;  # Environment=dev,Team=test\nalb.ingress.kubernetes.io/load-balancer-attributes: access_logs.s3.enabled=true,access_logs.s3.bucket=&lt;access log bucket&gt;,access_logs.s3.prefix=&lt;access log prefix&gt;\n# Please check documentations for other annotations.\nspec:\ningressClassName: alb\nrules:\n- http:\npaths:\n- path: /\npathType: Prefix  # Exact\nbackend:\nservice:\nname: &lt;service name&gt;\nport:\nnumber: &lt;port number&gt; # like 80\n</code></pre> <p>AWS Documentation</p> <p>AWS Load Balancer Controller Documentation</p>"},{"location":"Containers/EKS/05-using-elb-on-eks/#create-nlb-using-service-type-loadbalancer","title":"Create NLB using Service (type: <code>LoadBalancer</code>)","text":"service.yaml<pre><code>apiVersion: v1\nkind: Service\nmetadata:\nname: &lt;ingress name&gt;\nnamespace: &lt;namespace&gt;\nannotations:\nservice.beta.kubernetes.io/aws-load-balancer-type: external\nservice.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip\nservice.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing\n# Please check documentations for other annotations.\nspec:\ntype: LoadBalancer\nselector:\napp: &lt;app label&gt;\nports:\n- port: &lt;port number&gt; # like 80\ntargetPort: &lt;port number&gt; # like 80\nprotocol: &lt;protocol&gt; # like TCP\n</code></pre> <p>Note</p> <p>If you want to use NLB, you should create a tag to target's security group like this:</p> <pre><code>kubernetes.io/cluster/${CLUSTER_NAME}: owned\n</code></pre> <p>AWS Documentation</p> <p>AWS Load Balancer Controller Documentation</p>"},{"location":"Containers/EKS/06-using-external-dns/","title":"Using External DNS","text":""},{"location":"Containers/EKS/06-using-external-dns/#create-the-service-account-for-external-dns","title":"Create the service account for External DNS","text":"Linux Windows <pre><code>CLUSTER_NAME=\"&lt;cluster name&gt;\"\nPOLICY_NAME=\"&lt;policy name&gt;\"\nROLE_NAME=\"&lt;role name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region&gt;\"\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/external-dns-iam-policy.json\n\nPOLICY_ARN=$(aws iam create-policy \\\n--policy-name $POLICY_NAME \\\n--policy-document file://external-dns-iam-policy.json \\\n--query 'Policy.Arn' \\\n--output text \\\n#  --tags Key=project,Value=$PROJECT_NAME \\ # AWS CLI v2\n)\neksctl create iamserviceaccount \\\n--name external-dns \\\n--namespace external-dns \\\n--cluster $CLUSTER_NAME \\\n--attach-policy-arn $POLICY_ARN \\\n--role-name $ROLE_NAME \\\n--tags project=$PROJECT_NAME \\\n--region $REGION \\\n--override-existing-serviceaccounts \\\n--approve\n</code></pre> <pre><code>$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$POLICY_NAME=\"&lt;policy name&gt;\"\n$ROLE_NAME=\"&lt;role name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region&gt;\"\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/external-dns-iam-policy.json\n$POLICY_ARN = aws iam create-policy `\n--policy-name $POLICY_NAME `\n--policy-document file://external-dns-iam-policy.json `\n--query 'Policy.Arn' `\n--output text `\n--tags Key=project,Value=$PROJECT_NAME\neksctl create iamserviceaccount `\n--name external-dns `\n--namespace external-dns `\n--cluster $CLUSTER_NAME `\n--attach-policy-arn $POLICY_ARN `\n--role-name $ROLE_NAME `\n--tags project=$PROJECT_NAME `\n--region $REGION `\n--override-existing-serviceaccounts `\n--approve\n</code></pre> <p>AWS Documentation</p>"},{"location":"Containers/EKS/06-using-external-dns/#install-external-dns-using-helm","title":"Install External DNS using <code>helm</code>","text":"Linux Windows <pre><code>DOMAIN_NAME=\"&lt;domain name (ex. my-org.com)&gt;\"\nZONE_TYPE=\"&lt;zone type (public or private)&gt;\"\nhelm repo add external-dns https://kubernetes-sigs.github.io/external-dns/\n\nhelm install external-dns external-dns/external-dns \\\n--namespace external-dns \\\n--set image.tag=v0.13.5 \\\n--set serviceAccount.create=false \\\n--set serviceAccount.name=external-dns \\\n--set interval=10s \\\n--set policy=sync \\\n--set registry=txt \\\n--set txtOwnerId=my-hostedzone-identifier \\\n--set domainFilters[0]=$DOMAIN_NAME \\\n--set provider=aws \\\n--set extraArgs[0]=\"--aws-zone-type=$ZONE_TYPE\"\n</code></pre> <pre><code>$DOMAIN_NAME=\"&lt;domain name (ex. my-org.com)&gt;\"\n$ZONE_TYPE=\"&lt;zone type (public or private)&gt;\"\nhelm repo add external-dns https://kubernetes-sigs.github.io/external-dns/\nhelm install external-dns external-dns/external-dns `\n--namespace external-dns `\n--set image.tag=v0.13.5 `\n--set serviceAccount.create=false `\n--set serviceAccount.name=external-dns `\n--set interval=10s `\n--set policy=sync `\n--set registry=txt `\n--set txtOwnerId=my-hostedzone-identifier `\n--set domainFilters[0]=$DOMAIN_NAME `\n--set provider=aws `\n--set extraArgs[0]=\"--aws-zone-type=$ZONE_TYPE\"\n</code></pre> <p>External DNS Helm Chart Documentation</p>"},{"location":"Containers/EKS/06-using-external-dns/#external-dns-policy-references","title":"External DNS policy references","text":"<ul> <li><code>upsert-only</code> : CREATE, UPDATE</li> <li><code>sync</code> : CREATE, UPDATE, DELETE</li> <li><code>create-only</code> : CREATE</li> </ul> <p>AWS Documentation</p> <p>External DNS for AWS Documentation</p>"},{"location":"Containers/EKS/06-using-external-dns/#using-external-dns-with-same-domain-for-public-and-private-route53-zones","title":"Using External DNS with same domain for public and private Route53 zones","text":""},{"location":"Containers/EKS/06-using-external-dns/#install-two-aws-load-balancer-controller","title":"Install two AWS load balancer controller","text":"<p>For public zone</p>  Linux Windows <pre><code>VPC_ID=\"&lt;vpc id&gt;\"\nCLUSTER_NAME=\"&lt;cluster name&gt;\"\nREGION=\"&lt;region&gt;\"\nhelm repo add eks https://aws.github.io/eks-charts\nhelm repo update\n\nhelm install aws-load-balancer-controller-public eks/aws-load-balancer-controller \\\n-n kube-system \\\n--set clusterName=$CLUSTER_NAME \\\n--set serviceAccount.create=false \\\n--set serviceAccount.name=aws-load-balancer-controller \\\n--set region=$REGION \\\n--set vpcId=$VPC_ID \\\n--set ingressClass=alb-public \\\n--set nameOverride=alb-public\n\nkubectl get deployment aws-load-balancer-controller-public \\\n-n kube-system \\\n-w\n</code></pre> <pre><code>$VPC_ID=\"&lt;vpc id&gt;\"\n$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$REGION=\"&lt;region&gt;\"\nhelm repo add eks https://aws.github.io/eks-charts\nhelm repo update\nhelm install aws-load-balancer-controller-public eks/aws-load-balancer-controller `\n-n kube-system `\n--set clusterName=$CLUSTER_NAME `\n--set serviceAccount.create=false `\n--set serviceAccount.name=aws-load-balancer-controller `\n--set region=$REGION `\n--set vpcId=$VPC_ID `\n--set ingressClass=alb-public `\n--set nameOverride=alb-public\nkubectl get deployment aws-load-balancer-controller-public `\n-n kube-system `\n-w\n</code></pre> <p>Note</p> <p>If you create a ingress for public zone, you should define ingress class like this.</p> <pre><code>ingressClassName: alb-public\n</code></pre> <p>For private zone</p>  Linux Windows <pre><code>VPC_ID=\"&lt;vpc id&gt;\"\nCLUSTER_NAME=\"&lt;cluster name&gt;\"\nREGION=\"&lt;region&gt;\"\nhelm repo add eks https://aws.github.io/eks-charts\nhelm repo update\n\nhelm install aws-load-balancer-controller-private eks/aws-load-balancer-controller \\\n-n kube-system \\\n--set clusterName=$CLUSTER_NAME \\\n--set serviceAccount.create=false \\\n--set serviceAccount.name=aws-load-balancer-controller \\\n--set region=$REGION \\\n--set vpcId=$VPC_ID \\\n--set ingressClass=alb-private \\\n--set nameOverride=alb-private\n\nkubectl get deployment aws-load-balancer-controller-private \\\n-n kube-system \\\n-w\n</code></pre> <pre><code>$VPC_ID=\"&lt;vpc id&gt;\"\n$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$REGION=\"&lt;region&gt;\"\nhelm repo add eks https://aws.github.io/eks-charts\nhelm repo update\nhelm install aws-load-balancer-controller-private eks/aws-load-balancer-controller `\n-n kube-system `\n--set clusterName=$CLUSTER_NAME `\n--set serviceAccount.create=false `\n--set serviceAccount.name=aws-load-balancer-controller `\n--set region=$REGION `\n--set vpcId=$VPC_ID `\n--set ingressClass=alb-private `\n--set nameOverride=alb-private\nkubectl get deployment aws-load-balancer-controller-private `\n-n kube-system `\n-w\n</code></pre> <p>Note</p> <p>If you create a ingress for private zone, you should define ingress class like this.</p> <pre><code>ingressClassName: alb-private\n</code></pre>"},{"location":"Containers/EKS/06-using-external-dns/#install-two-external-dns","title":"Install two External DNS","text":"<p>For public zone</p>  Linux Windows <pre><code>DOMAIN_NAME=\"&lt;domain name (ex. my-org.com)&gt;\"\nZONE_TYPE=\"public\"\nhelm repo add external-dns https://kubernetes-sigs.github.io/external-dns/\n\nhelm install external-dns-public external-dns/external-dns \\\n--namespace external-dns \\\n--set image.tag=v0.13.5 \\\n--set serviceAccount.create=false \\\n--set serviceAccount.name=external-dns \\\n--set interval=10s \\\n--set policy=sync \\\n--set registry=txt \\\n--set txtOwnerId=my-hostedzone-identifier \\\n--set domainFilters[0]=$DOMAIN_NAME \\\n--set provider=aws \\\n--set extraArgs[0]=\"--aws-zone-type=$ZONE_TYPE\" \\\n--set extraArgs[1]=\"--ingress-class=alb-public\"\n</code></pre> <pre><code>$DOMAIN_NAME=\"&lt;domain name (ex. my-org.com)&gt;\"\n$ZONE_TYPE=\"public\"\nhelm repo add external-dns https://kubernetes-sigs.github.io/external-dns/\nhelm install external-dns-public external-dns/external-dns `\n--namespace external-dns `\n--set image.tag=v0.13.5 `\n--set serviceAccount.create=false `\n--set serviceAccount.name=external-dns `\n--set interval=10s `\n--set policy=sync `\n--set registry=txt `\n--set txtOwnerId=my-hostedzone-identifier `\n--set domainFilters[0]=$DOMAIN_NAME `\n--set provider=aws `\n--set extraArgs[0]=\"--aws-zone-type=$ZONE_TYPE\" `\n--set extraArgs[1]=\"--ingress-class=alb-public\"\n</code></pre> <p>For private zone</p>  Linux Windows <pre><code>DOMAIN_NAME=\"&lt;domain name (ex. my-org.com)&gt;\"\nZONE_TYPE=\"private\"\nhelm repo add external-dns https://kubernetes-sigs.github.io/external-dns/\n\nhelm install external-dns-private external-dns/external-dns \\\n--namespace external-dns \\\n--set image.tag=v0.13.5 \\\n--set serviceAccount.create=false \\\n--set serviceAccount.name=external-dns \\\n--set interval=10s \\\n--set policy=sync \\\n--set registry=txt \\\n--set txtOwnerId=my-hostedzone-identifier \\\n--set domainFilters[0]=$DOMAIN_NAME \\\n--set provider=aws \\\n--set extraArgs[0]=\"--aws-zone-type=$ZONE_TYPE\" \\\n--set extraArgs[1]=\"--ingress-class=alb-private\"\n</code></pre> <pre><code>$DOMAIN_NAME=\"&lt;domain name (ex. my-org.com)&gt;\"\n$ZONE_TYPE=\"private\"\nhelm repo add external-dns https://kubernetes-sigs.github.io/external-dns/\nhelm install external-dns-private external-dns/external-dns `\n--namespace external-dns `\n--set image.tag=v0.13.5 `\n--set serviceAccount.create=false `\n--set serviceAccount.name=external-dns `\n--set interval=10s `\n--set policy=sync `\n--set registry=txt `\n--set txtOwnerId=my-hostedzone-identifier `\n--set domainFilters[0]=$DOMAIN_NAME `\n--set provider=aws `\n--set extraArgs[0]=\"--aws-zone-type=$ZONE_TYPE\" `\n--set extraArgs[1]=\"--ingress-class=alb-private\"\n</code></pre>"},{"location":"Containers/EKS/06-using-external-dns/#using-external-dns-with-alb-in-ingress","title":"Using External DNS with ALB (in Ingress)","text":"ingress.yaml<pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\nnamespace: &lt;namespace&gt;\nname: &lt;ingress name&gt;\nannotations:\nalb.ingress.kubernetes.io/scheme: internet-facing\nalb.ingress.kubernetes.io/target-type: ip\nspec:\ningressClassName: alb\nrules:\n- host: &lt;hostname (ex. echoserver.mycluster.example.org)&gt;\nhttp:\npath: /\npathType: Prefix\nbackend:\nservice:\nname: &lt;service name&gt;\nport:\nnumber: &lt;port number&gt; # like 80\n</code></pre>"},{"location":"Containers/EKS/06-using-external-dns/#dualstack-alb","title":"Dualstack ALB","text":"ingress.yaml<pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\nnamespace: &lt;namespace&gt;\nname: &lt;ingress name&gt;\nannotations:\nalb.ingress.kubernetes.io/scheme: internet-facing\nalb.ingress.kubernetes.io/ip-address-type: dualstack\nalb.ingress.kubernetes.io/target-type: ip\nspec:\ningressClassName: alb\nrules:\n- host: &lt;hostname (ex. echoserver.example.org)&gt;\nhttp:\npath: /\npathType: Prefix\nbackend:\nservice:\nname: &lt;service name&gt;\nport:\nnumber: &lt;port number&gt; # like 80\n</code></pre> <p>External DNS Documentation</p>"},{"location":"Containers/EKS/06-using-external-dns/#using-external-dns-with-nlb","title":"Using External DNS with NLB","text":"service.yaml<pre><code>apiVersion: v1\nkind: Service\nmetadata:\nnamespace: &lt;namespace&gt;\nname: &lt;ingress name&gt;\nannotations:\nexternal-dns.alpha.kubernetes.io/hostname: &lt;hostname (ex. echoserver.example.org)&gt;\nservice.beta.kubernetes.io/aws-load-balancer-type: external\nservice.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip\nservice.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing\nspec:\ntype: LoadBalancer\nselector:\napp: &lt;app label&gt;\nports:\n- port: &lt;port number&gt; # like 80\ntargetPort: &lt;port number&gt; # like 80\nprotocol: &lt;protocol&gt; # like TCP\n</code></pre> <p>External DNS Documentation</p>"},{"location":"Containers/EKS/06-using-external-dns/#using-external-dns-with-nodeport-service","title":"Using External DNS with NodePort Service","text":"service.yaml<pre><code>apiVersion: v1\nkind: Service\nmetadata:\nname: &lt;name&gt;\nnamespace: &lt;namespace&gt;\nannotations:\nexternal-dns.alpha.kubernetes.io/hostname: &lt;hostname (ex. echoserver.example.org)&gt;\nspec:\nselector:\napp: &lt;app label&gt;\ntype: NodePort\nports:\n- port: &lt;port number&gt; # like 80\ntargetPort: &lt;port number&gt; # like 80\nprotocol: &lt;protocol&gt; # like TCP\n</code></pre> <p>Warning</p> <p>If you use <code>ClusterIP</code>, you CANNOT use External DNS.</p>"},{"location":"Containers/EKS/07-horizontal-pod-autoscaling/","title":"Horizontal Pod Autoscaling","text":""},{"location":"Containers/EKS/07-horizontal-pod-autoscaling/#install-the-kubernetes-metrics-server","title":"Install the Kubernetes Metrics Server","text":"<pre><code>kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml\n\nkubectl get deployment metrics-server -n kube-system\n</code></pre> <p>AWS Documentation</p>"},{"location":"Containers/EKS/07-horizontal-pod-autoscaling/#using-hpa","title":"Using HPA","text":""},{"location":"Containers/EKS/07-horizontal-pod-autoscaling/#autoscalingv2","title":"<code>autoscaling/v2</code>","text":"hpa.yaml<pre><code>apiVersion: autoscaling/v2\nkind: HorizontalPodAutoscaler\nmetadata:\nname: nginx\nnamespace: nginx\nlabels:\napp: nginx\nspec:\nminReplicas: 2\nmaxReplicas: 10\nmetrics:\n- type: Resource\nresource:\nname: cpu\ntarget:\ntype: Utilization\naverageUtilization: 40\nscaleTargetRef:\napiVersion: apps/v1\nkind: Deployment\nname: nginx\n</code></pre>"},{"location":"Containers/EKS/07-horizontal-pod-autoscaling/#autoscalingv1","title":"<code>autoscaling/v1</code>","text":"hpa.yaml<pre><code>apiVersion: autoscaling/v1\nkind: HorizontalPodAutoscaler\nmetadata:\nname: nginx\nnamespace: nginx\nlabels:\napp: nginx\nspec:\nminReplicas: 2\nmaxReplicas: 10\ntargetCPUUtilizationPercentage: 40\nscaleTargetRef:\napiVersion: apps/v1\nkind: Deployment\nname: nginx\n</code></pre> <p>AWS Documentation</p> <p>Blog</p>"},{"location":"Containers/EKS/08-cluster-autoscaling/","title":"Cluster Autoscaling","text":""},{"location":"Containers/EKS/08-cluster-autoscaling/#using-cluster-autoscalerca","title":"Using Cluster Autoscaler(CA)","text":""},{"location":"Containers/EKS/08-cluster-autoscaling/#create-the-service-account","title":"Create the service account","text":"Linux Windows <pre><code>POLICY_NAME=\"&lt;policy name&gt;\"\nROLE_NAME=\"&lt;role name&gt;\"\nCLUSTER_NAME=\"&lt;cluster name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region code&gt;\"\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/cluster-autoscaler-policy.json\n\nPOLICY_ARN=$(aws iam create-policy \\\n--policy-name $POLICY_NAME \\\n--policy-document file://cluster-autoscaler-policy.json \\\n--query 'Policy.Arn' \\\n--output text \\\n#    --tags Key=project,Value=$PROJECT_NAME \\ # AWS CLI v2\n)\neksctl create iamserviceaccount \\\n--cluster=$CLUSTER_NAME \\\n--namespace=kube-system \\\n--name=cluster-autoscaler \\\n--role-name=$ROLE_NAME \\\n--attach-policy-arn=$POLICY_ARN \\\n--region $REGION \\\n--override-existing-serviceaccounts \\\n--approve\n</code></pre> <pre><code>$POLICY_NAME=\"&lt;policy name&gt;\"\n$ROLE_NAME=\"&lt;role name&gt;\"\n$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region code&gt;\"\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/cluster-autoscaler-policy.json\nPOLICY_ARN = aws iam create-policy `\n--policy-name $POLICY_NAME `\n--policy-document file://cluster-autoscaler-policy.json `\n--query 'Policy.Arn' `\n--output text `\n--tags Key=project,Value=$PROJECT_NAME `\neksctl create iamserviceaccount `\n--cluster=$CLUSTER_NAME `\n--namespace=kube-system `\n--name=cluster-autoscaler `\n--role-name=$ROLE_NAME `\n--attach-policy-arn=$POLICY_ARN `\n--region $REGION `\n--override-existing-serviceaccounts `\n--approve\n</code></pre> <p>AWS Documentation</p> <p>Autoscaler Documentation</p>"},{"location":"Containers/EKS/08-cluster-autoscaling/#deploy-the-cluster-autoscaler-using-helm","title":"Deploy the Cluster Autoscaler using <code>helm</code>","text":"Linux Windows <pre><code>CLUSTER_NAME=\"&lt;cluster name&gt;\"\nIMAGE_TAG=\"&lt;image tag (ex. 1.27.2)&gt;\"\nREGION=\"&lt;region code&gt;\"\nhelm repo add autoscaler https://kubernetes.github.io/autoscaler\n\nhelm install cluster-autoscaler autoscaler/cluster-autoscaler \\\n--namespace kube-system \\\n--set autoDiscovery.clusterName=$CLUSTER_NAME \\\n--set awsRegion=$REGION \\\n--set cloudProvider=aws \\\n--set extraArgs.logtostderr=true \\\n--set extraArgs.stderrthreshold=info \\\n--set extraArgs.v=4 \\\n--set extraArgs.skip-nodes-with-local-storage=false \\\n--set extraArgs.expander=least-waste \\\n--set extraArgs.balance-similar-node-groups=true \\\n--set extraArgs.skip-nodes-with-system-pods=false \\\n--set image.tag=v$IMAGE_TAG \\\n--set rbac.serviceAccount.create=false \\\n--set rbac.serviceAccount.name=cluster-autoscaler\n</code></pre> <pre><code>$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$IMAGE_TAG=\"&lt;image tag (ex. 1.27.2)&gt;\"\n$REGION=\"&lt;region code&gt;\"\nhelm repo add autoscaler https://kubernetes.github.io/autoscaler\n\nhelm install cluster-autoscaler autoscaler/cluster-autoscaler `\n--namespace kube-system `\n--set autoDiscovery.clusterName=$CLUSTER_NAME `\n--set awsRegion=$REGION `\n--set cloudProvider=aws `\n--set extraArgs.logtostderr=true `\n--set extraArgs.stderrthreshold=info `\n--set extraArgs.v=4 `\n--set extraArgs.skip-nodes-with-local-storage=false `\n--set extraArgs.expander=least-waste `\n--set extraArgs.balance-similar-node-groups=true `\n--set extraArgs.skip-nodes-with-system-pods=false `\n--set image.tag=v$IMAGE_TAG `\n--set rbac.serviceAccount.create=false `\n--set rbac.serviceAccount.name=cluster-autoscaler\n</code></pre> Kubernetes CA Default 1.27 1.27.3 default 1.26 1.26.4 1.25 1.25.3 1.24 1.24.3 1.23 1.23 <p>Go to here and please check the new version of your kubernetes version. (2023-08-09)</p> <p>AWS Documentation</p>"},{"location":"Containers/EKS/08-cluster-autoscaling/#using-karpenter","title":"Using Karpenter","text":""},{"location":"Containers/EKS/08-cluster-autoscaling/#add-tags-to-subnets","title":"Add tags to subnets","text":"Linux Windows <pre><code>REGION=\"\"\nCLUSTER_NAME=\"\"\nSUBNET_LIST=(\n\"subnet-xxxxxxxxxxxxxxxxx\"\n\"subnet-xxxxxxxxxxxxxxxxx\"\n)\nfor subnet in \"${SUBNET_LIST[@]}\"\ndo\naws ec2 create-tags \\\n--tags \"Key=karpenter.sh/discovery,Value=${CLUSTER_NAME}\" \\\n--resources ${subnet} \\\n--region $REGION \\\n--no-cli-pager\ndone\n</code></pre> <pre><code>$REGION=\"\"\n$CLUSTER_NAME=\"\"\n$SUBNET_LIST  = @(\n\"subnet-xxxxxxxxxxxxxxxxx\",\n\"subnet-xxxxxxxxxxxxxxxxx\"\n)\nforeach ($subnet in $SUBNET_LIST) {\naws ec2 create-tags `\n--tags \"Key=karpenter.sh/discovery,Value=${CLUSTER_NAME}\" `\n--resources ${subnet} `\n--region $REGION `\n--no-cli-pager\n}\n</code></pre>"},{"location":"Containers/EKS/08-cluster-autoscaling/#add-tags-to-security-groups","title":"Add tags to security groups","text":"Linux Windows <pre><code>REGION=\"\"\nCLUSTER_NAME=\"\"\nSG_LIST=(\n\"sg-xxxxxxxxxxxxxxxxx\"\n\"sg-xxxxxxxxxxxxxxxxx\"\n)\nfor sg in \"${SG_LIST[@]}\"\ndo\naws ec2 create-tags \\\n--tags \"Key=karpenter.sh/discovery,Value=${CLUSTER_NAME}\" \\\n--resources ${sg} \\\n--region $REGION \\\n--no-cli-pager\ndone\n</code></pre> <pre><code>$REGION=\"\"\n$CLUSTER_NAME=\"\"\n$SG_LIST  = @(\n\"sg-xxxxxxxxxxxxxxxxx\",\n\"sg-xxxxxxxxxxxxxxxxx\"\n)\nforeach ($sg in $SG_LIST) {\naws ec2 create-tags `\n--tags \"Key=karpenter.sh/discovery,Value=${CLUSTER_NAME}\" `\n--resources ${sg} `\n--region $REGION `\n--no-cli-pager\n}\n</code></pre>"},{"location":"Containers/EKS/08-cluster-autoscaling/#create-the-karpenter-controller-policy","title":"Create the Karpenter Controller policy","text":"Linux Windows <pre><code>STACK_NAME=\"\"\nPROJECT_NAME=\"\"\nREGION=\"\"\n### Policy Configuration\nPolicyName=\"\"     # [REQUIRED] The name of service account's IAM policy.\n### EKS Configuration\nClusterName=\"\"    # [REQUIRED] The name of EKS cluster.\nNodeRoleName=\"\"   # [REQUIRED] The name of EKS node's role.\n### SQS Configuration\nQueueName=\"\"      # [REQUIRED] The name of SQS queue for NTH.\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/karpenter-controller-policy.yaml\n\naws cloudformation deploy \\\n--template-file ./karpenter-controller-policy.yaml \\\n--stack-name $STACK_NAME \\\n--parameter-overrides \\\nPolicyName=$PolicyName \\\nClusterName=$ClusterName \\\nNodeRoleName=$NodeRoleName \\\nQueueName=$QueueName \\\n--tags project=$PROJECT_NAME \\\n--capabilities CAPABILITY_NAMED_IAM \\\n--disable-rollback \\\n--region $REGION\n</code></pre> <pre><code>$STACK_NAME=\"\"\n$PROJECT_NAME=\"\"\n$REGION=\"\"\n### Policy Configuration\n$PolicyName=\"\"    # [REQUIRED] The name of service account's IAM policy.\n### EKS Configuration\n$ClusterName=\"\"   # [REQUIRED] The name of EKS cluster.\n$NodeRoleName=\"\"  # [REQUIRED] The name of EKS node's role.\n### SQS Configuration\n$QueueName=\"\"      # [REQUIRED] The name of SQS queue for NTH\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/karpenter-controller-policy.yaml\naws cloudformation deploy `\n--template-file ./karpenter-controller-policy.yaml `\n--stack-name $STACK_NAME `\n--parameter-overrides `\nPolicyName=$PolicyName `\nClusterName=$ClusterName `\nNodeRoleName=$NodeRoleName `\nQueueName=$QueueName `\n--tags project=$PROJECT_NAME `\n--capabilities CAPABILITY_NAMED_IAM `\n--disable-rollback `\n--region $REGION\n</code></pre> <p>Karpenter Documentation</p>"},{"location":"Containers/EKS/08-cluster-autoscaling/#create-the-service-account_1","title":"Create the service account","text":"Linux Windows <pre><code>POLICY_NAME=\"&lt;policy name&gt;\"\nROLE_NAME=\"&lt;role name&gt;\"\nCLUSTER_NAME=\"&lt;cluster name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region code&gt;\"\nPOLICY_ARN=$(aws iam list-policies \\\n--query \"Policies[?PolicyName=='$POLICY_NAME'].Arn\" --output text)\neksctl create iamserviceaccount \\\n--cluster=$CLUSTER_NAME \\\n--namespace=karpenter \\\n--name=karpenter \\\n--role-name=$ROLE_NAME \\\n--attach-policy-arn=$POLICY_ARN \\\n--region $REGION \\\n--approve\n</code></pre> <pre><code>$POLICY_NAME=\"&lt;policy name&gt;\"\n$ROLE_NAME=\"&lt;role name&gt;\"\n$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region code&gt;\"\n$POLICY_ARN = aws iam list-policies `\n--query \"Policies[?PolicyName=='$POLICY_NAME'].Arn\" --output text\neksctl create iamserviceaccount `\n--cluster=$CLUSTER_NAME `\n--namespace=karpenter `\n--name=karpenter `\n--role-name=$ROLE_NAME `\n--attach-policy-arn=$POLICY_ARN `\n--region $REGION `\n--approve\n</code></pre> <p>Note</p> <p>If you use CMK in SQS queue, you should add below policy.</p> KMS Key Policy<pre><code>{\n\"Sid\": \"AllowConsumersToReceiveFromTheQueue - Karpenter\",\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"AWS\": [\n\"&lt;KARPENTER SERVICE ACCOUNT ROLE ARN&gt;\"\n]\n},\n\"Action\": [\n\"kms:Decrypt\"\n],\n\"Resource\": \"*\"\n}\n</code></pre>"},{"location":"Containers/EKS/08-cluster-autoscaling/#install-karpenter-using-helm","title":"Install Karpenter using <code>helm</code>","text":"Linux Windows <pre><code>CLUSTER_NAME=\"\"\nNODEGROUP_ROLE_NAME=\"\"\nQUEUE_NAME=\"\"\nhelm repo add karpenter https://charts.karpenter.sh/\nhelm repo update\n\nhelm install karpenter oci://public.ecr.aws/karpenter/karpenter \\\n--create-namespace \\\n--namespace karpenter \\\n--version v0.29.2 \\\n--set serviceAccount.create=false \\\n--set serviceAccount.name=karpenter \\\n--set settings.aws.clusterName=$CLUSTER_NAME \\\n--set settings.aws.defaultInstanceProfile=$NODEGROUP_ROLE_NAME \\\n--set settings.aws.interruptionQueueName=$QUEUE_NAME\n</code></pre> <pre><code>$CLUSTER_NAME=\"\"\n$NODEGROUP_ROLE_NAME=\"\"\n$QUEUE_NAME=\"\"\nhelm repo add karpenter https://charts.karpenter.sh/\nhelm repo update\n\nhelm install karpenter oci://public.ecr.aws/karpenter/karpenter `\n--create-namespace `\n--namespace karpenter `\n--version v0.29.2 `\n--set serviceAccount.create=false `\n--set serviceAccount.name=karpenter `\n--set settings.aws.clusterName=$CLUSTER_NAME `\n--set settings.aws.defaultInstanceProfile=$NODEGROUP_ROLE_NAME `\n--set settings.aws.interruptionQueueName=$QUEUE_NAME\n</code></pre> <p>Go to here and please check the new version. (2023-08-09)</p>"},{"location":"Containers/EKS/08-cluster-autoscaling/#create-a-node-template","title":"Create a node template","text":"node-template.yaml<pre><code>apiVersion: karpenter.k8s.aws/v1alpha1\nkind: AWSNodeTemplate\nmetadata:\nname: &lt;node template name&gt;\nspec:\nsubnetSelector: { ... }        # required, discovers tagged subnets to attach to instances\nsecurityGroupSelector: { ... } # required, discovers tagged security groups to attach to instances\ninstanceProfile: \"...\"         # optional, overrides the node's identity from global settings\namiFamily: \"...\"               # optional, resolves a default ami and userdata\namiSelector: { ... }           # optional, discovers tagged amis to override the amiFamily's default\nuserData: \"...\"                # optional, overrides autogenerated userdata with a merge semantic\ntags: { ... }                  # optional, propagates tags to underlying EC2 resources\nmetadataOptions: { ... }       # optional, configures IMDS for the instance\nblockDeviceMappings: [ ... ]   # optional, configures storage devices for the instance\ndetailedMonitoring: \"...\"      # optional, configures detailed monitoring for the instance\n</code></pre> Amazon Linux 2 Example node-template.yaml<pre><code>apiVersion: karpenter.k8s.aws/v1alpha1\nkind: AWSNodeTemplate\nmetadata:\nname: &lt;node-template-name&gt;\nspec:\nsubnetSelector:\naws-ids: \"subnet-xxxxxxxxxxxxxxxxx,subnet-xxxxxxxxxxxxxxxxx\"\nsecurityGroupSelector:\naws-ids: \"sg-xxxxxxxxxxxxxxxxx,sg-xxxxxxxxxxxxxxxxx\"\ninstanceProfile: &lt;instance-profile-name&gt;\namiFamily: AL2\ntags:\nName: &lt;instance, volume, lt name&gt;\nproject: &lt;project name&gt;\nmetadataOptions:\nhttpEndpoint: enabled\nhttpProtocolIPv6: disabled\nhttpPutResponseHopLimit: 2\nhttpTokens: required\nblockDeviceMappings:\n- deviceName: /dev/xvda\nebs:\nvolumeSize: 50Gi\nvolumeType: gp3\nencrypted: true\n</code></pre> Bottlerocket Example node-template.yaml<pre><code>apiVersion: karpenter.k8s.aws/v1alpha1\nkind: AWSNodeTemplate\nmetadata:\nname: &lt;node-template-name&gt;\nspec:\nsubnetSelector:\naws-ids: \"subnet-xxxxxxxxxxxxxxxxx,subnet-xxxxxxxxxxxxxxxxx\"\nsecurityGroupSelector:\naws-ids: \"sg-xxxxxxxxxxxxxxxxx,sg-xxxxxxxxxxxxxxxxx\"\ninstanceProfile: &lt;instance-profile-name&gt;\namiFamily: Bottlerocket\ntags:\nName: &lt;instance, volume, lt name&gt;\nproject: &lt;project name&gt;\nmetadataOptions:\nhttpEndpoint: enabled\nhttpProtocolIPv6: disabled\nhttpPutResponseHopLimit: 2\nhttpTokens: required\nblockDeviceMappings:\n# Root device\n- deviceName: /dev/xvda\nebs:\nvolumeSize: 4Gi\nvolumeType: gp3\nencrypted: true\n# Data device: Container resources such as images and logs\n- deviceName: /dev/xvdb\nebs:\nvolumeSize: 50Gi\nvolumeType: gp3\nencrypted: true\n</code></pre> <p>Karpenter Documentation</p>"},{"location":"Containers/EKS/08-cluster-autoscaling/#create-a-provisioner","title":"Create a provisioner","text":"provisioner<pre><code>apiVersion: karpenter.sh/v1alpha5\nkind: Provisioner\nmetadata:\nname: default\nspec:\n# References cloud provider-specific custom resource, see your cloud provider specific documentation\nproviderRef:\nname: default # Node Template Name\n# Provisioned nodes will have these taints\n# Taints may prevent pods from scheduling if they are not tolerated by the pod.\ntaints:\n- key: key1\nvalue: \"value1\"\neffect: NoSchedule\n# Provisioned nodes will have these taints, but pods do not need to tolerate these taints to be provisioned by this\n# provisioner. These taints are expected to be temporary and some other entity (e.g. a DaemonSet) is responsible for\n# removing the taint after it has finished initializing the node.\nstartupTaints:\n- key: key1\neffect: NoSchedule\n# Labels are arbitrary key-values that are applied to all nodes\nlabels:\nkey1: value1\n# Annotations are arbitrary key-values that are applied to all nodes\nannotations:\nkey1: \"value1\"\n# Requirements that constrain the parameters of provisioned nodes.\n# These requirements are combined with pod.spec.affinity.nodeAffinity rules.\n# Operators { In, NotIn } are supported to enable including or excluding values\nrequirements:\n- key: \"karpenter.k8s.aws/instance-category\"\noperator: In\nvalues: [\"c\", \"m\", \"r\"]\n- key: \"karpenter.k8s.aws/instance-cpu\"\noperator: In\nvalues: [\"4\", \"8\", \"16\", \"32\"]\n- key: \"karpenter.k8s.aws/instance-hypervisor\"\noperator: In\nvalues: [\"nitro\"]\n- key: karpenter.k8s.aws/instance-generation\noperator: Gt\nvalues: [\"2\"]\n- key: \"topology.kubernetes.io/zone\"\noperator: In\nvalues: [\"us-west-2a\", \"us-west-2b\"]\n- key: \"kubernetes.io/arch\"\noperator: In\nvalues: [\"arm64\", \"amd64\"]\n- key: \"karpenter.sh/capacity-type\" # If not included, the webhook for the AWS cloud provider will default to on-demand\noperator: In\nvalues: [\"spot\", \"on-demand\"]\n# Karpenter provides the ability to specify a few additional Kubelet args.\n# These are all optional and provide support for additional customization and use cases.\nkubeletConfiguration:\nclusterDNS: [\"10.0.1.100\"]\ncontainerRuntime: containerd\nsystemReserved:\ncpu: 100m\nmemory: 100Mi\nephemeral-storage: 1Gi\nkubeReserved:\ncpu: 200m\nmemory: 100Mi\nephemeral-storage: 3Gi\nevictionHard:\nmemory.available: 5%\nnodefs.available: 10%\nnodefs.inodesFree: 10%\nevictionSoft:\nmemory.available: 500Mi\nnodefs.available: 15%\nnodefs.inodesFree: 15%\nevictionSoftGracePeriod:\nmemory.available: 1m\nnodefs.available: 1m30s\nnodefs.inodesFree: 2m\nevictionMaxPodGracePeriod: 60\nimageGCHighThresholdPercent: 85\nimageGCLowThresholdPercent: 80\ncpuCFSQuota: true\npodsPerCore: 2\nmaxPods: 20\n# Resource limits constrain the total size of the cluster.\n# Limits prevent Karpenter from creating new instances once the limit is exceeded.\nlimits:\nresources:\ncpu: \"1000\"\nmemory: 1000Gi\n# Enables consolidation which attempts to reduce cluster cost by both removing un-needed nodes and down-sizing those\n# that can't be removed.  Mutually exclusive with the ttlSecondsAfterEmpty parameter.\nconsolidation:\nenabled: true\n# If omitted, the feature is disabled and nodes will never expire.  If set to less time than it requires for a node\n# to become ready, the node may expire before any pods successfully start.\nttlSecondsUntilExpired: 2592000 # 30 Days = 60 * 60 * 24 * 30 Seconds;\n# If omitted, the feature is disabled, nodes will never scale down due to low utilization\nttlSecondsAfterEmpty: 30\n# Priority given to the provisioner when the scheduler considers which provisioner\n# to select. Higher weights indicate higher priority when comparing provisioners.\n# Specifying no weight is equivalent to specifying a weight of 0.\nweight: 10\n</code></pre> <p>Karpenter Documentation</p>"},{"location":"Containers/EKS/08-cluster-autoscaling/#deploy-overprovisioning-pod","title":"Deploy Overprovisioning Pod","text":"overprovisioning.yaml<pre><code>---\napiVersion: scheduling.k8s.io/v1\nkind: PriorityClass\nmetadata:\nname: overprovisioning\nvalue: -1\nglobalDefault: false\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\nname: overprovisioning\nnamespace: kube-system\nspec:\nreplicas: 3\nselector:\nmatchLabels:\nrun: overprovisioning\ntemplate:\nmetadata:\nlabels:\nrun: overprovisioning\nspec:\npriorityClassName: overprovisioning\ncontainers:\n- name: reserve-resources\nimage: k8s.gcr.io/pause\nresources:\nrequests:\ncpu: 820m\nmemory: 2000Mi\n# tolerations:\n#   - key: \"key1\"         # taint key\n#     value: \"value1\"     # taint value\n#     operator: \"Equal\"\n#     effect: \"NoSchedule\"\n# nodeSelector:\n#   key: value            # node label key and value\n</code></pre>"},{"location":"Containers/EKS/09-install-amp/","title":"Install Amazon Managed Prometheus","text":"<p>Note</p> <p>Maybe you need EBS CSI Driver to use AMP. Using EBS</p>"},{"location":"Containers/EKS/09-install-amp/#create-prometheus-workspace","title":"Create prometheus workspace","text":"Linux Windows <pre><code>STACK_NAME=\"&lt;stack name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region code&gt;\"\nWORKSPACE_NAME=\"\"                             # [REQUIRED] The name of this APS workspace.\nLOG_GROUP_NAME=\"/aws/vendedlogs/prometheus\"   # [REQUIRED] The name of this APS workspace's log group.\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/aps/workspace.yaml\n\naws cloudformation deploy \\\n--stack-name $STACK_NAME \\\n--template-file ./workspace.yaml \\\n--parameter-overrides \\\nProjectName=$PROJECT_NAME \\\nWorkspaceName=$WORKSPACE_NAME \\\nLogGroupName=$LOG_GROUP_NAME \\\n--tags project=$PROJECT_NAME \\\n--region $REGION \\\n--disable-rollback\n</code></pre> <pre><code>$STACK_NAME=\"&lt;stack name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region code&gt;\"\n$WORKSPACE_NAME=\"\"                            # [REQUIRED] The name of this APS workspace.\n$LOG_GROUP_NAME=\"/aws/vendedlogs/prometheus\"  # [REQUIRED] The name of this APS workspace's log group.\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/aps/workspace.yaml\naws cloudformation deploy `\n--stack-name $STACK_NAME `\n--template-file ./workspace.yaml `\n--parameter-overrides `\nProjectName=$PROJECT_NAME `\nWorkspaceName=$WORKSPACE_NAME `\nLogGroupName=$LOG_GROUP_NAME `\n--tags project=$PROJECT_NAME `\n--region $REGION `\n--disable-rollback\n</code></pre> <p>AWS Documentation</p>"},{"location":"Containers/EKS/09-install-amp/#create-prometheus-namespace","title":"Create prometheus namespace","text":"<pre><code>kubectl create namespace prometheus\n</code></pre>"},{"location":"Containers/EKS/09-install-amp/#create-prometheus-iam-role-for-service-account","title":"Create prometheus IAM role for service account","text":"Linux Windows <pre><code>CLUSTER_NAME=\"&lt;cluster name&gt;\"\nSTACK_NAME=\"&lt;workspace stack name&gt;\"\nPOLICY_NAME=\"&lt;policy name&gt;\"\nROLE_NAME=\"&lt;role name&gt;\"\nREGION=\"&lt;region code&gt;\"\nAMP_WORKSPACE_ARN=$(aws cloudformation describe-stacks \\\n--stack-name $STACK_NAME \\\n--query 'Stacks[0].Outputs[?OutputKey==`WorkspaceArn`].OutputValue' \\\n--region $REGION \\\n--output text\n)\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/prometheus-policy.json\nsed -i \"s|AMP_WORKSPACE_ARN|$AMP_WORKSPACE_ARN|\" ./prometheus-policy.json\n\nPOLICY_ARN=$(aws iam create-policy \\\n--policy-name $POLICY_NAME \\\n--policy-document file://prometheus-policy.json \\\n--query 'Policy.Arn' \\\n--output text \\\n# --tags Key=project,Value=$PROJECT_NAME \\  # AWS CLI v2\n)\neksctl create iamserviceaccount \\\n--cluster $CLUSTER_NAME \\\n--namespace prometheus \\\n--name prometheus-server \\\n--role-name $ROLE_NAME \\\n--attach-policy-arn $POLICY_ARN \\\n--tags project=$PROJECT_NAME \\\n--region $REGION \\\n--override-existing-serviceaccounts \\\n--approve\n</code></pre> <pre><code>$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$STACK_NAME=\"&lt;workspace stack name&gt;\"\n$POLICY_NAME=\"&lt;policy name&gt;\"\n$ROLE_NAME=\"&lt;role name&gt;\"\n$REGION=\"&lt;region code&gt;\"\n$AMP_WORKSPACE_ARN = aws cloudformation describe-stacks `\n--stack-name $STACK_NAME `\n--query 'Stacks[0].Outputs[?OutputKey==`WorkspaceArn`].OutputValue' `\n--region $REGION `\n--output text\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/prometheus-policy.json\n$content = Get-Content ./prometheus-policy.json\n$content = $content -replace \"AMP_WORKSPACE_ARN\", $AMP_WORKSPACE_ARN\n$content | Set-Content ./prometheus-policy.json\n$POLICY_ARN = aws iam create-policy `\n--policy-name $POLICY_NAME `\n--policy-document file://prometheus-policy.json `\n--query 'Policy.Arn' `\n--output text `\n--tags Key=project,Value=$PROJECT_NAME\neksctl create iamserviceaccount `\n--cluster $CLUSTER_NAME `\n--namespace prometheus `\n--name prometheus-server `\n--role-name $ROLE_NAME `\n--attach-policy-arn $POLICY_ARN `\n--tags project=$PROJECT_NAME `\n--region $REGION `\n--override-existing-serviceaccounts `\n--approve\n</code></pre> <p>AWS Documentation</p>"},{"location":"Containers/EKS/09-install-amp/#install-prometheus-with-helm","title":"Install prometheus with <code>helm</code>","text":"Linux Windows <pre><code>STACK_NAME=\"&lt;workspace stack name&gt;\"\nREGION=\"&lt;region code&gt;\"\nAPS_ENDPOINT=$(aws cloudformation describe-stacks \\\n--stack-name $STACK_NAME \\\n--query 'Stacks[0].Outputs[?OutputKey==`WorkspaceEndpoint`].OutputValue' \\\n--region $REGION \\\n--output text\n)\nAPS_ENDPOINT=\"${APS_ENDPOINT}api/v1/remote_write\"\nhelm repo add prometheus-community https://prometheus-community.github.io/helm-charts\nhelm repo add kube-state-metrics https://kubernetes.github.io/kube-state-metrics\nhelm repo update\n\nhelm install prometheus prometheus-community/prometheus \\\n-n prometheus \\\n--set serviceAccounts.server.create=false \\\n--set serviceAccounts.server.name=prometheus-server \\\n--set server.remoteWrite[0].url=$APS_ENDPOINT \\\n--set server.remoteWrite[0].sigv4.region=$REGION \\\n--set server.remoteWrite[0].queue_config.max_samples_per_send=1000 \\\n--set server.remoteWrite[0].queue_config.max_shards=200 \\\n--set server.remoteWrite[0].queue_config.capacity=2500\n</code></pre> <pre><code>$STACK_NAME=\"&lt;workspace stack name&gt;\"\n$REGION=\"&lt;region code&gt;\"\n$APS_ENDPOINT = aws cloudformation describe-stacks `\n--stack-name $STACK_NAME `\n--query 'Stacks[0].Outputs[?OutputKey==`WorkspaceEndpoint`].OutputValue' `\n--region $REGION `\n--output text\n$APS_ENDPOINT = $APS_ENDPOINT + \"api/v1/remote_write\"\nhelm repo add prometheus-community https://prometheus-community.github.io/helm-charts\nhelm repo add kube-state-metrics https://kubernetes.github.io/kube-state-metrics\nhelm repo update\nhelm install prometheus prometheus-community/prometheus `\n-n prometheus `\n--set serviceAccounts.server.create=false `\n--set serviceAccounts.server.name=prometheus-server `\n--set server.remoteWrite[0].url=$APS_ENDPOINT `\n--set server.remoteWrite[0].sigv4.region=$REGION `\n--set server.remoteWrite[0].queue_config.max_samples_per_send=1000 `\n--set server.remoteWrite[0].queue_config.max_shards=200 `\n--set server.remoteWrite[0].queue_config.capacity=2500\n</code></pre> <p>AWS Documentation</p>"},{"location":"Containers/EKS/10-enable-container-insights-on-eks/","title":"Enable Container Insights on EKS","text":""},{"location":"Containers/EKS/10-enable-container-insights-on-eks/#using-cloudwatch-agent-on-ec2","title":"Using CloudWatch Agent on EC2","text":""},{"location":"Containers/EKS/10-enable-container-insights-on-eks/#create-a-service-account-for-cloudwatch-agent","title":"Create a service account for CloudWatch Agent","text":"Linux Windows <pre><code>CLUSTER_NAME=\"&lt;cluster name&gt;\"\nROLE_NAME=\"&lt;role_name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region code&gt;\"\neksctl create iamserviceaccount \\\n--cluster $CLUSTER_NAME \\\n--name cloudwatch-agent \\\n--namespace amazon-cloudwatch \\\n--attach-policy-arn arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy \\\n--role-name $ROLE_NAME \\\n--tags project=$PROJECT_NAME \\\n--region $REGION \\\n--override-existing-serviceaccounts \\\n--approve\n</code></pre> <pre><code>$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$ROLE_NAME=\"&lt;role_name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region code&gt;\"\neksctl create iamserviceaccount `\n--cluster $CLUSTER_NAME `\n--name cloudwatch-agent `\n--namespace amazon-cloudwatch `\n--attach-policy-arn arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy `\n--role-name $ROLE_NAME `\n--tags project=$PROJECT_NAME `\n--region $REGION `\n--override-existing-serviceaccounts `\n--approve\n</code></pre>"},{"location":"Containers/EKS/10-enable-container-insights-on-eks/#deploy-cloudwatch-agent-using-helm","title":"Deploy CloudWatch Agent using <code>helm</code>","text":"Linux Windows <pre><code>CLUSTER_NAME=\"&lt;cluster name&gt;\"\nhelm repo add container-insights https://marcus16-kang.github.io/aws-container-insights-chart/\nhelm install cloudwatch-agent container-insights/cloudwatch-agent \\\n--namespace amazon-cloudwatch \\\n--set clusterName=$CLUSTER_NAME \\\n--set serviceAccount.create=false\n</code></pre> <pre><code>$CLUSTER_NAME=\"&lt;cluster name&gt;\"\nhelm repo add container-insights https://marcus16-kang.github.io/aws-container-insights-chart/\nhelm install cloudwatch-agent container-insights/cloudwatch-agent `\n--namespace amazon-cloudwatch `\n--set clusterName=$CLUSTER_NAME `\n--set serviceAccount.create=false\n</code></pre> <p>Note</p> <p>If you want to use tolerations, using this parameter.</p>  Linux Windows <pre><code>--set tolerations[0].key=key1 \\\n--set tolerations[0].value=value1 \\\n--set tolerations[0].operator=Equal \\\n--set tolerations[0].effect=NoSchedule\n</code></pre> <pre><code>--set tolerations[0].key=key1 `\n--set tolerations[0].value=value1 `\n--set tolerations[0].operator=Equal `\n--set tolerations[0].effect=NoSchedule\n</code></pre> <p>Github Documentation</p>"},{"location":"Containers/EKS/10-enable-container-insights-on-eks/#deploy-cloudwatch-agent-using-kubectl","title":"Deploy CloudWatch Agent using <code>kubectl</code>","text":"<p>Create a namespace for CloudWatch</p> <pre><code>kubectl apply -f https://raw.githubusercontent.com/aws-samples/amazon-cloudwatch-container-insights/latest/k8s-deployment-manifest-templates/deployment-mode/daemonset/container-insights-monitoring/cloudwatch-namespace.yaml\n</code></pre> cloudwatch-namespace.yaml <pre><code># create amazon-cloudwatch namespace\napiVersion: v1\nkind: Namespace\nmetadata:\nname: amazon-cloudwatch\nlabels:\nname: amazon-cloudwatch\n</code></pre> <p>AWS Documentation</p> <p>Create a service account for CloudWatch Agent</p> <pre><code>kubectl apply -f https://raw.githubusercontent.com/aws-samples/amazon-cloudwatch-container-insights/latest/k8s-deployment-manifest-templates/deployment-mode/daemonset/container-insights-monitoring/cwagent/cwagent-serviceaccount.yaml\n</code></pre> cwagent-serviceaccount.yaml <pre><code># create cwagent service account and role binding\napiVersion: v1\nkind: ServiceAccount\nmetadata:\nname: cloudwatch-agent\nnamespace: amazon-cloudwatch\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\nname: cloudwatch-agent-role\nrules:\n- apiGroups: [\"\"]\nresources: [\"pods\", \"nodes\", \"endpoints\"]\nverbs: [\"list\", \"watch\"]\n- apiGroups: [\"apps\"]\nresources: [\"replicasets\"]\nverbs: [\"list\", \"watch\"]\n- apiGroups: [\"batch\"]\nresources: [\"jobs\"]\nverbs: [\"list\", \"watch\"]\n- apiGroups: [\"\"]\nresources: [\"nodes/proxy\"]\nverbs: [\"get\"]\n- apiGroups: [\"\"]\nresources: [\"nodes/stats\", \"configmaps\", \"events\"]\nverbs: [\"create\"]\n- apiGroups: [\"\"]\nresources: [\"configmaps\"]\nresourceNames: [\"cwagent-clusterleader\"]\nverbs: [\"get\",\"update\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\nname: cloudwatch-agent-role-binding\nsubjects:\n- kind: ServiceAccount\nname: cloudwatch-agent\nnamespace: amazon-cloudwatch\nroleRef:\nkind: ClusterRole\nname: cloudwatch-agent-role\napiGroup: rbac.authorization.k8s.io\n</code></pre> <p>AWS Documentation</p> <p>Create a ConfigMap for the CloudWatch agent</p>  Linux Windows <pre><code>CLUSTER_NAME=\"&lt;cluster name&gt;\"\ncurl -LO https://raw.githubusercontent.com/aws-samples/amazon-cloudwatch-container-insights/latest/k8s-deployment-manifest-templates/deployment-mode/daemonset/container-insights-monitoring/cwagent/cwagent-configmap.yaml\n\nsed -i \"s/{{cluster_name}}/$CLUSTER_NAME/\" cwagent-configmap.yaml\n\nkubectl apply -f cwagent-configmap.yaml\n</code></pre> <pre><code>$CLUSTER_NAME=\"&lt;cluster name&gt;\"\ncurl.exe -LO https://raw.githubusercontent.com/aws-samples/amazon-cloudwatch-container-insights/latest/k8s-deployment-manifest-templates/deployment-mode/daemonset/container-insights-monitoring/cwagent/cwagent-configmap.yaml\n(Get-Content cwagent-configmap.yaml) | ForEach-Object { $_ -replace '{{cluster_name}}', $CLUSTER_NAME } | Set-Content cwagent-configmap.yaml\nkubectl apply -f cwagent-configmap.yaml\n</code></pre> cwagent-configmap.yaml <pre><code># create configmap for cwagent config\napiVersion: v1\ndata:\n# Configuration is in Json format. No matter what configure change you make,\n# please keep the Json blob valid.\ncwagentconfig.json: |\n{\n\"logs\": {\n\"metrics_collected\": {\n\"kubernetes\": {\n\"cluster_name\": \"{{cluster_name}}\",\n\"metrics_collection_interval\": 60\n}\n},\n\"force_flush_interval\": 5\n}\n}\nkind: ConfigMap\nmetadata:\nname: cwagentconfig\nnamespace: amazon-cloudwatch\n</code></pre> <p>AWS Documentation</p> <p>Deploy the CloudWatch agent as a DaemonSet</p> <pre><code>kubectl apply -f https://raw.githubusercontent.com/aws-samples/amazon-cloudwatch-container-insights/latest/k8s-deployment-manifest-templates/deployment-mode/daemonset/container-insights-monitoring/cwagent/cwagent-daemonset.yaml\n\nkubectl get pods -n amazon-cloudwatch\n</code></pre> cwagent-daemonset.yaml <pre><code># deploy cwagent as daemonset\napiVersion: apps/v1\nkind: DaemonSet\nmetadata:\nname: cloudwatch-agent\nnamespace: amazon-cloudwatch\nspec:\nselector:\nmatchLabels:\nname: cloudwatch-agent\ntemplate:\nmetadata:\nlabels:\nname: cloudwatch-agent\nspec:\ncontainers:\n- name: cloudwatch-agent\nimage: public.ecr.aws/cloudwatch-agent/cloudwatch-agent:1.247357.0b252275\n#ports:\n#  - containerPort: 8125\n#    hostPort: 8125\n#    protocol: UDP\nresources:\nlimits:\ncpu:  200m\nmemory: 200Mi\nrequests:\ncpu: 200m\nmemory: 200Mi\n# Please don't change below envs\nenv:\n- name: HOST_IP\nvalueFrom:\nfieldRef:\nfieldPath: status.hostIP\n- name: HOST_NAME\nvalueFrom:\nfieldRef:\nfieldPath: spec.nodeName\n- name: K8S_NAMESPACE\nvalueFrom:\nfieldRef:\nfieldPath: metadata.namespace\n- name: CI_VERSION\nvalue: \"k8s/1.3.12\"\n# Please don't change the mountPath\nvolumeMounts:\n- name: cwagentconfig\nmountPath: /etc/cwagentconfig\n- name: rootfs\nmountPath: /rootfs\nreadOnly: true\n- name: dockersock\nmountPath: /var/run/docker.sock\nreadOnly: true\n- name: varlibdocker\nmountPath: /var/lib/docker\nreadOnly: true\n- name: containerdsock\nmountPath: /run/containerd/containerd.sock\nreadOnly: true\n- name: sys\nmountPath: /sys\nreadOnly: true\n- name: devdisk\nmountPath: /dev/disk\nreadOnly: true\nnodeSelector:\nkubernetes.io/os: linux\nvolumes:\n- name: cwagentconfig\nconfigMap:\nname: cwagentconfig\n- name: rootfs\nhostPath:\npath: /\n- name: dockersock\nhostPath:\npath: /var/run/docker.sock\n- name: varlibdocker\nhostPath:\npath: /var/lib/docker\n- name: containerdsock\nhostPath:\npath: /run/containerd/containerd.sock\n- name: sys\nhostPath:\npath: /sys\n- name: devdisk\nhostPath:\npath: /dev/disk/\nterminationGracePeriodSeconds: 60\nserviceAccountName: cloudwatch-agent\n</code></pre>"},{"location":"Containers/EKS/10-enable-container-insights-on-eks/#using-adot-on-ec2","title":"Using ADOT on EC2","text":""},{"location":"Containers/EKS/10-enable-container-insights-on-eks/#create-a-service-account-for-adot-on-ec2","title":"Create a service account for ADOT on EC2","text":"Linux Windows <pre><code>CLUSTER_NAME=\"&lt;cluster name&gt;\"\nROLE_NAME=\"&lt;role name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region code&gt;\"\neksctl create iamserviceaccount \\\n--cluster $CLUSTER_NAME \\\n--name aws-otel-sa \\\n--namespace amazon-cloudwatch \\\n--attach-policy-arn arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy \\\n--role-name $ROLE_NAME \\\n--tags project=$PROJECT_NAME \\\n--region $REGION \\\n--override-existing-serviceaccounts \\\n--approve\n</code></pre> <pre><code>$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$ROLE_NAME=\"&lt;role name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region code&gt;\"\neksctl create iamserviceaccount ` \n--cluster $CLUSTER_NAME ` \n--name aws-otel-sa ` \n--namespace amazon-cloudwatch ` \n--attach-policy-arn arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy ` \n--role-name $ROLE_NAME ` \n--tags project=$PROJECT_NAME ` \n--region $REGION `\n--override-existing-serviceaccounts ` \n--approve\n</code></pre>"},{"location":"Containers/EKS/10-enable-container-insights-on-eks/#deploy-adot-on-ec2-using-helm","title":"Deploy ADOT on EC2 using <code>helm</code>","text":"Linux Windows <pre><code>helm repo add container-insights https://marcus16-kang.github.io/aws-container-insights-chart/\nhelm install adot-ec2 container-insights/adot-ec2 \\\n--namespace amazon-cloudwatch \\\n--set serviceAccount.create=false\n</code></pre> <pre><code>helm repo add container-insights https://marcus16-kang.github.io/aws-container-insights-chart/\nhelm install adot-ec2 container-insights/adot-ec2 `\n--namespace amazon-cloudwatch `\n--set serviceAccount.create=false\n</code></pre> <p>Note</p> <p>If you want to use tolerations, using this parameter.</p>  Linux Windows <pre><code>--set tolerations[0].key=key1 \\\n--set tolerations[0].value=value1 \\\n--set tolerations[0].operator=Equal \\\n--set tolerations[0].effect=NoSchedule\n</code></pre> <pre><code>--set tolerations[0].key=key1 `\n--set tolerations[0].value=value1 `\n--set tolerations[0].operator=Equal `\n--set tolerations[0].effect=NoSchedule\n</code></pre>"},{"location":"Containers/EKS/10-enable-container-insights-on-eks/#deploy-adot-on-ec2-using-kubectl","title":"Deploy ADOT on EC2 using <code>kubectl</code>","text":"<pre><code>kubectl apply -f https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/otel-container-insights-infra.yaml\n\nkubectl get pods -l name=aws-otel-eks-ci -n amazon-cloudwatch\n</code></pre> otel-container-insights-infra.yaml <pre><code>kind: ClusterRole\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\nname: aoc-agent-role\nrules:\n- apiGroups: [\"\"]\nresources: [\"pods\", \"nodes\", \"endpoints\"]\nverbs: [\"list\", \"watch\", \"get\"]\n- apiGroups: [\"apps\"]\nresources: [\"replicasets\"]\nverbs: [\"list\", \"watch\", \"get\"]\n- apiGroups: [\"batch\"]\nresources: [\"jobs\"]\nverbs: [\"list\", \"watch\"]\n- apiGroups: [\"\"]\nresources: [\"nodes/proxy\"]\nverbs: [\"get\"]\n- apiGroups: [\"\"]\nresources: [\"nodes/stats\", \"configmaps\", \"events\"]\nverbs: [\"create\", \"get\"]\n- apiGroups: [\"\"]\nresources: [\"configmaps\"]\nverbs: [\"update\"]\n- apiGroups: [\"\"]\nresources: [\"configmaps\"]\nresourceNames: [\"otel-container-insight-clusterleader\"]\nverbs: [\"get\",\"update\", \"create\"]\n- apiGroups: [\"coordination.k8s.io\"]\nresources: [\"leases\"]\nverbs: [\"create\",\"get\", \"update\"]\n- apiGroups: [\"coordination.k8s.io\"]\nresources: [\"leases\"]\nresourceNames: [\"otel-container-insight-clusterleader\"]\nverbs: [\"get\",\"update\", \"create\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\nname: aoc-agent-role-binding\nsubjects:\n- kind: ServiceAccount\nname: aws-otel-sa\nnamespace: amazon-cloudwatch\nroleRef:\nkind: ClusterRole\nname: aoc-agent-role\napiGroup: rbac.authorization.k8s.io\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\nname: otel-agent-conf\nnamespace: amazon-cloudwatch\nlabels:\napp: opentelemetry\ncomponent: otel-agent-conf\ndata:\notel-agent-config: |\nextensions:\nhealth_check:\nreceivers:\nawscontainerinsightreceiver:\nprocessors:\nbatch/metrics:\ntimeout: 60s\nexporters:\nawsemf:\nnamespace: ContainerInsights\nlog_group_name: '/aws/containerinsights/{ClusterName}/performance'\nlog_stream_name: '{NodeName}'\nresource_to_telemetry_conversion:\nenabled: true\ndimension_rollup_option: NoDimensionRollup\nparse_json_encoded_attr_values: [Sources, kubernetes]\nmetric_declarations:\n# node metrics\n- dimensions: [[NodeName, InstanceId, ClusterName]]\nmetric_name_selectors:\n- node_cpu_utilization\n- node_memory_utilization\n- node_network_total_bytes\n- node_cpu_reserved_capacity\n- node_memory_reserved_capacity\n- node_number_of_running_pods\n- node_number_of_running_containers\n- dimensions: [[ClusterName]]\nmetric_name_selectors:\n- node_cpu_utilization\n- node_memory_utilization\n- node_network_total_bytes\n- node_cpu_reserved_capacity\n- node_memory_reserved_capacity\n- node_number_of_running_pods\n- node_number_of_running_containers\n- node_cpu_usage_total\n- node_cpu_limit\n- node_memory_working_set\n- node_memory_limit\n# pod metrics\n- dimensions: [[PodName, Namespace, ClusterName], [Service, Namespace, ClusterName], [Namespace, ClusterName], [ClusterName]]\nmetric_name_selectors:\n- pod_cpu_utilization\n- pod_memory_utilization\n- pod_network_rx_bytes\n- pod_network_tx_bytes\n- pod_cpu_utilization_over_pod_limit\n- pod_memory_utilization_over_pod_limit\n- dimensions: [[PodName, Namespace, ClusterName], [ClusterName]]\nmetric_name_selectors:\n- pod_cpu_reserved_capacity\n- pod_memory_reserved_capacity\n- dimensions: [[PodName, Namespace, ClusterName]]\nmetric_name_selectors:\n- pod_number_of_container_restarts\n# cluster metrics\n- dimensions: [[ClusterName]]\nmetric_name_selectors:\n- cluster_node_count\n- cluster_failed_node_count\n# service metrics\n- dimensions: [[Service, Namespace, ClusterName], [ClusterName]]\nmetric_name_selectors:\n- service_number_of_running_pods\n# node fs metrics\n- dimensions: [[NodeName, InstanceId, ClusterName], [ClusterName]]\nmetric_name_selectors:\n- node_filesystem_utilization\n# namespace metrics\n- dimensions: [[Namespace, ClusterName], [ClusterName]]\nmetric_name_selectors:\n- namespace_number_of_running_pods\nservice:\npipelines:\nmetrics:\nreceivers: [awscontainerinsightreceiver]\nprocessors: [batch/metrics]\nexporters: [awsemf]\nextensions: [health_check]\n---\n# create Daemonset\napiVersion: apps/v1\nkind: DaemonSet\nmetadata:\nname: aws-otel-eks-ci\nnamespace: amazon-cloudwatch\nspec:\nselector:\nmatchLabels:\nname: aws-otel-eks-ci\ntemplate:\nmetadata:\nlabels:\nname: aws-otel-eks-ci\nspec:\ncontainers:\n- name: aws-otel-collector\nimage: public.ecr.aws/aws-observability/aws-otel-collector:latest\nenv:\n- name: K8S_NODE_NAME\nvalueFrom:\nfieldRef:\nfieldPath: spec.nodeName\n- name: HOST_IP\nvalueFrom:\nfieldRef:\nfieldPath: status.hostIP\n- name: HOST_NAME\nvalueFrom:\nfieldRef:\nfieldPath: spec.nodeName\n- name: K8S_NAMESPACE\nvalueFrom:\nfieldRef:\nfieldPath: metadata.namespace\nimagePullPolicy: Always\ncommand:\n- \"/awscollector\"\n- \"--config=/conf/otel-agent-config.yaml\"\nvolumeMounts:\n- name: rootfs\nmountPath: /rootfs\nreadOnly: true\n- name: dockersock\nmountPath: /var/run/docker.sock\nreadOnly: true\n- name: containerdsock\nmountPath: /run/containerd/containerd.sock\n- name: varlibdocker\nmountPath: /var/lib/docker\nreadOnly: true\n- name: sys\nmountPath: /sys\nreadOnly: true\n- name: devdisk\nmountPath: /dev/disk\nreadOnly: true\n- name: otel-agent-config-vol\nmountPath: /conf\nresources:\nlimits:\ncpu:  200m\nmemory: 200Mi\nrequests:\ncpu: 200m\nmemory: 200Mi\nvolumes:\n- configMap:\nname: otel-agent-conf\nitems:\n- key: otel-agent-config\npath: otel-agent-config.yaml\nname: otel-agent-config-vol\n- name: rootfs\nhostPath:\npath: /\n- name: dockersock\nhostPath:\npath: /var/run/docker.sock\n- name: varlibdocker\nhostPath:\npath: /var/lib/docker\n- name: containerdsock\nhostPath:\npath: /run/containerd/containerd.sock\n- name: sys\nhostPath:\npath: /sys\n- name: devdisk\nhostPath:\npath: /dev/disk/\nserviceAccountName: aws-otel-sa\n</code></pre> <p>AWS Knowledge Center</p>"},{"location":"Containers/EKS/10-enable-container-insights-on-eks/#using-adot-on-fargate","title":"Using ADOT on Fargate","text":"<p>If you want to use Container Insights from Fargate pod, you can only use ADOT.</p>"},{"location":"Containers/EKS/10-enable-container-insights-on-eks/#create-a-service-account-for-adot-on-fargate","title":"Create a service account for ADOT on Fargate","text":"Linux Windows <pre><code>CLUSTER_NAME=\"&lt;cluster name&gt;\"\nROLE_NAME=\"&lt;role name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region code&gt;\"\neksctl create iamserviceaccount \\\n--cluster=$CLUSTER_NAME \\\n--name=adot-collector \\\n--namespace=amazon-cloudwatch \\\n--role-name=$ROLE_NAME \\\n--attach-policy-arn=arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy \\\n--tags project=$PROJECT_NAME \\\n--region=$REGION \\\n--approve\n</code></pre> <pre><code>$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$ROLE_NAME=\"&lt;role name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region code&gt;\"\neksctl create iamserviceaccount `\n--cluster=$CLUSTER_NAME `\n--name=adot-collector `\n--namespace=amazon-cloudwatch `\n--role-name=$ROLE_NAME `\n--attach-policy-arn=arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy `\n--tags project=$PROJECT_NAME `\n--region=$REGION `\n--approve\n</code></pre> <p>AWS Knowledge Center</p>"},{"location":"Containers/EKS/10-enable-container-insights-on-eks/#deploy-adot-on-fargate-using-helm","title":"Deploy ADOT on Fargate using <code>helm</code>","text":"Linux Windows <pre><code>CLUSTER_NAME=\"&lt;cluster name&gt;\"\nREGION=\"&lt;region code&gt;\"\nhelm repo add container-insights https://marcus16-kang.github.io/aws-container-insights-chart/\nhelm install adot-fargate container-insights/adot-fargate \\\n--namespace amazon-cloudwatch \\\n--set clusterName=$CLUSTER_NAME \\\n--set region=$REGION \\\n--set serviceAccount.create=false\n</code></pre> <pre><code>$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$REGION=\"&lt;region code&gt;\"\nhelm repo add container-insights https://marcus16-kang.github.io/aws-container-insights-chart/\nhelm install adot-fargate container-insights/adot-fargate `\n--namespace amazon-cloudwatch `\n--set clusterName=$CLUSTER_NAME `\n--set region=$REGION `\n--set serviceAccount.create=false\n</code></pre>"},{"location":"Containers/EKS/10-enable-container-insights-on-eks/#deploy-adot-on-fargate-using-kubectl","title":"Deploy ADOT on Fargate using <code>kubectl</code>","text":"Linux Windows <pre><code>CLUSTER_NAME=\"&lt;cluster name&gt;\"\nREGION=\"&lt;region code&gt;\"\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/otel-fargate-container-insights.yaml\nsed -i \"s|YOUR-EKS-CLUSTER-NAME|$CLUSTER_NAME|g\" otel-fargate-container-insights.yaml\nsed -i \"s|us-east-1|$REGION|g\" otel-fargate-container-insights.yaml\n\nkubectl apply -f otel-fargate-container-insights.yaml\n</code></pre> <pre><code>$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$REGION=\"&lt;region code&gt;\"\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/otel-fargate-container-insights.yaml\n$content = Get-Content otel-fargate-container-insights.yaml\n$content = $content -replace \"YOUR-EKS-CLUSTER-NAME\", $CLUSTER_NAME\n$content = $content -replace \"us-east-1\", $REGION\n$content | Set-Content otel-fargate-container-insights.yaml\nkubectl apply -f otel-fargate-container-insights.yaml\n</code></pre> otel-fargate-container-insights.yaml <pre><code>---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\nname: adotcol-admin-role\nrules:\n- apiGroups: [\"\"]\nresources:\n- nodes\n- nodes/proxy\n- nodes/metrics\n- services\n- endpoints\n- pods\n- pods/proxy\nverbs: [\"get\", \"list\", \"watch\"]\n- nonResourceURLs: [ \"/metrics/cadvisor\"]\nverbs: [\"get\", \"list\", \"watch\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\nname: adotcol-admin-role-binding\nsubjects:\n- kind: ServiceAccount\nname: adot-collector\nnamespace: amazon-cloudwatch\nroleRef:\nkind: ClusterRole\nname: adotcol-admin-role\napiGroup: rbac.authorization.k8s.io\n# collector configuration section\n# update `ClusterName=YOUR-EKS-CLUSTER-NAME` in the env variable OTEL_RESOURCE_ATTRIBUTES\n# update `region=us-east-1` in the emfexporter if you are not using us-east-1 region\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\nname: adot-collector-config\nnamespace: amazon-cloudwatch\nlabels:\napp: aws-adot\ncomponent: adot-collector-config\ndata:\nadot-collector-config: |\nreceivers:\nprometheus:\nconfig:\nglobal:\nscrape_interval: 1m\nscrape_timeout: 40s\nscrape_configs:\n- job_name: 'kubelets-cadvisor-metrics'\nsample_limit: 10000\nscheme: https\nkubernetes_sd_configs:\n- role: node\ntls_config:\nca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\nbearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\nrelabel_configs:\n- action: labelmap\nregex: __meta_kubernetes_node_label_(.+)\n# Only for Kubernetes ^1.7.3.\n# See: https://github.com/prometheus/prometheus/issues/2916\n- target_label: __address__\n# Changes the address to Kube API server's default address and port\nreplacement: kubernetes.default.svc:443\n- source_labels: [__meta_kubernetes_node_name]\nregex: (.+)\ntarget_label: __metrics_path__\n# Changes the default metrics path to kubelet's proxy cadvdisor metrics endpoint\nreplacement: /api/v1/nodes/$${1}/proxy/metrics/cadvisor\nmetric_relabel_configs:\n# extract readable container/pod name from id field\n- action: replace\nsource_labels: [id]\nregex: '^/machine\\.slice/machine-rkt\\\\x2d([^\\\\]+)\\\\.+/([^/]+)\\.service$'\ntarget_label: rkt_container_name\nreplacement: '$${2}-$${1}'\n- action: replace\nsource_labels: [id]\nregex: '^/system\\.slice/(.+)\\.service$'\ntarget_label: systemd_service_name\nreplacement: '$${1}'\nprocessors:\n# rename labels which apply to all metrics and are used in metricstransform/rename processor\nmetricstransform/label_1:\ntransforms:\n- include: .*\nmatch_type: regexp\naction: update\noperations:\n- action: update_label\nlabel: name\nnew_label: container_id\n- action: update_label\nlabel: kubernetes_io_hostname\nnew_label: NodeName\n- action: update_label\nlabel: eks_amazonaws_com_compute_type\nnew_label: LaunchType\n# rename container and pod metrics which we care about.\n# container metrics are renamed to `new_container_*` to differentiate them with unused container metrics\nmetricstransform/rename:\ntransforms:\n- include: container_spec_cpu_quota\nnew_name: new_container_cpu_limit_raw\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"container\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n- include: container_spec_cpu_shares\nnew_name: new_container_cpu_request\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"container\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n- include: container_cpu_usage_seconds_total\nnew_name: new_container_cpu_usage_seconds_total\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"container\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n- include: container_spec_memory_limit_bytes\nnew_name: new_container_memory_limit\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"container\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n- include: container_memory_cache\nnew_name: new_container_memory_cache\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"container\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n- include: container_memory_max_usage_bytes\nnew_name: new_container_memory_max_usage\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"container\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n- include: container_memory_usage_bytes\nnew_name: new_container_memory_usage\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"container\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n- include: container_memory_working_set_bytes\nnew_name: new_container_memory_working_set\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"container\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n- include: container_memory_rss\nnew_name: new_container_memory_rss\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"container\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n- include: container_memory_swap\nnew_name: new_container_memory_swap\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"container\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n- include: container_memory_failcnt\nnew_name: new_container_memory_failcnt\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"container\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n- include: container_memory_failures_total\nnew_name: new_container_memory_hierarchical_pgfault\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"container\": \"\\\\S\", \"LaunchType\": \"fargate\", \"failure_type\": \"pgfault\", \"scope\": \"hierarchy\"}\n- include: container_memory_failures_total\nnew_name: new_container_memory_hierarchical_pgmajfault\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"container\": \"\\\\S\", \"LaunchType\": \"fargate\", \"failure_type\": \"pgmajfault\", \"scope\": \"hierarchy\"}\n- include: container_memory_failures_total\nnew_name: new_container_memory_pgfault\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"container\": \"\\\\S\", \"LaunchType\": \"fargate\", \"failure_type\": \"pgfault\", \"scope\": \"container\"}\n- include: container_memory_failures_total\nnew_name: new_container_memory_pgmajfault\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"container\": \"\\\\S\", \"LaunchType\": \"fargate\", \"failure_type\": \"pgmajfault\", \"scope\": \"container\"}\n- include: container_fs_limit_bytes\nnew_name: new_container_filesystem_capacity\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"container\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n- include: container_fs_usage_bytes\nnew_name: new_container_filesystem_usage\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"container\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n# POD LEVEL METRICS\n- include: container_spec_cpu_quota\nnew_name: pod_cpu_limit_raw\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"image\": \"^$\", \"container\": \"^$\", \"pod\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n- include: container_spec_cpu_shares\nnew_name: pod_cpu_request\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"image\": \"^$\", \"container\": \"^$\", \"pod\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n- include: container_cpu_usage_seconds_total\nnew_name: pod_cpu_usage_seconds_total\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"image\": \"^$\", \"container\": \"^$\", \"pod\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n- include: container_spec_memory_limit_bytes\nnew_name: pod_memory_limit\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"image\": \"^$\", \"container\": \"^$\", \"pod\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n- include: container_memory_cache\nnew_name: pod_memory_cache\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"image\": \"^$\", \"container\": \"^$\", \"pod\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n- include: container_memory_max_usage_bytes\nnew_name: pod_memory_max_usage\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"image\": \"^$\", \"container\": \"^$\", \"pod\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n- include: container_memory_usage_bytes\nnew_name: pod_memory_usage\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"image\": \"^$\", \"container\": \"^$\", \"pod\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n- include: container_memory_working_set_bytes\nnew_name: pod_memory_working_set\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"image\": \"^$\", \"container\": \"^$\", \"pod\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n- include: container_memory_rss\nnew_name: pod_memory_rss\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"image\": \"^$\", \"container\": \"^$\", \"pod\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n- include: container_memory_swap\nnew_name: pod_memory_swap\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"image\": \"^$\", \"container\": \"^$\", \"pod\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n- include: container_memory_failcnt\nnew_name: pod_memory_failcnt\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"image\": \"^$\", \"container\": \"^$\", \"pod\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n- include: container_memory_failures_total\nnew_name: pod_memory_hierarchical_pgfault\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"image\": \"^$\", \"container\": \"^$\", \"pod\": \"\\\\S\", \"LaunchType\": \"fargate\", \"failure_type\": \"pgfault\", \"scope\": \"hierarchy\"}\n- include: container_memory_failures_total\nnew_name: pod_memory_hierarchical_pgmajfault\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"image\": \"^$\", \"container\": \"^$\", \"pod\": \"\\\\S\", \"LaunchType\": \"fargate\", \"failure_type\": \"pgmajfault\", \"scope\": \"hierarchy\"}\n- include: container_memory_failures_total\nnew_name: pod_memory_pgfault\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"image\": \"^$\", \"container\": \"^$\", \"pod\": \"\\\\S\", \"LaunchType\": \"fargate\", \"failure_type\": \"pgfault\", \"scope\": \"container\"}\n- include: container_memory_failures_total\nnew_name: pod_memory_pgmajfault\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"image\": \"^$\", \"container\": \"^$\", \"pod\": \"\\\\S\", \"LaunchType\": \"fargate\", \"failure_type\": \"pgmajfault\", \"scope\": \"container\"}\n- include: container_network_receive_bytes_total\nnew_name: pod_network_rx_bytes\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"pod\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n- include: container_network_receive_packets_dropped_total\nnew_name: pod_network_rx_dropped\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"pod\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n- include: container_network_receive_errors_total\nnew_name: pod_network_rx_errors\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"pod\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n- include: container_network_receive_packets_total\nnew_name: pod_network_rx_packets\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"pod\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n- include: container_network_transmit_bytes_total\nnew_name: pod_network_tx_bytes\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"pod\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n- include: container_network_transmit_packets_dropped_total\nnew_name: pod_network_tx_dropped\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"pod\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n- include: container_network_transmit_errors_total\nnew_name: pod_network_tx_errors\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"pod\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n- include: container_network_transmit_packets_total\nnew_name: pod_network_tx_packets\naction: insert\nmatch_type: regexp\nexperimental_match_labels: {\"pod\": \"\\\\S\", \"LaunchType\": \"fargate\"}\n# filter out only renamed metrics which we care about\nfilter:\nmetrics:\ninclude:\nmatch_type: regexp\nmetric_names:\n- new_container_.*\n- pod_.*\n# convert cumulative sum datapoints to delta\ncumulativetodelta:\ninclude:\nmetrics:\n- new_container_cpu_usage_seconds_total\n- pod_cpu_usage_seconds_total\n- pod_memory_pgfault\n- pod_memory_pgmajfault\n- pod_memory_hierarchical_pgfault\n- pod_memory_hierarchical_pgmajfault\n- pod_network_rx_bytes\n- pod_network_rx_dropped\n- pod_network_rx_errors\n- pod_network_rx_packets\n- pod_network_tx_bytes\n- pod_network_tx_dropped\n- pod_network_tx_errors\n- pod_network_tx_packets\n- new_container_memory_pgfault\n- new_container_memory_pgmajfault\n- new_container_memory_hierarchical_pgfault\n- new_container_memory_hierarchical_pgmajfault\nmatch_type: strict\n# convert delta to rate\ndeltatorate:\nmetrics:\n- new_container_cpu_usage_seconds_total\n- pod_cpu_usage_seconds_total\n- pod_memory_pgfault\n- pod_memory_pgmajfault\n- pod_memory_hierarchical_pgfault\n- pod_memory_hierarchical_pgmajfault\n- pod_network_rx_bytes\n- pod_network_rx_dropped\n- pod_network_rx_errors\n- pod_network_rx_packets\n- pod_network_tx_bytes\n- pod_network_tx_dropped\n- pod_network_tx_errors\n- pod_network_tx_packets\n- new_container_memory_pgfault\n- new_container_memory_pgmajfault\n- new_container_memory_hierarchical_pgfault\n- new_container_memory_hierarchical_pgmajfault\nexperimental_metricsgeneration/1:\nrules:\n- name: pod_network_total_bytes\nunit: Bytes/Second\ntype: calculate\nmetric1: pod_network_rx_bytes\nmetric2: pod_network_tx_bytes\noperation: add\n- name: pod_memory_utilization_over_pod_limit\nunit: Percent\ntype: calculate\nmetric1: pod_memory_working_set\nmetric2: pod_memory_limit\noperation: percent\n- name: pod_cpu_usage_total\nunit: Millicore\ntype: scale\nmetric1: pod_cpu_usage_seconds_total\noperation: multiply\n# core to millicore: multiply by 1000\n# millicore seconds to millicore nanoseconds: multiply by 10^9\nscale_by: 1000\n- name: pod_cpu_limit\nunit: Millicore\ntype: scale\nmetric1: pod_cpu_limit_raw\noperation: divide\nscale_by: 100\nexperimental_metricsgeneration/2:\nrules:\n- name: pod_cpu_utilization_over_pod_limit\ntype: calculate\nunit: Percent\nmetric1: pod_cpu_usage_total\nmetric2: pod_cpu_limit\noperation: percent\n# add `Type` and rename metrics and labels\nmetricstransform/label_2:\ntransforms:\n- include: pod_.*\nmatch_type: regexp\naction: update\noperations:\n- action: add_label\nnew_label: Type\nnew_value: \"Pod\"\n- include: new_container_.*\nmatch_type: regexp\naction: update\noperations:\n- action: add_label\nnew_label: Type\nnew_value: Container\n- include: .*\nmatch_type: regexp\naction: update\noperations:\n- action: update_label\nlabel: namespace\nnew_label: Namespace\n- action: update_label\nlabel: pod\nnew_label: PodName\n- include: ^new_container_(.*)$$\nmatch_type: regexp\naction: update\nnew_name: container_$$1\n# add cluster name from env variable and EKS metadata\nresourcedetection:\ndetectors: [env, eks]\nbatch:\ntimeout: 60s\n# only pod level metrics in metrics format, details in https://aws-otel.github.io/docs/getting-started/container-insights/eks-fargate\nexporters:\nawsemf:\nlog_group_name: '/aws/containerinsights/{ClusterName}/performance'\nlog_stream_name: '{PodName}'\nnamespace: 'ContainerInsights'\nregion: us-east-1\nresource_to_telemetry_conversion:\nenabled: true\neks_fargate_container_insights_enabled: true\nparse_json_encoded_attr_values: [\"kubernetes\"]\ndimension_rollup_option: NoDimensionRollup\nmetric_declarations:\n- dimensions: [ [ClusterName, LaunchType], [ClusterName, Namespace, LaunchType], [ClusterName, Namespace, PodName, LaunchType]]\nmetric_name_selectors:\n- pod_cpu_utilization_over_pod_limit\n- pod_cpu_usage_total\n- pod_cpu_limit\n- pod_memory_utilization_over_pod_limit\n- pod_memory_working_set\n- pod_memory_limit\n- pod_network_rx_bytes\n- pod_network_tx_bytes\nextensions:\nhealth_check:\nservice:\npipelines:\nmetrics:\nreceivers: [prometheus]\nprocessors: [metricstransform/label_1, resourcedetection, metricstransform/rename, filter, cumulativetodelta, deltatorate, experimental_metricsgeneration/1, experimental_metricsgeneration/2, metricstransform/label_2, batch]\nexporters: [awsemf]\nextensions: [health_check]\n# configure the service and the collector as a StatefulSet\n---\napiVersion: v1\nkind: Service\nmetadata:\nname: adot-collector-service\nnamespace: amazon-cloudwatch\nlabels:\napp: aws-adot\ncomponent: adot-collector\nspec:\nports:\n- name: metrics # default endpoint for querying metrics.\nport: 8888\nselector:\ncomponent: adot-collector\ntype: ClusterIP\n---\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\nname: adot-collector\nnamespace: amazon-cloudwatch\nlabels:\napp: aws-adot\ncomponent: adot-collector\nspec:\nselector:\nmatchLabels:\napp: aws-adot\ncomponent: adot-collector\nserviceName: adot-collector-service\ntemplate:\nmetadata:\nlabels:\napp: aws-adot\ncomponent: adot-collector\nspec:\nserviceAccountName: adot-collector\nsecurityContext:\nfsGroup: 65534\ncontainers:\n- image: amazon/aws-otel-collector:latest\nname: adot-collector\nimagePullPolicy: Always\ncommand:\n- \"/awscollector\"\n- \"--config=/conf/adot-collector-config.yaml\"\nenv:\n- name: OTEL_RESOURCE_ATTRIBUTES\nvalue: \"ClusterName=YOUR-EKS-CLUSTER-NAME\"\nresources:\nlimits:\ncpu: 2\nmemory: 2Gi\nrequests:\ncpu: 200m\nmemory: 400Mi\nvolumeMounts:\n- name: adot-collector-config-volume\nmountPath: /conf\nvolumes:\n- configMap:\nname: adot-collector-config\nitems:\n- key: adot-collector-config\npath: adot-collector-config.yaml\nname: adot-collector-config-volume\n---\n</code></pre> <p>AWS Knowledge Center</p>"},{"location":"Containers/EKS/10-enable-container-insights-on-eks/#get-metrics","title":"Get metrics","text":""},{"location":"Containers/EKS/10-enable-container-insights-on-eks/#pods-cpu-utilization-from-fargate","title":"Pod's CPU Utilization from Fargate","text":"<pre><code>{\n\"metrics\": [\n[ { \"expression\": \"SEARCH('{ContainerInsights,PodName,ClusterName,Namespace,LaunchType} MetricName=\\\"pod_cpu_usage_total\\\" ClusterName=\\\"CLUSTER_NAME\\\" Namespace=\\\"NAMESPACE_NAME\\\" LaunchType=\\\"fargate\\\"', 'Average', 60)\", \"label\": \"\", \"id\": \"e1\" } ]\n],\n\"timezone\": \"UTC\",\n\"region\": \"us-east-1\",\n\"view\": \"timeSeries\",\n\"stacked\": false,\n\"stat\": \"Average\",\n\"period\": 60,\n\"yAxis\": {\n\"left\": {\n\"label\": \"Percent\",\n\"showUnits\": false\n},\n\"right\": {\n\"showUnits\": false\n}\n},\n\"title\": \"pod_cpu_usage_total\"\n}\n</code></pre>"},{"location":"Containers/EKS/10-enable-container-insights-on-eks/#pods-memory-utilization-from-fargate","title":"Pod's memory Utilization from Fargate","text":"<pre><code>  {\n\"metrics\": [\n[ { \"expression\": \"SEARCH('{ContainerInsights,PodName,ClusterName,Namespace,LaunchType} MetricName=\\\"pod_cpu_usage_total\\\" ClusterName=\\\"CLUSTER_NAME\\\" Namespace=\\\"NAMESPACE_NAME\\\" LaunchType=\\\"fargate\\\"', 'Average', 60)\", \"label\": \"\", \"id\": \"e1\" } ]\n],\n\"timezone\": \"UTC\",\n\"region\": \"us-east-1\",\n\"view\": \"timeSeries\",\n\"stacked\": false,\n\"stat\": \"Average\",\n\"period\": 60,\n\"yAxis\": {\n\"left\": {\n\"label\": \"Percent\",\n\"showUnits\": false\n},\n\"right\": {\n\"showUnits\": false\n}\n},\n\"title\": \"pod_cpu_usage_total\"\n}\n</code></pre>"},{"location":"Containers/EKS/11-pod-security-group/","title":"Pod Security Group","text":""},{"location":"Containers/EKS/11-pod-security-group/#add-policy-to-cluster-iam-role","title":"Add policy to cluster IAM role","text":"Linux Windows <pre><code>ROLE_NAME=\"&lt;cluster role name&gt;\"\nREGION=\"&lt;region code&gt;\"\naws iam attach-role-policy \\\n--policy-arn arn:aws:iam::aws:policy/AmazonEKSVPCResourceController \\\n--role-name $ROLE_NAME \\\n--region $REGION\n</code></pre> <pre><code>$ROLE_NAME=\"&lt;cluster role name&gt;\"\n$REGION=\"&lt;region code&gt;\"\naws iam attach-role-policy `\n--policy-arn arn:aws:iam::aws:policy/AmazonEKSVPCResourceController `\n--role-name $ROLE_NAME `\n--region $REGION\n</code></pre> <p>AWS Documentation</p>"},{"location":"Containers/EKS/11-pod-security-group/#update-aws-node-daemonset-environment-variable","title":"Update <code>aws-node</code> daemonset environment variable","text":"<p>Warning</p> <p>Please use this command before starting node groups or fargates.</p>  Linux Windows <pre><code>kubectl set env daemonset aws-node -n kube-system ENABLE_POD_ENI=true\nkubectl patch daemonset aws-node \\\n-n kube-system \\\n-p '{\"spec\": {\"template\": {\"spec\": {\"initContainers\": [{\"env\":[{\"name\":\"DISABLE_TCP_EARLY_DEMUX\",\"value\":\"true\"}],\"name\":\"aws-vpc-cni-init\"}]}}}}'\n</code></pre> <pre><code>kubectl set env daemonset aws-node -n kube-system ENABLE_POD_ENI=true\nkubectl patch daemonset aws-node `\n-n kube-system `\n-p '{\"spec\": {\"template\": {\"spec\": {\"initContainers\": [{\"env\":[{\"name\":\"DISABLE_TCP_EARLY_DEMUX\",\"value\":\"true\"}],\"name\":\"aws-vpc-cni-init\"}]}}}}'\n</code></pre> <p>AWS Documentation</p>"},{"location":"Containers/EKS/11-pod-security-group/#create-securitygrouppolicy","title":"Create <code>SecurityGroupPolicy</code>","text":"security-group-policy.yaml<pre><code>apiVersion: vpcresources.k8s.aws/v1beta1\nkind: SecurityGroupPolicy\nmetadata:\nname: &lt;security group policy name&gt;\nnamespace: &lt;namespace&gt;\nspec:\npodSelector: matchLabels:\napp: nginx # labels\nsecurityGroups:\ngroupIds:\n- sg-abc123   # security groups id\n</code></pre> <pre><code>kubectl apply -f security-group-policy.yaml\n</code></pre>"},{"location":"Containers/EKS/12-using-efs/","title":"Using EFS","text":""},{"location":"Containers/EKS/12-using-efs/#create-service-account-using-iam-role","title":"Create service account using IAM role","text":"Linux Windows <pre><code>CLUSTSER_NAME=\"&lt;cluster name&gt;\"\nPOLICY_NAME=\"&lt;policy name&gt;\"\nROLE_NAME=\"&lt;role name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region code&gt;\"\ncurl -Lo efs-csi-driver-policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-efs-csi-driver/master/docs/iam-policy-example.json\n\nPOLICY_ARN=$(aws iam create-policy \\\n--policy-name $POLICY_NAME \\\n--policy-document file://efs-csi-driver-policy.json \\\n# --tags Key=project,Value=$PROJECT_NAME \\  # AWS CLI v2\n| jq -r '.Policy.Arn')\neksctl create iamserviceaccount \\\n--cluster $CLUSTER_NAME \\\n--namespace=kube-system \\\n--name=efs-csi-controller-sa \\\n--attach-policy-arn $POLICY_ARN \\\n--role-name $ROLE_NAME \\\n--tags project=$PROJECT_NAME \\\n--region $REGION \\\n--override-existing-serviceaccounts \\\n--approve\n</code></pre> <pre><code>$CLUSTSER_NAME=\"&lt;cluster name&gt;\"\n$POLICY_NAME=\"&lt;policy name&gt;\"\n$ROLE_NAME=\"&lt;role name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region code&gt;\"\ncurl.exe -Lo efs-csi-driver-policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-efs-csi-driver/master/docs/iam-policy-example.json\n$POLICY_ARN = aws iam create-policy `\n--policy-name $POLICY_NAME `\n--policy-document file://efs-csi-driver-policy.json `\n--tags Key=project,Value=$PROJECT_NAME `\n--query 'Policy.Arn' `\n--output text\neksctl create iamserviceaccount `\n--cluster $CLUSTER_NAME `\n--namespace=kube-system `\n--name=efs-csi-controller-sa `\n--attach-policy-arn $POLICY_ARN `\n--role-name $ROLE_NAME `\n--tags project=$PROJECT_NAME `\n--region $REGION `\n--override-existing-serviceaccounts `\n--approve\n</code></pre> efs-csi-driver-policy.json <pre><code>{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Action\": [\n\"elasticfilesystem:DescribeAccessPoints\",\n\"elasticfilesystem:DescribeFileSystems\",\n\"elasticfilesystem:DescribeMountTargets\",\n\"ec2:DescribeAvailabilityZones\"\n],\n\"Resource\": \"*\"\n},\n{\n\"Effect\": \"Allow\",\n\"Action\": [\n\"elasticfilesystem:CreateAccessPoint\"\n],\n\"Resource\": \"*\",\n\"Condition\": {\n\"StringLike\": {\n\"aws:RequestTag/efs.csi.aws.com/cluster\": \"true\"\n}\n}\n},\n{\n\"Effect\": \"Allow\",\n\"Action\": \"elasticfilesystem:DeleteAccessPoint\",\n\"Resource\": \"*\",\n\"Condition\": {\n\"StringEquals\": {\n\"aws:ResourceTag/efs.csi.aws.com/cluster\": \"true\"\n}\n}\n}\n]\n}\n</code></pre> <p>AWS Documentation</p>"},{"location":"Containers/EKS/12-using-efs/#install-efs-driver","title":"Install EFS Driver","text":"Linux Windows <pre><code>REGION=\"&lt;region code&gt;\"\nhelm repo add aws-efs-csi-driver https://kubernetes-sigs.github.io/aws-efs-csi-driver/\nhelm repo update\n\nhelm upgrade -i aws-efs-csi-driver aws-efs-csi-driver/aws-efs-csi-driver \\\n--namespace kube-system \\\n--set image.repository=602401143452.dkr.ecr.$REGION.amazonaws.com/eks/aws-efs-csi-driver \\\n--set controller.serviceAccount.create=false \\\n--set controller.serviceAccount.name=efs-csi-controller-sa\n</code></pre> <pre><code>$REGION=\"&lt;region code&gt;\"\nhelm repo add aws-efs-csi-driver https://kubernetes-sigs.github.io/aws-efs-csi-driver/\nhelm repo update\nhelm upgrade -i aws-efs-csi-driver aws-efs-csi-driver/aws-efs-csi-driver `\n--namespace kube-system `\n--set image.repository=602401143452.dkr.ecr.$REGION.amazonaws.com/eks/aws-efs-csi-driver `\n--set controller.serviceAccount.create=false `\n--set controller.serviceAccount.name=efs-csi-controller-sa\n</code></pre> <p>Note</p> <p>You should check registry account id from here.</p> <p>AWS Documentation</p>"},{"location":"Containers/EKS/12-using-efs/#use-efs-file-system","title":"Use EFS File System","text":""},{"location":"Containers/EKS/12-using-efs/#static-provisioning","title":"Static Provisioning","text":"<p>Note</p> <p>You can see examples in HERE.</p> persistent-volume.yaml<pre><code>apiVersion: v1\nkind: PersistentVolume\nmetadata:\nname: efs-pv\nspec:\ncapacity:\nstorage: 5Gi\nvolumeMode: Filesystem\naccessModes:\n- ReadWriteMany\nstorageClassName: \"\"\npersistentVolumeReclaimPolicy: Retain   # `Retain` or `Delete`\ncsi:\ndriver: efs.csi.aws.com\nvolumeHandle: fs-XXXXXXXXXXXXXXXXX\n</code></pre> persistent-volume-claim.yaml<pre><code>apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\nname: efs-claim\nnamespace: default\nspec:\naccessModes:\n- ReadWriteMany\nstorageClassName: \"\"\nresources:\nrequests:\nstorage: 5Gi\n</code></pre> pod.yaml<pre><code>apiVersion: apps/v1\nkind: Pod\nmetadata:\nname: nginx\nnamespace: default\nlabels:\napp: nginx\nspec:\ncontainers:\n- name: nginx\nimage: public.ecr.aws/docker/library/nginx:1.24.0-alpine3.17-slim\nvolumeMounts:\n- name: persistent-volume\nmountPath: /usr/share/nginx/html\nvolumes:\n- name: persistent-volume\npersistentVolumeClaim:\nclaimName: efs-claim\n</code></pre>"},{"location":"Containers/EKS/12-using-efs/#dynamic-provisioning","title":"Dynamic Provisioning","text":"<p>Note</p> <p>You can see examples in HERE.</p> storage-class.yaml<pre><code>kind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\nname: efs-sc\nprovisioner: efs.csi.aws.com\nparameters:\nprovisioningMode: efs-ap\nfileSystemId: fs-XXXXXXXXXXXXXXXXX\ndirectoryPerms: \"700\"\nuid: \"101\"\ngid: \"101\"\nbasePath: \"/nginx\" # optional\n</code></pre> persistent-volume-claim.yaml<pre><code>apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\nname: efs-claim\nnamespace: default\nspec:\naccessModes:\n- ReadWriteMany\nstorageClassName: efs\nresources:\nrequests:\nstorage: 5Gi\n</code></pre> pod.yaml<pre><code>apiVersion: apps/v1\nkind: Pod\nmetadata:\nname: nginx\nnamespace: default\nlabels:\napp: nginx\nspec:\ncontainers:\n- name: nginx\nimage: public.ecr.aws/docker/library/nginx:1.24.0-alpine3.17-slim\nvolumeMounts:\n- name: persistent-volume\nmountPath: /usr/share/nginx/html\nvolumes:\n- name: persistent-volume\npersistentVolumeClaim:\nclaimName: efs-claim\n</code></pre>"},{"location":"Containers/EKS/13-enable-logging/","title":"Enable Logging with Fluent Bit","text":""},{"location":"Containers/EKS/13-enable-logging/#ec2","title":"EC2","text":""},{"location":"Containers/EKS/13-enable-logging/#create-a-service-account-for-fluent-bit","title":"Create a service account for Fluent Bit","text":"Linux Windows <pre><code>CLUSTER_NAME=\"&lt;cluster name&gt;\"\nROLE_NAME=\"&lt;role_name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region code&gt;\"\neksctl create iamserviceaccount \\\n--cluster $CLUSTER_NAME \\\n--name fluent-bit \\\n--namespace amazon-cloudwatch \\\n--attach-policy-arn arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy \\\n--role-name $ROLE_NAME \\\n--tags project=$PROJECT_NAME \\\n--region $REGION \\\n--override-existing-serviceaccounts \\\n--approve\n</code></pre> <pre><code>$CLUSTER_NAME=\"&lt;cluster name&gt;\" \n$ROLE_NAME=\"&lt;role_name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region code&gt;\"\neksctl create iamserviceaccount `\n--cluster $CLUSTER_NAME `\n--name fluent-bit `\n--namespace amazon-cloudwatch `\n--attach-policy-arn arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy `\n--role-name $ROLE_NAME `\n--tags project=$PROJECT_NAME `\n--region $REGION `\n--override-existing-serviceaccounts `\n--approve\n</code></pre>"},{"location":"Containers/EKS/13-enable-logging/#deploy-fluent-bit-using-helm","title":"Deploy Fluent Bit using <code>helm</code>","text":"Linux Windows <pre><code>CLUSTER_NAME=\"&lt;cluster name&gt;\"\nREGION=\"&lt;region code&gt;\"\nFluentBitHttpPort='2020'\nFluentBitReadFromHead='Off'\n[[ ${FluentBitReadFromHead} = 'On' ]] &amp;&amp; FluentBitReadFromTail='Off'|| FluentBitReadFromTail='On'\n[[ -z ${FluentBitHttpPort} ]] &amp;&amp; FluentBitHttpServer='Off' || FluentBitHttpServer='On'\nhelm repo add container-insights https://marcus16-kang.github.io/aws-container-insights-chart/\nhelm install fluent-bit container-insights/fluent-bit \\\n--namespace amazon-cloudwatch \\\n--set clusterInfo.clusterName=$CLUSTER_NAME \\\n--set clusterInfo.region=$REGION \\\n--set clusterInfo.fluentBitHttpServer=$FluentBitHttpServer \\\n--set clusterInfo.fluentBitHttpPort=$FluentBitHttpPort \\\n--set clusterInfo.fluentBitReadHead=$REGFluentBitReadFromHeadION \\\n--set clusterInfo.fluentBitReadTail=$FluentBitReadFromTail \\\n--set serviceAccount.create=false\n</code></pre> <pre><code>$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$REGION=\"&lt;region code&gt;\"\n$FluentBitHttpPort='2020'\n$FluentBitReadFromHead='Off'\nif ($FluentBitReadFromHead -eq 'On') {\n$FluentBitReadFromTail = 'Off'\n} else {\n$FluentBitReadFromTail = 'On'\n}\nif (-not $FluentBitHttpPort) {\n$FluentBitHttpServer = 'Off'\n} else {\n$FluentBitHttpServer = 'On'\n}\nhelm repo add container-insights https://marcus16-kang.github.io/aws-container-insights-chart/\nhelm install fluent-bit container-insights/fluent-bit `\n--namespace amazon-cloudwatch `\n--set clusterInfo.clusterName=$CLUSTER_NAME `\n--set clusterInfo.region=$REGION `\n--set clusterInfo.fluentBitHttpServer=$FluentBitHttpServer `\n--set clusterInfo.fluentBitHttpPort=$FluentBitHttpPort `\n--set clusterInfo.fluentBitReadHead=$REGFluentBitReadFromHeadION `\n--set clusterInfo.fluentBitReadTail=$FluentBitReadFromTail `\n--set serviceAccount.create=false\n</code></pre> <p>Note</p> <p>If you want to use tolerations, using this parameter.</p>  Linux Windows <pre><code>--set tolerations[0].key=key1 \\\n--set tolerations[0].value=value1 \\\n--set tolerations[0].operator=Equal \\\n--set tolerations[0].effect=NoSchedule\n</code></pre> <pre><code>--set tolerations[0].key=key1 `\n--set tolerations[0].value=value1 `\n--set tolerations[0].operator=Equal `\n--set tolerations[0].effect=NoSchedule\n</code></pre> <p>Tip</p> <p>Do you want to log with custom cloudwatch log group, please add some config like this in helm chart value.</p> fluent-bit-values.yaml<pre><code>clusterInfo:\nconfigMapName: \"fluent-bit-cluster-info\"\nclusterName: \"\" # [REQUIRED]\nregion: \"\"      # [REQUIRED]\nfluentBitHttpServer: \"On\"\nfluentBitHttpPort: \"2020\"\nfluentBitReadHead: \"Off\"\nfluentBitReadTail: \"On\"\nfluentBitConfig:\nconfigMapName: \"fluent-bit-config\"\nextraApplicationConfig: |\n[INPUT]\nName                tail\nTag                 application.app_name\nPath                /var/log/containers/app_name-*\nmultiline.parser    docker, cri\nDB                  /var/fluent-bit/state/flb_app_name.db\nMem_Buf_Limit       50MB\nSkip_Long_Lines     On\nRefresh_Interval    10\nRotate_Wait         30\nstorage.type        filesystem\nRead_from_Head      ${READ_FROM_HEAD}\n[OUTPUT]\nName                cloudwatch_logs\nMatch               application.app_name\nregion              ${AWS_REGION}\nlog_group_name      /aws/${AWS_REGION}/app_name\nlog_stream_prefix   ${HOST_NAME}-\nauto_create_group   true\nextra_user_agent    container-insights\nserviceAccount:\ncreate: false\ntolerations: []\n# - key: \"key1\"         # taint key\n#     value: \"value1\"     # taint value\n#     operator: \"Equal\"\n#     effect: \"NoSchedule\"\n</code></pre> <p>Github Documentation</p>"},{"location":"Containers/EKS/13-enable-logging/#deploy-fluent-bit-using-kubectl","title":"Deploy Fluent Bit using <code>kubectl</code>","text":"Linux Windows <pre><code>CLUSTER_NAME=\"&lt;cluster name&gt;\"\nREGION=\"&lt;region code&gt;\"\nFluentBitHttpPort='2020'\nFluentBitReadFromHead='Off'\n[[ ${FluentBitReadFromHead} = 'On' ]] &amp;&amp; FluentBitReadFromTail='Off'|| FluentBitReadFromTail='On'\n[[ -z ${FluentBitHttpPort} ]] &amp;&amp; FluentBitHttpServer='Off' || FluentBitHttpServer='On'\nkubectl create configmap fluent-bit-cluster-info \\\n--from-literal=cluster.name=${CLUSTER_NAME} \\\n--from-literal=http.server=${FluentBitHttpServer} \\\n--from-literal=http.port=${FluentBitHttpPort} \\\n--from-literal=read.head=${FluentBitReadFromHead} \\\n--from-literal=read.tail=${FluentBitReadFromTail} \\\n--from-literal=logs.region=${REGION} -n amazon-cloudwatch\n\nkubectl apply -f https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/fluent-bit.yaml\n\nkubectl get pods -n amazon-cloudwatch\n</code></pre> <pre><code>$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$REGION=\"&lt;region code&gt;\"\n$FluentBitHttpPort=\"2020\"\n$FluentBitReadFromHead=\"Off\"\nif ($FluentBitReadFromHead -eq 'On') {\n$FluentBitReadFromTail = 'Off'\n} else {\n$FluentBitReadFromTail = 'On'\n}\nif (-not $FluentBitHttpPort) {\n$FluentBitHttpServer = 'Off'\n} else {\n$FluentBitHttpServer = 'On'\n}\nkubectl create configmap fluent-bit-cluster-info `\n--from-literal=cluster.name=${CLUSTER_NAME} `\n--from-literal=http.server=${FluentBitHttpServer} `\n--from-literal=http.port=${FluentBitHttpPort} `\n--from-literal=read.head=${FluentBitReadFromHead} `\n--from-literal=read.tail=${FluentBitReadFromTail} `\n--from-literal=logs.region=${REGION} -n amazon-cloudwatch\nkubectl apply -f https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/fluent-bit.yaml\nkubectl get pods -n amazon-cloudwatch\n</code></pre> fluent-bit.yaml <pre><code># apiVersion: v1\n# kind: ServiceAccount\n# metadata:\n#   name: fluent-bit\n#   namespace: amazon-cloudwatch\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\nname: fluent-bit-role\nrules:\n- nonResourceURLs:\n- /metrics\nverbs:\n- get\n- apiGroups: [\"\"]\nresources:\n- namespaces\n- pods\n- pods/logs\n- nodes\n- nodes/proxy\nverbs: [\"get\", \"list\", \"watch\"]\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\nname: fluent-bit-role-binding\nroleRef:\napiGroup: rbac.authorization.k8s.io\nkind: ClusterRole\nname: fluent-bit-role\nsubjects:\n- kind: ServiceAccount\nname: fluent-bit\nnamespace: amazon-cloudwatch\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\nname: fluent-bit-config\nnamespace: amazon-cloudwatch\nlabels:\nk8s-app: fluent-bit\ndata:\nfluent-bit.conf: |\n[SERVICE]\nFlush                     5\nGrace                     30\nLog_Level                 info\nDaemon                    off\nParsers_File              parsers.conf\nHTTP_Server               ${HTTP_SERVER}\nHTTP_Listen               0.0.0.0\nHTTP_Port                 ${HTTP_PORT}\nstorage.path              /var/fluent-bit/state/flb-storage/\nstorage.sync              normal\nstorage.checksum          off\nstorage.backlog.mem_limit 5M\n@INCLUDE application-log.conf\n@INCLUDE dataplane-log.conf\n@INCLUDE host-log.conf\napplication-log.conf: |\n[INPUT]\nName                tail\nTag                 application.*\nExclude_Path        /var/log/containers/cloudwatch-agent*, /var/log/containers/fluent-bit*, /var/log/containers/aws-node*, /var/log/containers/kube-proxy*\nPath                /var/log/containers/*.log\nmultiline.parser    docker, cri\nDB                  /var/fluent-bit/state/flb_container.db\nMem_Buf_Limit       50MB\nSkip_Long_Lines     On\nRefresh_Interval    10\nRotate_Wait         30\nstorage.type        filesystem\nRead_from_Head      ${READ_FROM_HEAD}\n[INPUT]\nName                tail\nTag                 application.*\nPath                /var/log/containers/fluent-bit*\nmultiline.parser    docker, cri\nDB                  /var/fluent-bit/state/flb_log.db\nMem_Buf_Limit       5MB\nSkip_Long_Lines     On\nRefresh_Interval    10\nRead_from_Head      ${READ_FROM_HEAD}\n[INPUT]\nName                tail\nTag                 application.*\nPath                /var/log/containers/cloudwatch-agent*\nmultiline.parser    docker, cri\nDB                  /var/fluent-bit/state/flb_cwagent.db\nMem_Buf_Limit       5MB\nSkip_Long_Lines     On\nRefresh_Interval    10\nRead_from_Head      ${READ_FROM_HEAD}\n[FILTER]\nName                kubernetes\nMatch               application.*\nKube_URL            https://kubernetes.default.svc:443\nKube_Tag_Prefix     application.var.log.containers.\nMerge_Log           On\nMerge_Log_Key       log_processed\nK8S-Logging.Parser  On\nK8S-Logging.Exclude Off\nLabels              Off\nAnnotations         Off\nUse_Kubelet         On\nKubelet_Port        10250\nBuffer_Size         0\n[OUTPUT]\nName                cloudwatch_logs\nMatch               application.*\nregion              ${AWS_REGION}\nlog_group_name      /aws/containerinsights/${CLUSTER_NAME}/application\nlog_stream_prefix   ${HOST_NAME}-\nauto_create_group   true\nextra_user_agent    container-insights\ndataplane-log.conf: |\n[INPUT]\nName                systemd\nTag                 dataplane.systemd.*\nSystemd_Filter      _SYSTEMD_UNIT=docker.service\nSystemd_Filter      _SYSTEMD_UNIT=kubelet.service\nDB                  /var/fluent-bit/state/systemd.db\nPath                /var/log/journal\nRead_From_Tail      ${READ_FROM_TAIL}\n[INPUT]\nName                tail\nTag                 dataplane.tail.*\nPath                /var/log/containers/aws-node*, /var/log/containers/kube-proxy*\nmultiline.parser    docker, cri\nDB                  /var/fluent-bit/state/flb_dataplane_tail.db\nMem_Buf_Limit       50MB\nSkip_Long_Lines     On\nRefresh_Interval    10\nRotate_Wait         30\nstorage.type        filesystem\nRead_from_Head      ${READ_FROM_HEAD}\n[FILTER]\nName                modify\nMatch               dataplane.systemd.*\nRename              _HOSTNAME                   hostname\nRename              _SYSTEMD_UNIT               systemd_unit\nRename              MESSAGE                     message\nRemove_regex        ^((?!hostname|systemd_unit|message).)*$\n[FILTER]\nName                aws\nMatch               dataplane.*\nimds_version        v2\n[OUTPUT]\nName                cloudwatch_logs\nMatch               dataplane.*\nregion              ${AWS_REGION}\nlog_group_name      /aws/containerinsights/${CLUSTER_NAME}/dataplane\nlog_stream_prefix   ${HOST_NAME}-\nauto_create_group   true\nextra_user_agent    container-insights\nhost-log.conf: |\n[INPUT]\nName                tail\nTag                 host.dmesg\nPath                /var/log/dmesg\nKey                 message\nDB                  /var/fluent-bit/state/flb_dmesg.db\nMem_Buf_Limit       5MB\nSkip_Long_Lines     On\nRefresh_Interval    10\nRead_from_Head      ${READ_FROM_HEAD}\n[INPUT]\nName                tail\nTag                 host.messages\nPath                /var/log/messages\nParser              syslog\nDB                  /var/fluent-bit/state/flb_messages.db\nMem_Buf_Limit       5MB\nSkip_Long_Lines     On\nRefresh_Interval    10\nRead_from_Head      ${READ_FROM_HEAD}\n[INPUT]\nName                tail\nTag                 host.secure\nPath                /var/log/secure\nParser              syslog\nDB                  /var/fluent-bit/state/flb_secure.db\nMem_Buf_Limit       5MB\nSkip_Long_Lines     On\nRefresh_Interval    10\nRead_from_Head      ${READ_FROM_HEAD}\n[FILTER]\nName                aws\nMatch               host.*\nimds_version        v2\n[OUTPUT]\nName                cloudwatch_logs\nMatch               host.*\nregion              ${AWS_REGION}\nlog_group_name      /aws/containerinsights/${CLUSTER_NAME}/host\nlog_stream_prefix   ${HOST_NAME}.\nauto_create_group   true\nextra_user_agent    container-insights\nparsers.conf: |\n[PARSER]\nName                syslog\nFormat              regex\nRegex               ^(?&lt;time&gt;[^ ]* {1,2}[^ ]* [^ ]*) (?&lt;host&gt;[^ ]*) (?&lt;ident&gt;[a-zA-Z0-9_\\/\\.\\-]*)(?:\\[(?&lt;pid&gt;[0-9]+)\\])?(?:[^\\:]*\\:)? *(?&lt;message&gt;.*)$\nTime_Key            time\nTime_Format         %b %d %H:%M:%S\n[PARSER]\nName                container_firstline\nFormat              regex\nRegex               (?&lt;log&gt;(?&lt;=\"log\":\")\\S(?!\\.).*?)(?&lt;!\\\\)\".*(?&lt;stream&gt;(?&lt;=\"stream\":\").*?)\".*(?&lt;time&gt;\\d{4}-\\d{1,2}-\\d{1,2}T\\d{2}:\\d{2}:\\d{2}\\.\\w*).*(?=})\nTime_Key            time\nTime_Format         %Y-%m-%dT%H:%M:%S.%LZ\n[PARSER]\nName                cwagent_firstline\nFormat              regex\nRegex               (?&lt;log&gt;(?&lt;=\"log\":\")\\d{4}[\\/-]\\d{1,2}[\\/-]\\d{1,2}[ T]\\d{2}:\\d{2}:\\d{2}(?!\\.).*?)(?&lt;!\\\\)\".*(?&lt;stream&gt;(?&lt;=\"stream\":\").*?)\".*(?&lt;time&gt;\\d{4}-\\d{1,2}-\\d{1,2}T\\d{2}:\\d{2}:\\d{2}\\.\\w*).*(?=})\nTime_Key            time\nTime_Format         %Y-%m-%dT%H:%M:%S.%LZ\n---\napiVersion: apps/v1\nkind: DaemonSet\nmetadata:\nname: fluent-bit\nnamespace: amazon-cloudwatch\nlabels:\nk8s-app: fluent-bit\nversion: v1\nkubernetes.io/cluster-service: \"true\"\nspec:\nselector:\nmatchLabels:\nk8s-app: fluent-bit\ntemplate:\nmetadata:\nlabels:\nk8s-app: fluent-bit\nversion: v1\nkubernetes.io/cluster-service: \"true\"\nspec:\ncontainers:\n- name: fluent-bit\nimage: public.ecr.aws/aws-observability/aws-for-fluent-bit:stable\nimagePullPolicy: Always\nenv:\n- name: AWS_REGION\nvalueFrom:\nconfigMapKeyRef:\nname: fluent-bit-cluster-info\nkey: logs.region\n- name: CLUSTER_NAME\nvalueFrom:\nconfigMapKeyRef:\nname: fluent-bit-cluster-info\nkey: cluster.name\n- name: HTTP_SERVER\nvalueFrom:\nconfigMapKeyRef:\nname: fluent-bit-cluster-info\nkey: http.server\n- name: HTTP_PORT\nvalueFrom:\nconfigMapKeyRef:\nname: fluent-bit-cluster-info\nkey: http.port\n- name: READ_FROM_HEAD\nvalueFrom:\nconfigMapKeyRef:\nname: fluent-bit-cluster-info\nkey: read.head\n- name: READ_FROM_TAIL\nvalueFrom:\nconfigMapKeyRef:\nname: fluent-bit-cluster-info\nkey: read.tail\n- name: HOST_NAME\nvalueFrom:\nfieldRef:\nfieldPath: spec.nodeName\n- name: HOSTNAME\nvalueFrom:\nfieldRef:\napiVersion: v1\nfieldPath: metadata.name\n- name: CI_VERSION\nvalue: \"k8s/1.3.13\"\nresources:\nlimits:\nmemory: 200Mi\nrequests:\ncpu: 500m\nmemory: 100Mi\nvolumeMounts:\n# Please don't change below read-only permissions\n- name: fluentbitstate\nmountPath: /var/fluent-bit/state\n- name: varlog\nmountPath: /var/log\nreadOnly: true\n- name: varlibdockercontainers\nmountPath: /var/lib/docker/containers\nreadOnly: true\n- name: fluent-bit-config\nmountPath: /fluent-bit/etc/\n- name: runlogjournal\nmountPath: /run/log/journal\nreadOnly: true\n- name: dmesg\nmountPath: /var/log/dmesg\nreadOnly: true\nterminationGracePeriodSeconds: 10\nhostNetwork: true\ndnsPolicy: ClusterFirstWithHostNet\nvolumes:\n- name: fluentbitstate\nhostPath:\npath: /var/fluent-bit/state\n- name: varlog\nhostPath:\npath: /var/log\n- name: varlibdockercontainers\nhostPath:\npath: /var/lib/docker/containers\n- name: fluent-bit-config\nconfigMap:\nname: fluent-bit-config\n- name: runlogjournal\nhostPath:\npath: /run/log/journal\n- name: dmesg\nhostPath:\npath: /var/log/dmesg\nserviceAccountName: fluent-bit\ntolerations:\n- key: node-role.kubernetes.io/master\noperator: Exists\neffect: NoSchedule\n- operator: \"Exists\"\neffect: \"NoExecute\"\n- operator: \"Exists\"\neffect: \"NoSchedule\"\n</code></pre> <p>Tip</p> <p>Do you want to log with custom cloudwatch log group, please add some config like this in <code>fluent-bit-config</code> configmap.</p> <pre><code>[INPUT]\n    Name                tail\n    Tag                 application.app_name\n    Path                /var/log/containers/app_name-*\n    multiline.parser    docker, cri\n    DB                  /var/fluent-bit/state/flb_app_name.db\n    Mem_Buf_Limit       50MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Rotate_Wait         30\n    storage.type        filesystem\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[OUTPUT]\n    Name                cloudwatch_logs\n    Match               application.app_name\n    region              ${AWS_REGION}\n    log_group_name      /aws/${AWS_REGION}/app_name\n    log_stream_prefix   ${HOST_NAME}-\n    auto_create_group   true\n    extra_user_agent    container-insights\n</code></pre> <p>AWS Documentation</p>"},{"location":"Containers/EKS/13-enable-logging/#fargate","title":"Fargate","text":""},{"location":"Containers/EKS/13-enable-logging/#create-namespace","title":"Create Namespace","text":"<pre><code>kubectl apply -f https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/aws-observability-namespace.yaml\n</code></pre> aws-observability-namespace.yaml aws-observability-namespace.yaml<pre><code>apiVersion: v1\nkind: Namespace\nmetadata:\nname: aws-observability\nlabels:\naws-observability: enabled\n</code></pre>"},{"location":"Containers/EKS/13-enable-logging/#create-configmap","title":"Create ConfigMap","text":"CloudWatch LogsElasticSearch/OpenSearchKinesis Data StreamKinesis Data Firehose aws-logging-cloudwatch-logs-config.yaml<pre><code>kind: ConfigMap\napiVersion: v1\nmetadata:\nname: aws-logging\nnamespace: aws-observability\ndata:\nflb_log_cw: \"false\"  # Set to true to ship Fluent Bit process logs to CloudWatch.\nfilters.conf: |\n[FILTER]\nName parser\nMatch *\nKey_name log\nParser crio\n[FILTER]\nName kubernetes\nMatch kube.*\nMerge_Log On\nKeep_Log Off\nBuffer_Size 0\nKube_Meta_Cache_TTL 300s\noutput.conf: |\n[OUTPUT]\nName cloudwatch_logs\nMatch   kube.*\nregion region-code\nlog_group_name my-logs\nlog_stream_prefix from-fluent-bit-\nlog_retention_days 60\nauto_create_group true\nparsers.conf: |\n[PARSER]\nName crio\nFormat Regex\nRegex ^(?&lt;time&gt;[^ ]+) (?&lt;stream&gt;stdout|stderr) (?&lt;logtag&gt;P|F) (?&lt;log&gt;.*)$\nTime_Key    time\nTime_Format %Y-%m-%dT%H:%M:%S.%L%z\n</code></pre> <p>Fluent Bit Documentation</p> aws-logging-opensearch-config.yaml<pre><code>kind: ConfigMap\napiVersion: v1\nmetadata:\nname: aws-logging\nnamespace: aws-observability\ndata:\noutput.conf: |\n[OUTPUT]\nName  es\nMatch *\nHost  search-example-gjxdcilagiprbglqn42jsty66y.region-code.es.amazonaws.com\nPort  443\nIndex example\nType  example_type\nAWS_Auth On\nAWS_Region region-code\ntls   On\n</code></pre> <p>Fluent Bit Documentation</p> aws-logging-kinesis-config.yaml<pre><code>kind: ConfigMap\napiVersion: v1\nmetadata:\nname: aws-logging\nnamespace: aws-observability\ndata:\noutput.conf: |\n[OUTPUT]\nName kinesis_streams\nMatch *\nregion region-code\nstream my-stream\n</code></pre> <p>Fluent Bit Documentation Github Documentation</p> aws-logging-firehose-config.yaml<pre><code>kind: ConfigMap\napiVersion: v1\nmetadata:\nname: aws-logging\nnamespace: aws-observability\ndata:\noutput.conf: |\n[OUTPUT]\nName  kinesis_firehose\nMatch *\nregion region-code\ndelivery_stream my-stream-firehose\n</code></pre> <p>Fluent Bit Documentation Github Documentation</p>"},{"location":"Containers/EKS/13-enable-logging/#download-the-iam-policy-permission","title":"Download the IAM policy permission","text":"CloudWatch LogsElasticSearch/OpenSearchKinesis Data StreamKinesis Data Firehose  Linux Windows <pre><code>curl -LO https://raw.githubusercontent.com/aws-samples/amazon-eks-fluent-logging-examples/mainline/examples/fargate/cloudwatchlogs/permissions.json\n</code></pre> <pre><code>curl.exe -LO https://raw.githubusercontent.com/aws-samples/amazon-eks-fluent-logging-examples/mainline/examples/fargate/cloudwatchlogs/permissions.json\n</code></pre>  Linux Windows <pre><code>curl -LO https://raw.githubusercontent.com/aws-samples/amazon-eks-fluent-logging-examples/mainline/examples/fargate/amazon-elasticsearch/permissions.json\n</code></pre> <pre><code>curl.exe -LO https://raw.githubusercontent.com/aws-samples/amazon-eks-fluent-logging-examples/mainline/examples/fargate/amazon-elasticsearch/permissions.json\n</code></pre>  Linux Windows <pre><code>curl -LO https://raw.githubusercontent.com/aws-samples/amazon-eks-fluent-logging-examples/mainline/examples/fargate/kinesis-streams/permissions.json\n</code></pre> <pre><code>curl.exe -LO https://raw.githubusercontent.com/aws-samples/amazon-eks-fluent-logging-examples/mainline/examples/fargate/kinesis-streams/permissions.json\n</code></pre>  Linux Windows <pre><code>curl -LO https://raw.githubusercontent.com/aws-samples/amazon-eks-fluent-logging-examples/mainline/examples/fargate/kinesis-firehose/permissions.json\n</code></pre> <pre><code>curl.exe -LO https://raw.githubusercontent.com/aws-samples/amazon-eks-fluent-logging-examples/mainline/examples/fargate/kinesis-firehose/permissions.json\n</code></pre>"},{"location":"Containers/EKS/13-enable-logging/#attach-the-iam-policy-to-the-pod-execution-role","title":"Attach the IAM policy to the pod execution role","text":"Linux Windows <pre><code>POLICY_NAME=\"&lt;policy name&gt;\"\nROLE_NAME=\"&lt;role name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region code&gt;\"\nPOLICY_ARN=$(aws iam create-policy \\\n--policy-name $POLICY_NAME \\\n--policy-document file://permissions.json \\\n--query 'Policy.Arn' \\\n--output text \\\n# --tags Key=project,Value=$PROJECT_NAME \\  # AWS CLI v2\n)\naws iam attach-role-policy \\\n--policy-arn $POLICY_ARN \\\n--role-name $ROLE_NAME\n</code></pre> <pre><code>$POLICY_NAME=\"&lt;policy name&gt;\"\n$ROLE_NAME=\"&lt;role name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region code&gt;\"\n$POLICY_ARN = aws iam create-policy `\n--policy-name $POLICY_NAME `\n--policy-document file://permissions.json `\n--query 'Policy.Arn' `\n--output text `\n--tags Key=project,Value=$PROJECT_NAME\naws iam attach-role-policy `\n--policy-arn $POLICY_ARN `\n--role-name $ROLE_NAME\n</code></pre> <p>AWS Documentation</p> <p>Github</p>"},{"location":"Containers/EKS/13-enable-logging/#optional-add-kms-encryption-policy-to-pod-execution-iam-role","title":"(Optional) Add KMS encryption policy to pod execution IAM role","text":"JSON fileUsing command kinesis-kms-permissions.json<pre><code>{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Action\": [\n\"kms:GenerateDataKey\"\n],\n\"Resource\": \"arn:aws:kms:&lt;region code&gt;:&lt;account id&gt;:key/&lt;kms key id&gt;\"\n}\n]\n}\n</code></pre> <pre><code>cat &lt;&lt; EOF &gt; kinesis-kms-permissions.json\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"kms:GenerateDataKey\"\n            ],\n            \"Resource\": \"arn:aws:kms:&lt;region code&gt;:&lt;account id&gt;:key/&lt;kms key id&gt;\"\n        }\n    ]\n}\nEOF\naws iam create-policy --policy-name &lt;policy name&gt; --policy-document file://kinesis-kms-permissions.json\n\naws iam attach-role-policy \\\n--policy-arn arn:aws:iam::&lt;account id&gt;:policy/&lt;policy name&gt; \\\n--role-name &lt;fargate pod execution role name&gt;\n</code></pre>"},{"location":"Containers/EKS/14-network-policy-with-calico/","title":"Network Policy with Calico","text":""},{"location":"Containers/EKS/14-network-policy-with-calico/#install-calico","title":"Install Calico","text":"<pre><code>helm repo add projectcalico https://docs.projectcalico.org/charts\nhelm repo update                         helm install calico projectcalico/tigera-operator --version v3.26.1\nkubectl get all -n calico-system\n</code></pre> <p>AWS Documentation</p>"},{"location":"Containers/EKS/14-network-policy-with-calico/#create-network-policy","title":"Create Network Policy","text":""},{"location":"Containers/EKS/14-network-policy-with-calico/#network-policy","title":"Network Policy","text":"networkpolicy.yaml<pre><code>kind: NetworkPolicy\napiVersion: networking.k8s.io/v1\nmetadata:\nname: nginx\nnamespace: nginx\nspec:\npodSelector:\nmatchLabels:\napp: nginx # app-label\npolicyTypes:\n- Ingress\n- Egress\ningress:\n- from:\n- ipBlock:\ncidr: 10.0.1.0/24 # allow from elb\n- ipBlock:\ncidr: 10.0.2.0/24 # allow from elb\n- podSelector:\nmatchLabels:\napp: apache      # allow from pod\nports:\n- protocol: TCP\nport: 8080 # the port which should be Internet-accessible\negress: {}  # egress any open\n</code></pre>"},{"location":"Containers/EKS/14-network-policy-with-calico/#global-network-policy","title":"Global Network Policy","text":"globalnetworkpolicy.yaml<pre><code># Allow all ingress traffic except traffic from app=nginx pod.\napiVersion: crd.projectcalico.org/v1\nkind: GlobalNetworkPolicy\nmetadata:\nname: nginx\nspec:\nselector: app == 'nginx'\ningress:\n- action: Deny\nprotocol: TCP\nsource:\nselector: app == 'apache'\n- action: Allow\nprotocol: TCP\negress:\n- action: Allow\n</code></pre>"},{"location":"Containers/EKS/15-using-ebs/","title":"Using EBS","text":""},{"location":"Containers/EKS/15-using-ebs/#create-service-account-using-eksctl","title":"Create service account using <code>eksctl</code>","text":"Linux Windows <pre><code>CLUSTER_NAME=\"&lt;cluster name&gt;\"\nROLE_NAME=\"&lt;role name&gt;\"\nREGION=\"&lt;region code&gt;\"\neksctl create iamserviceaccount \\\n--name ebs-csi-controller-sa \\\n--namespace kube-system \\\n--cluster $CLUSTER_NAME \\\n--attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy \\\n--role-name $ROLE_NAME \\\n--role-only \\\n--region $REGION \\\n--approve\n</code></pre> <pre><code>$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$ROLE_NAME=\"&lt;role name&gt;\"\n$REGION=\"&lt;region code&gt;\"\neksctl create iamserviceaccount `\n--name ebs-csi-controller-sa `\n--namespace kube-system `\n--cluster $CLUSTER_NAME `\n--attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy `\n--role-name $ROLE_NAME `\n--role-only `\n--region $REGION `\n--approve\n</code></pre> <p>AWS Documentation</p>"},{"location":"Containers/EKS/15-using-ebs/#install-ebs-csi-driver","title":"Install EBS CSI Driver","text":"Linux Windows <pre><code>CLUSTER_NAME=\"&lt;cluster name&gt;\"\nROLE_NAME=\"&lt;role name&gt;\"\nREGION=\"&lt;region code&gt;\"\nROLE_ARN=$(aws iam get-role --role-name $ROLE_NAME --region $REGION --query 'Role.Arn' --output text)\neksctl create addon \\\n--name aws-ebs-csi-driver \\\n--cluster $CLUSTER_NAME \\\n--service-account-role-arn $ROLE_ARN \\\n--region $REGION \\\n--force\n</code></pre> <pre><code>$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$ROLE_NAME=\"&lt;role name&gt;\"\n$REGION=\"&lt;region code&gt;\"\n$ROLE_ARN = aws iam get-role --role-name $ROLE_NAME --region $REGION --query 'Role.Arn' --output text\neksctl create addon `\n--name aws-ebs-csi-driver `\n--cluster $CLUSTER_NAME `\n--service-account-role-arn $ROLE_ARN `\n--region $REGION `\n--force\n</code></pre> <p>AWS Documentation</p>"},{"location":"Containers/EKS/15-using-ebs/#use-ebs-file-system","title":"Use EBS File System","text":""},{"location":"Containers/EKS/15-using-ebs/#static-provisioning","title":"Static Provisioning","text":"<p>Note</p> <p>You can see examples in HERE.</p> persistent-volume.yaml<pre><code>apiVersion: v1\nkind: PersistentVolume\nmetadata:\nname: ebs-pv\nspec:\naccessModes:\n- ReadWriteOnce\ncapacity:\nstorage: 5Gi\ncsi:\ndriver: ebs.csi.aws.com\nfsType: ext4\nvolumeHandle: vol-XXXXXXXXXXXXXXXXX\nnodeAffinity:\nrequired:\nnodeSelectorTerms:\n- matchExpressions:\n- key: topology.ebs.csi.aws.com/zone\noperator: In\nvalues:\n- us-east-2a\n</code></pre> persistent-volume-claim.yaml<pre><code>apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\nname: ebs-claim\nnamespace: default\nspec:\nstorageClassName: \"\" # Empty string must be explicitly set otherwise default StorageClass will be set\nvolumeName: ebs-pv\naccessModes:\n- ReadWriteOnce\nresources:\nrequests:\nstorage: 5Gi\n</code></pre> pod.yaml<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\nname: app\nnamespace: default\nspec:\ncontainers:\n- name: app\nimage: centos\ncommand: [\"/bin/sh\"]\nargs: [\"-c\", \"while true; do echo $(date -u) &gt;&gt; /data/out.txt; sleep 5; done\"]\nvolumeMounts:\n- name: persistent-storage\nmountPath: /data\nvolumes:\n- name: persistent-storage\npersistentVolumeClaim:\nclaimName: ebs-claim\n</code></pre>"},{"location":"Containers/EKS/15-using-ebs/#dynamic-provisioning","title":"Dynamic Provisioning","text":"<p>Note</p> <p>You can see examples in HERE.</p> storage-class.yaml<pre><code>apiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\nname: ebs-sc\nprovisioner: ebs.csi.aws.com\nvolumeBindingMode: WaitForFirstConsumer\n</code></pre> persistent-volume-claim.yaml<pre><code>apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\nname: ebs-claim\nnamespace: default\nspec:\naccessModes:\n- ReadWriteOnce\nstorageClassName: ebs-sc\nresources:\nrequests:\nstorage: 4Gi\n</code></pre> pod.yaml<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\nname: app\nnamespace: default\nspec:\ncontainers:\n- name: app\nimage: centos\ncommand: [\"/bin/sh\"]\nargs: [\"-c\", \"while true; do echo $(date -u) &gt;&gt; /data/out.txt; sleep 5; done\"]\nvolumeMounts:\n- name: persistent-storage\nmountPath: /data\nvolumes:\n- name: persistent-storage\npersistentVolumeClaim:\nclaimName: ebs-claim\n</code></pre>"},{"location":"Containers/EKS/16-using-secrets-manager/","title":"Using Secrets Manager","text":""},{"location":"Containers/EKS/16-using-secrets-manager/#install-the-ascp","title":"Install the ASCP","text":"<pre><code>helm repo add secrets-store-csi-driver https://kubernetes-sigs.github.io/secrets-store-csi-driver/charts\nhelm install -n kube-system csi-secrets-store secrets-store-csi-driver/secrets-store-csi-driver --set grpcSupportedProviders=\"aws\" --set syncSecret.enabled=\"true\"\nhelm repo add aws-secrets-manager https://aws.github.io/secrets-store-csi-driver-provider-aws\nhelm install -n kube-system secrets-provider-aws aws-secrets-manager/secrets-store-csi-driver-provider-aws\n</code></pre> <p>AWS Documentation</p>"},{"location":"Containers/EKS/16-using-secrets-manager/#create-iam-policy-for-accessing-secrets-manager","title":"Create IAM policy for accessing Secrets Manager","text":"Linux Windows <pre><code>POLICY_NAME=\"&lt;policy name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region&gt;\"\nSECRET_ARN=\"&lt;secret arn&gt;\"\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/secrets-manager-policy.json\n\nsed -i \"s|SECRET_ARN|$SECRET_ARN|\" secrets-manager-policy.json\n\nPOLICY_ARN=$(aws iam create-policy \\\n--policy-name $POLICY_NAME \\\n--policy-document file://aws-load-balancer-controller-iam-policy.json \\\n--query 'Policy.Arn' \\\n--output text \\\n# --tags Key=project,Value=$PROJECT_NAME \\  # AWS CLI v2\n)\n</code></pre> <pre><code>$POLICY_NAME=\"&lt;policy name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region&gt;\"\n$SECRET_ARN=\"&lt;secret arn&gt;\"\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/secrets-manager-policy.json\n(Get-Content secrets-manager-policy.json) | Foreach-Object { $_ -replace \"SECRET_ARN\", \"$SECRET_ARN\" } | Set-Content secrets-manager-policy.json\n$POLICY_ARN = aws iam create-policy `\n--policy-name $POLICY_NAME `\n--policy-document secrets-manager-policy.json `\n--query 'Policy.Arn' `\n--output text `\n--tags Key=project,Value=$PROJECT_NAME\n</code></pre>"},{"location":"Containers/EKS/16-using-secrets-manager/#create-service-account","title":"Create Service Account","text":"Linux Windows <pre><code>CLUSTER_NAME=\"&lt;cluster name&gt;\"\nSERVICE_ACCOUNT_NAME=\"&lt;service account name&gt;\"\nNAMESPACE_NAME=\"&lt;namespace name&gt;\"\nROLE_NAME=\"&lt;role name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region&gt;\"\neksctl create iamserviceaccount \\\n--cluster $CLUSTER_NAME \\\n--name $SERVICE_ACCOUNT_NAME \\\n--namespace $NAMESPACE_NAME \\\n--attach-policy-arn $POLICY_ARN \\\n--role-name $ROLE_NAME \\\n--tags project=$PROJECT_NAME \\\n--region $REGION \\\n--override-existing-serviceaccounts \\\n--approve\n</code></pre> <pre><code>$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$SERVICE_ACCOUNT_NAME=\"&lt;service account name&gt;\"\n$NAMESPACE_NAME=\"&lt;namespace name&gt;\"\n$ROLE_NAME=\"&lt;role name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region&gt;\"\neksctl create iamserviceaccount `\n--cluster $CLUSTER_NAME `\n--name $SERVICE_ACCOUNT_NAME `\n--namespace $NAMESPACE_NAME `\n--attach-policy-arn $POLICY_ARN `\n--role-name $ROLE_NAME `\n--tags project=$PROJECT_NAME `\n--region $REGION `\n--override-existing-serviceaccounts `\n--approve\n</code></pre> <p>AWS Documentation</p>"},{"location":"Containers/EKS/16-using-secrets-manager/#use-secrets-managers-secret-values","title":"Use Secrets Manager's Secret Values","text":"secret-provider-class.yaml<pre><code>apiVersion: secrets-store.csi.x-k8s.io/v1\nkind: SecretProviderClass\nmetadata:\nname: &lt;secretproviderclass name&gt;\nnamespace: &lt;namespace name&gt;\nspec:\nprovider: aws\nsecretObjects:\n- data:\n- key: DB_USERNAME\nobjectName: username\n- key: DB_PASSWORD\nobjectName: password\n- key: DB_ENGINE\nobjectName: engine\n- key: DB_HOST\nobjectName: host\n- key: DB_PORT\nobjectName: port\n- key: DB_CLUSTER_IDENTIFIER\nobjectName: dbClusterIdentifier\nsecretName: &lt;secret name&gt;\ntype: Opaque\nparameters:\nobjects: |\n- objectName: \"&lt;secret arn&gt;\"\nobjectType: \"secretsmanager\"\njmesPath:\n- path: username\nobjectAlias: username\n- path: password\nobjectAlias: password\n- path: engine\nobjectAlias: engine\n- path: host\nobjectAlias: host\n- path: to_string(port)\nobjectAlias: port\n- path: dbClusterIdentifier\nobjectAlias: dbClusterIdentifier\n</code></pre> <p>Note</p> <p>You can check JMESPath in HERE.</p> pod.yaml<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\nname: &lt;pod name&gt;\nnamespace: &lt;namespace name&gt;\nlabels:\napp: &lt;pod name&gt;\nspec:\nserviceAccountName: &lt;serviceaccount name&gt;\ncontainers:\n- name: busybox\nimage: busybox\ncommand:  # override Dockerfile `ENTRYPOINT`\n- \"sleep\"\n- \"3600\"\nenv:\n- name: DB_USERNAME\nvalueFrom:\nsecretKeyRef:\nname: &lt;secret name&gt;\nkey: DB_USERNAME\n- name: DB_PASSWORD\nvalueFrom:\nsecretKeyRef:\nname: &lt;secret name&gt;\nkey: DB_PASSWORD\n- name: DB_ENGINE\nvalueFrom:\nsecretKeyRef:\nname: &lt;secret name&gt;\nkey: DB_ENGINE\n- name: DB_HOST\nvalueFrom:\nsecretKeyRef:\nname: &lt;secret name&gt;\nkey: DB_HOST\n- name: DB_PORT\nvalueFrom:\nsecretKeyRef:\nname: &lt;secret name&gt;\nkey: DB_PORT\n- name: DB_CLUSTER_IDENTIFIER\nvalueFrom:\nsecretKeyRef:\nname: &lt;secret name&gt;\nkey: DB_CLUSTER_IDENTIFIER\nvolumeMounts:\n- name: secrets-store-inline\nmountPath: \"/mnt/secrets-store\"\nreadOnly: true\nvolumes:\n- name: secrets-store-inline\ncsi:\ndriver: secrets-store.csi.k8s.io\nreadOnly: true\nvolumeAttributes:\nsecretProviderClass: \"&lt;secret name&gt;\"\n</code></pre> <p>AWS Documentation</p>"},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/","title":"Cluster and Nodegroup's Security Group Control","text":""},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#using-cloudformation-for-cluster-and-ec2-nodegroup","title":"Using CloudFormation for Cluster and EC2 Nodegroup","text":"Linux Windows <pre><code>STACK_NAME=\"\"\nPROJECT_NAME=\"\"\nREGION=\"\"\nClusterSecurityGroup=\"\"             # [REQUIRED] The Id of EKS Cluster Security Group.\nAdditionalClusterSecurityGroup=\"\"   # [REQUIRED] The Id of EKS Additional Cluster Security Group.\nGeneralNodegroupSecurityGroup=\"\"    # [REQUIRED] The Id of EKS General Nodegroup Security Group.\nBastionInstanceSecurityGroup=\"\"     # [optional] The Id of Bastion Instance Security Group.\nVpcEndpointSecurityGroup=\"\"         # [optional] The Id of VPC Endpoint Security Group.\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/eks/security-group/security-group-rules.yaml\n\naws cloudformation deploy \\\n--template-file ./security-group-rules.yaml \\\n--stack-name $STACK_NAME \\\n--parameter-overrides \\\nClusterSecurityGroup=$ClusterSecurityGroup \\\nAdditionalClusterSecurityGroup=$AdditionalClusterSecurityGroup \\\nGeneralNodegroupSecurityGroup=$GeneralNodegroupSecurityGroup \\\nBastionInstanceSecurityGroup=$BastionInstanceSecurityGroup \\\nVpcEndpointSecurityGroup=$VpcEndpointSecurityGroup \\\n--disable-rollback \\\n--tags project=$PROJECT_NAME \\\n--region $REGION\n</code></pre> <pre><code>$STACK_NAME=\"\"\n$PROJECT_NAME=\"\"\n$REGION=\"\"\n$ClusterSecurityGroup=\"\"             # [REQUIRED] The Id of EKS Cluster Security Group.\n$AdditionalClusterSecurityGroup=\"\"   # [REQUIRED] The Id of EKS Additional Cluster Security Group.\n$GeneralNodegroupSecurityGroup=\"\"    # [REQUIRED] The Id of EKS General Nodegroup Security Group.\n$BastionInstanceSecurityGroup=\"\"     # [optional] The Id of Bastion Instance Security Group.\n$VpcEndpointSecurityGroup=\"\"         # [optional] The Id of VPC Endpoint Security Group.\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/eks/security-group/security-group-rules.yaml\naws cloudformation deploy `\n--template-file ./security-group-rules.yaml `\n--stack-name $STACK_NAME `\n--parameter-overrides `\nClusterSecurityGroup=$ClusterSecurityGroup `\nAdditionalClusterSecurityGroup=$AdditionalClusterSecurityGroup `\nGeneralNodegroupSecurityGroup=$GeneralNodegroupSecurityGroup `\nBastionInstanceSecurityGroup=$BastionInstanceSecurityGroup `\nVpcEndpointSecurityGroup=$VpcEndpointSecurityGroup `\n--disable-rollback `\n--tags project=$PROJECT_NAME `\n--region $REGION\n</code></pre> <p>You can use CloudFormation template here.</p>"},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#using-cloudformation-for-cluster-and-fargate","title":"Using CloudFormation for Cluster and Fargate","text":"Linux Windows <pre><code>STACK_NAME=\"\"\nPROJECT_NAME=\"\"\nREGION=\"\"\nAdditionalClusterSecurityGroup=\"\"   # [REQUIRED] The Id of EKS Additional Cluster Security Group.\nAddonNodegroupSecurityGroup=\"\"      # [REQUIRED] The Id of EKS Add-on Nodegroup Security Group.\nFargateAppSecurityGroup=\"\"          # [REQUIRED] The Id of Fargate App Security Group.\nVpcEndpointSecurityGroup=\"\"         # [optional] The Id of VPC Endpoint Security Group.\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/eks/security-group/fargate-security-group-rules.yaml\n\naws cloudformation deploy \\\n--template-file ./fargate-security-group-rules.yaml \\\n--stack-name $STACK_NAME \\\n--parameter-overrides \\\nAdditionalClusterSecurityGroup=$AdditionalClusterSecurityGroup \\\nAddonNodegroupSecurityGroup=$AddonNodegroupSecurityGroup \\\nFargateAppSecurityGroup=$FargateAppSecurityGroup \\\nVpcEndpointSecurityGroup=$VpcEndpointSecurityGroup \\\n--disable-rollback \\\n--tags project=$PROJECT_NAME \\\n--region $REGION\n</code></pre> <pre><code>$STACK_NAME=\"\"\n$PROJECT_NAME=\"\"\n$REGION=\"\"\n$AdditionalClusterSecurityGroup=\"\"  # [REQUIRED] The Id of EKS Additional Cluster Security Group.\n$AddonNodegroupSecurityGroup=\"\"     # [REQUIRED] The Id of EKS Add-on Nodegroup Security Group.\n$FargateAppSecurityGroup=\"\"         # [REQUIRED] The Id of Fargate App Security Group.\n$VpcEndpointSecurityGroup=\"\"        # [optional] The Id of VPC Endpoint Security Group.\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/eks/security-group/fargate-security-group-rules.yaml\naws cloudformation deploy `\n--template-file ./fargate-security-group-rules.yaml `\n--stack-name $STACK_NAME `\n--parameter-overrides `\nAdditionalClusterSecurityGroup=$AdditionalClusterSecurityGroup `\nAddonNodegroupSecurityGroup=$AddonNodegroupSecurityGroup `\nFargateAppSecurityGroup=$FargateAppSecurityGroup `\nVpcEndpointSecurityGroup=$VpcEndpointSecurityGroup `\n--disable-rollback `\n--tags project=$PROJECT_NAME `\n--region $REGION\n</code></pre>"},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#cluster-security-group","title":"Cluster Security Group","text":""},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#inbound","title":"Inbound","text":"Protocol Port Source Description ALL ALL Cluster Security Group Cluster Security Group (MySelf) - ALL"},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#outbound","title":"Outbound","text":"Protocol Port Destination Description TCP 443 Cluster Security Group Cluster Security Group (MySelf) - APIServer"},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#additional-cluster-security-group","title":"Additional Cluster Security Group","text":""},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#inbound_1","title":"Inbound","text":"Protocol Port Source Description TCP 443 Additional Cluster Security Group Additional Cluster Security Group (MySelf) - APIServer TCP 443 Nodegroup General Security Group Nodegroup General Security Group - APIServer TCP 443 Fargate App Security Group Fargate App Security Group - APIServer TCP 443 Bastion Instance Security Group Bastion Instance Security Group - APIServer"},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#outbound_1","title":"Outbound","text":"Protocol Port Destination Description TCP 1024 - 65535 Nodegroup General Security Group Nodegroup General Security Group - Controllers TCP 1024 - 65535 Fargate App Security Group Fargate App Security Group - Controllers"},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#nodegroup-general-security-group","title":"Nodegroup General Security Group","text":""},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#inbound_2","title":"Inbound","text":"Protocol Port Source Description ALL ALL Nodegroup General Security Group Nodegroup General Security Group (MySelf) - ALL TCP 1024 - 65535 Additional Cluster Security Group Additional Cluster Security Group - Controllers"},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#outbound_2","title":"Outbound","text":"Protocol Port Destination Description ALL ALL Nodegroup General Security Group Nodegroup General Security Group (MySelf) - ALL TCP 443 0.0.0.0/0 Images &amp; AWS APIs - HTTPS TCP 80 0.0.0.0/0 Images &amp; AWS APIs - HTTP"},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#nodegroup-add-on-security-group","title":"Nodegroup Add-on Security Group","text":""},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#inbound_3","title":"Inbound","text":"Protocol Port Source Description TCP 53 Fargate App Security Group Fargate App Security Group - CoreDNS UDP 53 Fargate App Security Group Fargate App Security Group - CoreDNS"},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#outbound_3","title":"Outbound","text":"Protocol Port Destination Description TCP 1024 - 65535 Fargate App Security Group Fargate App Security Group - Controllers"},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#nodegroup-app-security-group","title":"Nodegroup App Security Group","text":""},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#inbound_4","title":"Inbound","text":"Protocol Port Source Description TCP Service Port Elastic Load Balancer Security Group Elastic Load Balancer Security Group - Application Service"},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#outbound_4","title":"Outbound","text":"Protocol Port Destination Description TCP Database Port1 Database Security Group Database Security Group - Database TCP Cache Port2 Cache Security Group Cache Security Group - Cache"},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#fargate-app-security-group","title":"Fargate App Security Group","text":""},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#inbound_5","title":"Inbound","text":"Protocol Port Source Description ALL ALL Fargate App Security Group Fargate App Security Group (MySelf) - ALL TCP 1024 - 65535 Additional Cluster Security Group Additional Cluster Security Group - Controllers TCP 1024 - 65535 Nodegroup Add-on Security Group Nodegroup Add-on Security Group - Controllers TCP Service Port Elastic Load Balancer Security Group Elastic Load Balancer Security Group - Application Service"},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#outbound_5","title":"Outbound","text":"Protocol Port Destination Description ALL ALL Fargate App Security Group Fargate App Security Group (MySelf) - ALL TCP 53 Nodegroup Add-on Security Group Nodegroup Add-on Security Group - CoreDNS UDP 53 Nodegroup Add-on Security Group Nodegroup Add-on Security Group - CoreDNS TCP 80 0.0.0.0/0 Images &amp; AWS APIs - HTTP TCP 443 0.0.0.0/0 Images &amp; AWS APIs - HTTPS TCP Database Port1 Database Security Group Database Security Group - Database TCP Cache Port2 Cache Security Group Cache Security Group - Cache"},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#vpc-endpoint-security-group","title":"VPC Endpoint Security Group","text":""},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#inbound_6","title":"Inbound","text":"Protocol Port Source Description TCP 443 Nodegroup General Security Group Nodegroup General Security Group - AWS APIs TCP 443 Fargate App Security Group Fargate App Security Group AWS APIs TCP 443 Bastion Instance Security Group Bastion Instance Security Group - AWS APIs"},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#outbound_6","title":"Outbound","text":"Protocol Port Destination Description"},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#elastic-load-balancer-security-group","title":"Elastic Load Balancer Security Group","text":""},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#inbound_7","title":"Inbound","text":"Protocol Port Source Description TCP Listener Port 0.0.0.0/0 Fron Internet TCP Listener Port CloudFront MAnaged Prefix List From CloudFront Only"},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#outbound_7","title":"Outbound","text":"Protocol Port Destination Description TCP Service Port Nodegroup App Security Group Nodegroup App Security Group - Application Service TCP Service Port Fargate App Security Group Fargate App Security Group - Application Service"},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#database-security-group","title":"Database Security Group","text":""},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#inbound_8","title":"Inbound","text":"Protocol Port Source Description TCP Database Port1 Nodegroup App Security Group Nodegroup App Security Group - Database TCP Database Port Fargate App Security Group Fargate App Security Group - Database"},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#outbound_8","title":"Outbound","text":"Protocol Port Destination Description"},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#cache-security-group","title":"Cache Security Group","text":""},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#inbound_9","title":"Inbound","text":"Protocol Port Source Description TCP Cache Port2 Nodegroup App Security Group Nodegroup App Security Group - Cache TCP Cache Port Fargate App Security Group Fargate App Security Group - Cache"},{"location":"Containers/EKS/17-cluster-and-nodegroup-security-control/#outbound_9","title":"Outbound","text":"Protocol Port Destination Description <ol> <li> <p>MySQL, MariaDB, Aurora MySQL : <code>3306</code>  PostgreSQL : <code>5432</code>  Oracle : <code>1521</code>  SQL Server : <code>1433</code> \u21a9</p> </li> <li> <p>Redis : <code>6379</code>  Memcached : <code>11211</code> \u21a9</p> </li> </ol>"},{"location":"Containers/EKS/18-install-aws-nth/","title":"Install AWS Node Termination Handler (NTH)","text":""},{"location":"Containers/EKS/18-install-aws-nth/#setup-infrastructure","title":"Setup Infrastructure","text":""},{"location":"Containers/EKS/18-install-aws-nth/#create-an-sqs-queue-and-eventbridge-rules","title":"Create an SQS Queue and EventBridge Rules","text":"Linux Windows <pre><code>STACK_NAME=\"&lt;stack name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region code&gt;\"\n### SQS Configuration\nQueueName=\"\"            # [optional] The name of SQS queue.\nKmsKeyId=\"\"             # [optional] The KMS key id for SQS queue encryption.\n### EventBridge Configuration\nEventRulesBaseName=\"\"   # [optional] The base name of EvnetBridge event rules.\n### IAM Policy Configuration\nIamPolicyName=\"\"        # [REQUIRED] The name of service accounts\"s IAM policy.\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/nth-cfn.yaml\n\naws cloudformation deploy \\\n--template-file ./nth-cfn.yaml \\\n--stack-name $STACK_NAME \\\n--parameter-overrides \\\nProjectName=$PROJECT_NAME \\\nQueueName=$QueueName \\\nKmsKeyId=$KmsKeyId \\\nEventRulesBaseName=$EventRulesBaseName \\\nIamPolicyName=$IamPolicyName \\\n--tags project=$PROJECT_NAME \\\n--capabilities CAPABILITY_NAMED_IAM \\\n--disable-rollback \\\n--region $REGION\n</code></pre> <pre><code>$STACK_NAME=\"&lt;stack name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region code&gt;\"\n### SQS Configuration\n$QueueName=\"\"           # [optional] The name of SQS queue.\n$KmsKeyId=\"\"            # [optional] The KMS key id for SQS queue encryption.\n### EventBridge Configuration\n$EventRulesBaseName=\"\"  # [optional] The base name of EvnetBridge event rules.\n### IAM Policy Configuration\n$IamPolicyName=\"\"       # [REQUIRED] The name of service accounts\"s IAM policy.\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/nth-cfn.yaml\naws cloudformation deploy `\n--template-file ./nth-cfn.yaml `\n--stack-name $STACK_NAME `\n--parameter-overrides `\nProjectName=$PROJECT_NAME `\nQueueName=$QueueName `\nKmsKeyId=$KmsKeyId `\nEventRulesBaseName=$EventRulesBaseName `\nIamPolicyName=$IamPolicyName `\n--tags project=$PROJECT_NAME `\n--capabilities CAPABILITY_NAMED_IAM `\n--disable-rollback `\n--region $REGION\n</code></pre> <p>Note</p> <p>If you use CMK, you should add below policy.</p> KMS Key Policy<pre><code>{\n\"Sid\": \"Allow EventBridge to use the key\",\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"Service\": \"events.amazonaws.com\"\n},\n\"Action\": [\n\"kms:Decrypt\",\n\"kms:GenerateDataKey\"\n],\n\"Resource\": \"*\"\n}\n</code></pre>"},{"location":"Containers/EKS/18-install-aws-nth/#create-an-asg-termination-lifecycle-hook","title":"Create an ASG Termination Lifecycle Hook","text":"Linux Windows <pre><code>AUTO_SCALING_GROUP_NAME=\"&lt;ec2 auto scaling group name&gt;\"\nLIFECYCLE_HOOK_NAME=\"&lt;lifecycle hook name (ex. k8s-term-hook)&gt;\"\nREGION=\"&lt;region code&gt;\"\naws autoscaling put-lifecycle-hook \\\n--lifecycle-hook-name=$LIFECYCLE_HOOK_NAME \\\n--auto-scaling-group-name=$AUTO_SCALING_GROUP_NAME \\\n--lifecycle-transition=autoscaling:EC2_INSTANCE_TERMINATING \\\n--default-result=CONTINUE \\\n--heartbeat-timeout=300 \\\n--region $REGION\n</code></pre> <pre><code>$AUTO_SCALING_GROUP_NAME=\"&lt;ec2 auto scaling group name&gt;\"\n$LIFECYCLE_HOOK_NAME=\"&lt;lifecycle hook name (ex. k8s-term-hook)&gt;\"\n$REGION=\"&lt;region code&gt;\"\naws autoscaling put-lifecycle-hook `\n--lifecycle-hook-name=$LIFECYCLE_HOOK_NAME `\n--auto-scaling-group-name=$AUTO_SCALING_GROUP_NAME `\n--lifecycle-transition=autoscaling:EC2_INSTANCE_TERMINATING `\n--default-result=CONTINUE `\n--heartbeat-timeout=300 `\n--region $REGION\n</code></pre>"},{"location":"Containers/EKS/18-install-aws-nth/#tag-the-instances","title":"Tag the Instances","text":"Linux Windows <pre><code>AUTO_SCALING_GROUP_NAME=\"&lt;ec2 auto scaling group name&gt;\"\nREGION=\"&lt;region code&gt;\"\naws autoscaling create-or-update-tags \\\n--tags ResourceId=$AUTO_SCALING_GROUP_NAME,ResourceType=auto-scaling-group,Key=aws-node-termination-handler/managed,Value=,PropagateAtLaunch=true \\\n--region $REGION\nfor i in $(aws autoscaling describe-auto-scaling-groups \\\n--auto-scaling-group-name $AUTO_SCALING_GROUP_NAME \\\n--region $REGION \\\n--query \"AutoScalingGroups[0].Instances[*].InstanceId\" \\\n| jq -r \".[]\")\ndo\naws ec2 create-tags \\\n--resources $i \\\n--tags 'Key=\"aws-node-termination-handler/managed\",Value=' \\\n--region $REGION\ndone\n</code></pre> <pre><code>$AUTO_SCALING_GROUP_NAME=\"&lt;ec2 auto scaling group name&gt;\"\n$REGION=\"&lt;region code&gt;\"\naws autoscaling create-or-update-tags `\n--tags ResourceId=$AUTO_SCALING_GROUP_NAME,ResourceType=auto-scaling-group,Key=aws-node-termination-handler/managed,Value=,PropagateAtLaunch=true `\n--region $REGION\n$InstanceIds = aws autoscaling describe-auto-scaling-groups `\n--auto-scaling-group-name $AUTO_SCALING_GROUP_NAME `\n--region $REGION `\n--query \"AutoScalingGroups[0].Instances[*].InstanceId\" |\nConvertFrom-Json\nforeach ($InstanceId in $InstanceIds)\n{\naws ec2 create-tags `\n--resources $InstanceId `\n--tags 'Key=\"aws-node-termination-handler/managed\",Value=' `\n--region $REGION\n}\n</code></pre>"},{"location":"Containers/EKS/18-install-aws-nth/#install-aws-node-termination-handler-using-helm","title":"Install AWS Node Termination Handler using <code>helm</code>","text":""},{"location":"Containers/EKS/18-install-aws-nth/#create-serviceaccount-using-iam-role","title":"Create ServiceAccount using IAM Role","text":"Linux Windows <pre><code>CLUSTER_NAME=\"&lt;cluster name&gt;\"\nPOLICY_NAME=\"&lt;policy name&gt;\"\nROLE_NAME=\"&lt;role name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region code&gt;\"\nPOLICY_ARN=$(aws iam list-policies \\\n--query \"Policies[?PolicyName=='$POLICY_NAME'].Arn\" --output text)\neksctl create iamserviceaccount \\\n--cluster $CLUSTER_NAME \\\n--name aws-node-termination-handler \\\n--namespace kube-system \\\n--attach-policy-arn $POLICY_ARN \\\n--role-name $ROLE_NAME \\\n--tags project=$PROJECT_NAME \\\n--region $REGION \\\n--approve\n</code></pre> <pre><code>$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$POLICY_NAME=\"&lt;policy name&gt;\"\n$ROLE_NAME=\"&lt;role name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region code&gt;\"\n$POLICY_ARN = aws iam list-policies `\n--query \"Policies[?PolicyName=='$POLICY_NAME'].Arn\" --output text\neksctl create iamserviceaccount `\n--cluster $CLUSTER_NAME `\n--name aws-node-termination-handler `\n--namespace kube-system `\n--attach-policy-arn $POLICY_ARN `\n--role-name $ROLE_NAME `\n--tags project=$PROJECT_NAME `\n--region $REGION `\n--approve\n</code></pre> <p>Note</p> <p>If you use CMK, you should add below policy.</p> KMS Key Policy<pre><code>{\n\"Sid\": \"AllowConsumersToReceiveFromTheQueue - NTH\",\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"AWS\": [\n\"&lt;NTH SERVICE ACCOUNT ROLE ARN&gt;\"\n]\n},\n\"Action\": [\n\"kms:Decrypt\"\n],\n\"Resource\": \"*\"\n}\n</code></pre> <p>Github</p>"},{"location":"Containers/EKS/18-install-aws-nth/#deploy-using-helm","title":"Deploy using <code>helm</code>","text":"Linux Windows <pre><code>STACK_NAME=\"&lt;stack name&gt;\"   # NTH infra stack name.\nREGION=\"&lt;region code&gt;\"\nQUEUE_URL=$(aws cloudformation describe-stacks \\\n--stack-name $STACK_NAME \\\n--query \"Stacks[0].Outputs[?OutputKey=='QueueURL'].OutputValue\" \\\n--region $REGION \\\n--output text)\nhelm repo add eks https://aws.github.io/eks-charts\n\nhelm install aws-node-termination-handler eks/aws-node-termination-handler \\\n--namespace kube-system \\\n--set serviceAccount.create=false \\\n--set serviceAccount.name=aws-node-termination-handler \\\n--set enableSqsTerminationDraining=true \\\n--set queueURL=$QUEUE_URL \\\n--set awsRegion=$REGION\n</code></pre> <pre><code>$STACK_NAME=\"&lt;stack name&gt;\"   # NTH infra stack name.\n$REGION=\"&lt;region code&gt;\"\n$QUEUE_URL = aws cloudformation describe-stacks `\n--stack-name $STACK_NAME `\n--query \"Stacks[0].Outputs[?OutputKey=='QueueURL'].OutputValue\" `\n--region $REGION `\n--output text\nhelm repo add eks https://aws.github.io/eks-charts\nhelm install aws-node-termination-handler eks/aws-node-termination-handler `\n--namespace kube-system `\n--set serviceAccount.create=false `\n--set serviceAccount.name=aws-node-termination-handler `\n--set enableSqsTerminationDraining=true `\n--set queueURL=$QUEUE_URL `\n--set awsRegion=$REGION\n</code></pre> <p>Helm Chart</p>"},{"location":"Containers/EKS/19-install-descheduler/","title":"Install Descheduler","text":""},{"location":"Containers/EKS/19-install-descheduler/#using-helm","title":"Using <code>helm</code>","text":"<pre><code>helm repo add descheduler https://kubernetes-sigs.github.io/descheduler/\nhelm install descheduler --namespace kube-system descheduler/descheduler\n</code></pre>"},{"location":"Containers/EKS/19-install-descheduler/#default-configuration","title":"Default Configuration","text":"<pre><code>apiVersion: v1\ndata:\npolicy.yaml: |\napiVersion: \"descheduler/v1alpha1\"\nkind: \"DeschedulerPolicy\"\nstrategies:\nLowNodeUtilization:\nenabled: true\nparams:\nnodeResourceUtilizationThresholds:\ntargetThresholds:\ncpu: 50\nmemory: 50\npods: 50\nthresholds:\ncpu: 20\nmemory: 20\npods: 20\nRemoveDuplicates:\nenabled: true\nRemovePodsHavingTooManyRestarts:\nenabled: true\nparams:\npodsHavingTooManyRestarts:\nincludingInitContainers: true\npodRestartThreshold: 100\nRemovePodsViolatingInterPodAntiAffinity:\nenabled: true\nRemovePodsViolatingNodeAffinity:\nenabled: true\nparams:\nnodeAffinityType:\n- requiredDuringSchedulingIgnoredDuringExecution\nRemovePodsViolatingNodeTaints:\nenabled: true\nRemovePodsViolatingTopologySpreadConstraint:\nenabled: true\nparams:\nincludeSoftConstraints: false\nkind: ConfigMap\nmetadata:\nannotations:\nmeta.helm.sh/release-name: descheduler\nmeta.helm.sh/release-namespace: kube-system\ncreationTimestamp: \"2023-02-10T00:27:07Z\"\nlabels:\napp.kubernetes.io/instance: descheduler\napp.kubernetes.io/managed-by: Helm\napp.kubernetes.io/name: descheduler\napp.kubernetes.io/version: 0.26.0\nhelm.sh/chart: descheduler-0.26.0\nname: descheduler\nnamespace: kube-system\nresourceVersion: \"157730\"\nuid: 4151cd1e-5cb1-493c-966d-68228d1d0a75\n</code></pre>"},{"location":"Containers/EKS/20-using-argocd/","title":"Using ArgoCD","text":""},{"location":"Containers/EKS/20-using-argocd/#install-argocd-using-helm","title":"Install ArgoCD Using <code>helm</code>","text":"Linux Windows <pre><code>curl -LO https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/argocd-values.yaml\n\nhelm repo add argo https://argoproj.github.io/argo-helm\nhelm install argocd argo/argo-cd \\\n--create-namespace \\\n--namespace argocd \\\n--values ./argocd-values.yaml\n</code></pre> <pre><code>curl.exe -LO https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/argocd-values.yaml\nhelm repo add argo https://argoproj.github.io/argo-helm\nhelm install argocd argo/argo-cd `\n--create-namespace `\n--namespace argocd `\n--values ./argocd-values.yaml\n</code></pre> argocd-values.yaml <pre><code>configs:\ncm:\naccounts.image-updater: apiKey\ntimeout.reconciliation: 60s\nrbac:\npolicy.csv: |\np, role:image-updater, applications, get, */*, allow\np, role:image-updater, applications, update, */*, allow\ng, image-updater, role:image-updater\npolicy.default: role.readonly\nredis-ha:\nenabled: false\ncontroller:\nreplicas: 1\nserver:\nautoscaling:\nenabled: false\nminReplicas: 1\nrepoServer:\nautoscaling:\nenabled: false\nminReplicas: 1\napplicationSet:\nreplicaCount: 1\ndex:\nenabled: false\nnotifications:\nenabled: false\n</code></pre> <p>Github Documentation</p>"},{"location":"Containers/EKS/20-using-argocd/#accese-argocd-dashboard-using-port-forward","title":"Accese ArgoCD Dashboard using <code>port-forward</code>","text":"<pre><code>kubectl port-forward service/argocd-server -n argocd 8080:443\n</code></pre>"},{"location":"Containers/EKS/20-using-argocd/#get-admin-password","title":"Get Admin Password","text":"Linux Windows <pre><code>kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath=\"{.data.password}\" | base64 -d\n</code></pre> <pre><code>$PASSWORD = kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath=\"{.data.password}\"\n[System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($PASSWORD))\n</code></pre>"},{"location":"Containers/EKS/20-using-argocd/#connect-to-argocd-server-using-cli","title":"Connect to ArgoCD Server using CLI","text":"<pre><code>argocd login --insecure 127.0.0.1:8080\n</code></pre> <p>You can access dashboard using this address(https://127.0.0.1:8080).</p> Tip <p>If you want to use load balancer to access argocd using CLI, you should use Network Load Balancer.</p> <p>You cannot use argocd cli if you use ALB ingress.</p>"},{"location":"Containers/EKS/20-using-argocd/#sync-application-using-argocd-api","title":"Sync application using ArgoCD API","text":"<pre><code>import requests\nclass BearerAuth(requests.auth.AuthBase):\ndef __init__(self, token):\nself.token = token\ndef __call__(self, r):\nr.headers[\"authorization\"] = \"Bearer \" + self.token\nreturn r\nresponse = requests.post(\n'http://&lt;argocd-url&gt;/api/v1/session',\njson={\n'username': '&lt;username&gt;',\n'password': '&lt;password&gt;'\n}\n)\ntoken = response.json()['token']\nrequests.post('http://&lt;argocd-url&gt;/api/v1/applications/&lt;application name&gt;/sync', auth=BearerAuth(token))\n</code></pre>"},{"location":"Containers/EKS/20-using-argocd/#add-other-kubernetes-cluster","title":"Add other Kubernetes cluster","text":"Linux Windows <pre><code>ARGOCD_CONTEXT_NAME=\"&lt;argocd context name&gt;\"\nTARGET_CONTEXT_NAME=\"&lt;target context name&gt;\"\nkubectl apply \\\n-f https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/argocd-manager.yaml \\\n--context $TARGET_CONTEXT_NAME\nARN=$(kubectl config view -o jsonpath=\"{$.contexts[?(@.name==\\\"$TARGET_CONTEXT_NAME\\\")].context.cluster}\")\nREGION=$(echo $ARN | cut -d ':' -f 4)\nCLUSTER_NAME=$(echo $ARN | cut -d '/' -f 2)\nCLUSTER_INFO=$(aws eks describe-cluster \\\n--name $CLUSTER_NAME \\\n--region $REGION)\nCLUSTER_URL=$(echo $CLUSTER_INFO | jq -r '.cluster.endpoint')\nCLUSTER_CA=$(echo $CLUSTER_INFO | jq -r '.cluster.certificateAuthority.data')\nTOKEN=$(kubectl get secret argocd-manager \\\n-n kube-system \\\n-o jsonpath=\"{.data.token}\" \\\n--context $TARGET_CONTEXT_NAME \\\n| base64 -d)\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/cluster-secret.yaml\nsed -i \"s|CLUSTER_NAME|$CLUSTER_NAME|g\" cluster-secret.yaml\nsed -i \"s|TOKEN|$TOKEN|\" cluster-secret.yaml\nsed -i \"s|CA_DATA|$CLUSTER_CA|\" cluster-secret.yaml\nsed -i \"s|SERVER_URL|$CLUSTER_URL|\" cluster-secret.yaml\n\nkubectl apply -f ./cluster-secret.yaml --context $ARGOCD_CONTEXT_NAME\n</code></pre> <pre><code>$ARGOCD_CONTEXT_NAME=\"&lt;argocd context name&gt;\"\n$TARGET_CONTEXT_NAME=\"&lt;target context name&gt;\"\nkubectl apply `\n-f https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/argocd-manager.yaml `\n--context $TARGET_CONTEXT_NAME\n$ARN = kubectl config view -o jsonpath=\"{$.contexts[?(@.name=='$TARGET_CONTEXT_NAME')].context.cluster}\"\n$REGION = $ARN.Split(':')[3]\n$CLUSTER_NAME = $ARN.Split('/')[1]\n$CLUSTER_INFO = aws eks describe-cluster `\n--name $CLUSTER_NAME `\n--region $REGION | ConvertFrom-Json\n$CLUSTER_URL = $CLUSTER_INFO.cluster.endpoint\n$CLUSTER_CA = $CLUSTER_INFO.cluster.certificateAuthority.data\n$TOKEN = kubectl get secret argocd-manager `\n-n kube-system `\n-o jsonpath=\"{.data.token}\" `\n--context $TARGET_CONTEXT_NAME | %{[System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($_))}\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/cluster-secret.yaml\n$yaml = Get-Content -Path ./cluster-secret.yaml\n$yaml = $yaml -replace 'CLUSTER_NAME', $CLUSTER_NAME\n$yaml = $yaml -replace 'SA_TOKEN', $TOKEN\n$yaml = $yaml -replace 'CA_DATA', $CLUSTER_CA\n$yaml = $yaml -replace 'SERVER_URL', $CLUSTER_URL\n$yaml | Out-File -Encoding utf8 ./cluster-secret.yaml\nkubectl apply -f ./cluster-secret.yaml --context $ARGOCD_CONTEXT_NAME\n</code></pre> argocd-manager.yaml <pre><code>apiVersion: v1\nkind: ServiceAccount\nmetadata:\nname: argocd-manager\nnamespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\nname: argocd-manager-role\nrules:\n- apiGroups:\n- '*'\nresources:\n- '*'\nverbs:\n- '*'\n- nonResourceURLs:\n- '*'\nverbs:\n- '*'\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\nname: argocd-manager-role-binding\nroleRef:\napiGroup: rbac.authorization.k8s.io\nkind: ClusterRole\nname: argocd-manager-role\nsubjects:\n- kind: ServiceAccount\nname: argocd-manager\nnamespace: kube-system\n---\napiVersion: v1\nkind: Secret\ntype: kubernetes.io/service-account-token\nmetadata:\nname: argocd-manager\nnamespace: kube-system\nannotations:\nkubernetes.io/service-account.name: argocd-manager\n</code></pre> cluster-secret.yaml <pre><code>apiVersion: v1\nkind: Secret\nmetadata:\nname: CLUSTER_NAME\nnamespace: argocd\nlabels:\nargocd.argoproj.io/secret-type: cluster\ntype: Opaque\nstringData:\nconfig: |\n{\n\"bearerToken\":\"TOKEN\",\n\"tlsClientConfig\":{\n\"insecure\":false,\n\"caData\":\"CA_DATA\"\n}\n}\nname: CLUSTER_NAME\nserver: SERVER_URL\n</code></pre>"},{"location":"Containers/EKS/20-using-argocd/#install-argocd-image-updater-using-helm","title":"Install ArgoCD Image Updater using <code>helm</code>","text":""},{"location":"Containers/EKS/20-using-argocd/#create-serviceaccount-using-eksctl","title":"Create ServiceAccount using <code>eksctl</code>","text":"Linux Windows <pre><code>CLUSTER_NAME=\"&lt;cluster name&gt;\"\nROLE_NAME=\"&lt;role name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region code&gt;\"\neksctl create iamserviceaccount \\\n--cluster $CLUSTER_NAME \\\n--name argocd-image-updater \\\n--namespace argocd \\\n--attach-policy-arn arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly \\\n--role-name $ROLE_NAME \\\n--tags project=$PROJECT_NAME \\\n--region $REGION \\\n--approve\n</code></pre> <pre><code>$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$ROLE_NAME=\"&lt;role name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region code&gt;\"\neksctl create iamserviceaccount `\n--cluster $CLUSTER_NAME `\n--name argocd-image-updater `\n--namespace argocd `\n--attach-policy-arn arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly `\n--role-name $ROLE_NAME `\n--tags project=$PROJECT_NAME `\n--region $REGION `\n--approve\n</code></pre>"},{"location":"Containers/EKS/20-using-argocd/#get-argocd-api-key","title":"Get ArgoCD API Key","text":"<pre><code>argocd account generate-token --account image-updater --id image-updater\n</code></pre>"},{"location":"Containers/EKS/20-using-argocd/#install-argocd-image-updater","title":"Install ArgoCD Image Updater","text":"Linux Windows <pre><code>TOKEN=\"&lt;argocd token&gt;\"\nREGION=\"&lt;region code&gt;\"\nACCOUNT_ID=$(aws sts get-caller-identity --query \"Account\" --output text)\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/argocd-image-updater-values.yaml\n\nsed -i \"s|ARGOCD_TOKEN|$TOKEN|g\" argocd-image-updater-values.yaml\nsed -i \"s|ACCOUNT_ID|$ACCOUNT_ID|g\" argocd-image-updater-values.yaml\nsed -i \"s|REGION_CODE|$REGION|g\" argocd-image-updater-values.yaml\n\nhelm repo add argo https://argoproj.github.io/argo-helm\nhelm install argocd-image-updater argo/argocd-image-updater \\\n--namespace argocd \\\n--values ./argocd-image-updater-values.yaml\n</code></pre> <pre><code>$TOKEN=\"&lt;argocd token&gt;\"\n$REGION=\"&lt;region code&gt;\"\n$ACCOUNT_ID = aws sts get-caller-identity --query \"Account\" --output text\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/aws-resources-example/main/scripts/eks/argocd-image-updater-values.yaml\n(Get-Content -Path argocd-image-updater-values.yaml -Raw) -replace 'ARGOCD_TOKEN', $TOKEN `\n-replace 'ACCOUNT_ID', $ACCOUNT_ID `\n-replace 'REGION_CODE', $REGION | Set-Content -Path argocd-image-updater-values.yaml -Encoding utf8\nhelm repo add argo https://argoproj.github.io/argo-helm\nhelm install argocd-image-updater argo/argocd-image-updater `\n--namespace argocd `\n--values ./argocd-image-updater-values.yaml\n</code></pre> argocd-image-updater-values.yaml <pre><code>config:\nargocd:\ngrpcWeb: true\nserverAddress: \"http://argocd.argocd-server\"\ninsecure: true\nplaintext: true\ntoken: ARGOCD_TOKEN\nlogLevel: debug\nregistries:\n- name: ECR\napi_url: \"https://ACCOUNT_ID.dkr.ecr.REGION_CODE.amazonaws.com\"\nprefix: \"ACCOUNT_ID.dkr.ecr.REGION_CODE.amazonaws.com\"\nping: true\ninsecure: false\ncredentials: \"ext:/scripts/auth1.sh\"\ncredsexpire: 10h\nauthScripts:\nenabled: true\nscripts:\nauth1.sh: |\n#!/bin/sh\naws ecr --region REGION_CODE get-authorization-token --output text --query 'authorizationData[].authorizationToken' | base64 -d\nserviceAccount:\ncreate: false\nname: argocd-image-updater\n</code></pre> <p>Github Documentation</p>"},{"location":"Containers/EKS/20-using-argocd/#install-argocd-rollouts-using-helm","title":"Install ArgoCD Rollouts using <code>helm</code>","text":"Linux Windows <pre><code>helm repo add argo https://argoproj.github.io/argo-helm\nhelm install argo-rollouts argo/argo-rollouts \\\n--namespace argocd \\\n--set dashboard.enabled=true\n</code></pre> <pre><code>helm repo add argo https://argoproj.github.io/argo-helm\nhelm install argo-rollouts argo/argo-rollouts `\n--namespace argocd `\n--set dashboard.enabled=true\n</code></pre> <p>Github Documentation</p>"},{"location":"Containers/EKS/20-using-argocd/#access-argo-rollouts-dashboard-using-port-forward","title":"Access Argo Rollouts Dashboard using <code>port-forward</code>","text":"<pre><code>kubectl port-forward service/argo-rollouts-dashboard -n argocd 31000:3100\n</code></pre> <p>You can access dashboard using this address(http://127.0.0.1:31000).</p>"},{"location":"Containers/EKS/20-using-argocd/#install-kubectl-plugin","title":"Install <code>kubectl</code> Plugin","text":"Linux (x86_64)Linux (ARM64)Windows (Executable) <pre><code>curl -LO https://github.com/argoproj/argo-rollouts/releases/download/v1.5.1/kubectl-argo-rollouts-linux-amd64\nsudo install -o root -g root -m 0755 kubectl-argo-rollouts-linux-amd64 /usr/local/bin/kubectl-argo-rollouts\nsudo install -o root -g root -m 0755 kubectl-argo-rollouts-linux-amd64 /usr/bin/kubectl-argo-rollouts\nrm kubectl-argo-rollouts-linux-amd64\nkubectl argo rollouts version\n</code></pre> <pre><code>curl -LO https://github.com/argoproj/argo-rollouts/releases/download/v1.5.1/kubectl-argo-rollouts-linux-arm64\nsudo install -o root -g root -m 0755 kubectl-argo-rollouts-linux-arm64 /usr/local/bin/kubectl-argo-rollouts\nsudo install -o root -g root -m 0755 kubectl-argo-rollouts-linux-arm64 /usr/bin/kubectl-argo-rollouts\nrm kubectl-argo-rollouts-linux-arm64\nkubectl argo rollouts version\n</code></pre> <pre><code>curl.exe -LO https://github.com/argoproj/argo-rollouts/releases/download/v1.5.1/kubectl-argo-rollouts-windows-amd64\nmv kubectl-argo-rollouts-windows-amd64 kubectl-argo-rollouts.exe\nkubectl argo rollouts version\n</code></pre>"},{"location":"Containers/EKS/21-using-app-mesh/","title":"Using App Mesh","text":""},{"location":"Containers/EKS/21-using-app-mesh/#install-app-mesh","title":"Install App Mesh","text":""},{"location":"Containers/EKS/21-using-app-mesh/#check-installation-instructions","title":"Check Installation Instructions","text":"<pre><code>curl -L -o pre_upgrade_check.sh https://raw.githubusercontent.com/aws/eks-charts/master/stable/appmesh-controller/upgrade/pre_upgrade_check.sh\nsh ./pre_upgrade_check.sh\n</code></pre>"},{"location":"Containers/EKS/21-using-app-mesh/#install-the-crd","title":"Install the CRD","text":"<pre><code>kubectl apply -k \"https://github.com/aws/eks-charts/stable/appmesh-controller/crds?ref=master\"\n</code></pre>"},{"location":"Containers/EKS/21-using-app-mesh/#create-the-namespace","title":"Create the Namespace","text":"<pre><code>kubectl create ns appmesh-system\n</code></pre>"},{"location":"Containers/EKS/21-using-app-mesh/#create-the-service-account","title":"Create the Service Account","text":"Linux Windows <pre><code>CLUSTER_NAME=\"&lt;cluster name&gt;\"\nROLE_NAME=\"&lt;role name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region code&gt;\"\neksctl create iamserviceaccount \\\n--cluster $CLUSTER_NAME \\\n--namespace appmesh-system \\\n--name appmesh-controller \\\n--attach-policy-arn arn:aws:iam::aws:policy/AWSCloudMapFullAccess,arn:aws:iam::aws:policy/AWSAppMeshFullAccess \\\n--role-name $ROLE_NAME \\\n--tags project=$PROJECT_NAME \\\n--region $REGION \\\n--override-existing-serviceaccounts \\\n--approve\n</code></pre> <pre><code>$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$ROLE_NAME=\"&lt;role name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region code&gt;\"\neksctl create iamserviceaccount `\n--cluster $CLUSTER_NAME `\n--namespace appmesh-system `\n--name appmesh-controller `\n--attach-policy-arn arn:aws:iam::aws:policy/AWSCloudMapFullAccess,arn:aws:iam::aws:policy/AWSAppMeshFullAccess `\n--role-name $ROLE_NAME `\n--tags project=$PROJECT_NAME `\n--region $REGION `\n--override-existing-serviceaccounts `\n--approve\n</code></pre>"},{"location":"Containers/EKS/21-using-app-mesh/#deploy-using-helm","title":"Deploy using <code>helm</code>","text":"Linux Windows x86_64ARM64 <pre><code>REGION=\"&lt;region code&gt;\"\nhelm repo add eks https://aws.github.io/eks-charts\nhelm upgrade -i appmesh-controller eks/appmesh-controller \\\n--namespace appmesh-system \\\n--set region=$REGION \\\n--set serviceAccount.create=false \\\n--set serviceAccount.name=appmesh-controller\n</code></pre> <pre><code>REGION=\"&lt;region code&gt;\"\nhelm repo add eks https://aws.github.io/eks-charts\nhelm upgrade -i appmesh-controller eks/appmesh-controller \\\n--namespace appmesh-system \\\n--set region=$REGION \\\n--set serviceAccount.create=false \\\n--set serviceAccount.name=appmesh-controller \\\n--set image.tag=v1.11.0-linux_arm64\n</code></pre> <p>Note</p> <p>Do you want to tracing, use these options.</p> <pre><code>--set tracing.enabled=true \\\n--set tracing.provider=x-ray\n</code></pre> x86_64ARM64 <pre><code>$REGION=\"&lt;region code&gt;\"\nhelm repo add eks https://aws.github.io/eks-charts\nhelm upgrade -i appmesh-controller eks/appmesh-controller `\n--namespace appmesh-system `\n--set region=$REGION `\n--set serviceAccount.create=false `\n--set serviceAccount.name=appmesh-controller\n</code></pre> <pre><code>$REGION=\"&lt;region code&gt;\"\nhelm repo add eks https://aws.github.io/eks-charts\nhelm upgrade -i appmesh-controller eks/appmesh-controller `\n--namespace appmesh-system `\n--set region=$REGION `\n--set serviceAccount.create=false `\n--set serviceAccount.name=appmesh-controller `\n--set image.tag=v1.11.0-linux_arm64\n</code></pre> <p>Note</p> <p>Do you want to tracing, use these options.</p> <pre><code>--set tracing.enabled=true `\n--set tracing.provider=x-ray\n</code></pre> <p>AWS Documentation</p>"},{"location":"Containers/EKS/21-using-app-mesh/#deploy-app-mesh-resources","title":"Deploy App Mesh Resources","text":""},{"location":"Containers/EKS/21-using-app-mesh/#app-mesh-namespace","title":"App Mesh Namespace","text":"<p>Namespace manifest resource</p> namespace.yaml<pre><code>apiVersion: v1\nkind: Namespace\nmetadata:\nname: my-apps\nlabels:\nmesh: my-mesh\nappmesh.k8s.aws/sidecarInjectorWebhook: enabled\n</code></pre> <p>Deploy namespace resource</p> <pre><code>kubectl apply -f namespace.yaml\n</code></pre>"},{"location":"Containers/EKS/21-using-app-mesh/#app-mesh-service-mesh","title":"App Mesh service mesh","text":"<p>Mesh manifest</p> mesh.yaml<pre><code>apiVersion: appmesh.k8s.aws/v1beta2\nkind: Mesh\nmetadata:\nname: my-mesh\nspec:\nnamespaceSelector:\nmatchLabels:\nmesh: my-mesh\n</code></pre> <p>Deploy mesh resource</p> <pre><code>kubectl apply -f mesh.yaml\n</code></pre> <p>Show kubernetes mesh resource</p> <pre><code>kubectl describe mesh my-mesh\n</code></pre> <p>Show service mesh</p> <pre><code>aws appmesh describe-mesh --mesh-name my-mesh --region region-code\n</code></pre>"},{"location":"Containers/EKS/21-using-app-mesh/#app-mesh-virtual-node","title":"App Mesh virtual node","text":"<p>Virtual node manifest</p> virtual-node.yaml<pre><code>apiVersion: appmesh.k8s.aws/v1beta2\nkind: VirtualNode\nmetadata:\nname: my-service-a\nnamespace: my-apps\nspec:\npodSelector:\nmatchLabels:\napp: my-app-1\nlisteners:\n- portMapping:\nport: 80\nprotocol: http\nserviceDiscovery:\ndns:\nhostname: my-service-a.my-apps.svc.cluster.local\n</code></pre> <p>See spec</p> <pre><code>aws appmesh create-virtual-node --generate-cli-skeleton yaml-input\n</code></pre> <p>Deploy virtual node resource</p> <pre><code>kubectl apply -f virtual-node.yaml\n</code></pre> <p>Show kubernetes virtual node resource</p> <pre><code>kubectl describe virtualnode my-service-a -n my-apps\n</code></pre> <p>Show virtual node</p> <pre><code>aws appmesh describe-virtual-node --mesh-name my-mesh --virtual-node-name my-service-a_my-apps\n</code></pre>"},{"location":"Containers/EKS/21-using-app-mesh/#app-mesh-virtual-router","title":"App Mesh virtual router","text":"<p>Virtual router manifest</p> virtual-router.yaml<pre><code>apiVersion: appmesh.k8s.aws/v1beta2\nkind: VirtualRouter\nmetadata:\nnamespace: my-apps\nname: my-service-a-virtual-router\nspec:\nlisteners:\n- portMapping:\nport: 80\nprotocol: http\nroutes:\n- name: my-service-a-route\nhttpRoute:\nmatch:\nprefix: /\naction:\nweightedTargets:\n- virtualNodeRef:\nname: my-service-a\nweight: 1\n</code></pre> <p>See virtual router spec</p> <pre><code>aws appmesh create-virtual-router --generate-cli-skeleton yaml-input\n</code></pre> <p>See router spec</p> <pre><code>aws appmesh create-route --generate-cli-skeleton yaml-input\n</code></pre> <p>Deploy virtual router resource</p> <pre><code>kubectl apply -f virtual-router.yaml\n</code></pre> <p>Show kubernetes virtual router resource</p> <pre><code>kubectl describe virtualrouter my-service-a-virtual-router -n my-apps\n</code></pre> <p>Show virtual router</p> <pre><code>aws appmesh describe-virtual-router --virtual-router-name my-service-a-virtual-router_my-apps --mesh-name my-mesh\n</code></pre> <p>Show router</p> <pre><code>aws appmesh describe-route \\\n--route-name my-service-a-route \\\n--virtual-router-name my-service-a-virtual-router_my-apps \\\n--mesh-name my-mesh\n</code></pre>"},{"location":"Containers/EKS/21-using-app-mesh/#app-mesh-virtual-service","title":"App Mesh virtual service","text":"<p>Virtual router manifest</p> virtual-service.yaml<pre><code>apiVersion: appmesh.k8s.aws/v1beta2\nkind: VirtualService\nmetadata:\nname: my-service-a\nnamespace: my-apps\nspec:\nawsName: my-service-a.my-apps.svc.cluster.local\nprovider:\nvirtualRouter:\nvirtualRouterRef:\nname: my-service-a-virtual-router\n</code></pre> <p>See virtual service spec</p> <pre><code>aws appmesh create-virtual-service --generate-cli-skeleton yaml-input\n</code></pre> <p>Depyloy virtual service resource</p> <pre><code>kubectl apply -f virtual-service.yaml\n</code></pre> <p>Show kubernetes virtual service resource</p> <pre><code>kubectl describe virtualservice my-service-a -n my-apps\n</code></pre>"},{"location":"Containers/EKS/22-using-fsx-for-lustre/","title":"Using FSx for Lustre","text":""},{"location":"Containers/EKS/22-using-fsx-for-lustre/#create-service-account-using-iam-role","title":"Create service account using IAM role","text":"Linux Windows <pre><code>CLUSTER_NAME=\"&lt;cluster name&gt;\"\nROLE_NAME=\"&lt;role name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region code&gt;\"\neksctl create iamserviceaccount \\\n--cluster $CLUSTER_NAME \\\n--namespace=kube-system \\\n--name=fsx-csi-controller-sa \\\n--attach-policy-arn=arn:aws:iam::aws:policy/AmazonFSxFullAccess \\\n--role-name $ROLE_NAME \\\n--tags project=$PROJECT_NAME \\\n--region $REGION \\\n--override-existing-serviceaccounts \\\n--approve\n</code></pre> <pre><code>$CLUSTER_NAME=\"&lt;cluster name&gt;\"\n$ROLE_NAME=\"&lt;role name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region code&gt;\"\neksctl create iamserviceaccount `\n--cluster $CLUSTER_NAME `\n--namespace=kube-system `\n--name=fsx-csi-controller-sa `\n--attach-policy-arn=arn:aws:iam::aws:policy/AmazonFSxFullAccess `\n--role-name $ROLE_NAME `\n--tags project=$PROJECT_NAME `\n--region $REGION `\n--override-existing-serviceaccounts `\n--approve\n</code></pre>"},{"location":"Containers/EKS/22-using-fsx-for-lustre/#install-fsx-driver","title":"Install FSx Driver","text":"Linux Windows <pre><code>helm repo add aws-fsx-csi-driver https://kubernetes-sigs.github.io/aws-fsx-csi-driver/\nhelm repo update\nhelm install aws-fsx-csi-driver aws-fsx-csi-driver/aws-fsx-csi-driver \\\n--namespace kube-system \\\n--set controller.serviceAccount.create=false \\\n--set node.tolerateAllTaints=true\n</code></pre> <pre><code>helm repo add aws-fsx-csi-driver https://kubernetes-sigs.github.io/aws-fsx-csi-driver/\nhelm repo update\nhelm install aws-fsx-csi-driver aws-fsx-csi-driver/aws-fsx-csi-driver `\n--namespace kube-system `\n--set controller.serviceAccount.create=false `\n--set node.tolerateAllTaints=true\n</code></pre>"},{"location":"Containers/EKS/22-using-fsx-for-lustre/#use-fsx-for-lustre-file-system","title":"Use FSx for Lustre File System","text":""},{"location":"Containers/EKS/22-using-fsx-for-lustre/#static-provisioning","title":"Static Provisioning","text":"<p>Note</p> <p>You can see examples in HERE.</p> persistent-volume.yaml<pre><code>apiVersion: v1\nkind: PersistentVolume\nmetadata:\nname: fsx-pv\nspec:\ncapacity:\nstorage: 1200Gi\nvolumeMode: Filesystem\naccessModes:\n- ReadWriteMany\nmountOptions:\n- flock\npersistentVolumeReclaimPolicy: Retain\ncsi:\ndriver: fsx.csi.aws.com\nvolumeHandle: fs-XXXXXXXXXXXXXXXXX\nvolumeAttributes:\ndnsname: fs-XXXXXXXXXXXXXXXXX.fsx.us-east-1.amazonaws.com\nmountname: fsx\n</code></pre> <p>Note</p> <p>Replace <code>volumeHandle</code> with <code>FileSystemId</code>, <code>dnsname</code> with <code>DNSName</code> and <code>mountname</code> with <code>MountName</code>. You can get both <code>FileSystemId</code>, <code>DNSName</code> and <code>MountName</code> using AWS CLI:</p> <pre><code>aws fsx describe-file-systems\n</code></pre> persistent-volume-claim.yaml<pre><code>apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\nname: fsx-claim\nnamespace: default\nspec:\naccessModes:\n- ReadWriteMany\nstorageClassName: \"\"\nresources:\nrequests:\nstorage: 1200Gi\nvolumeName: fsx-pv\n</code></pre> pod.yaml<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\nname: fsx-app\nnamespace: default\nspec:\ncontainers:\n- name: app\nimage: centos\ncommand: [\"/bin/sh\"]\nargs: [\"-c\", \"while true; do echo $(date -u) &gt;&gt; /data/out.txt; sleep 5; done\"]\nvolumeMounts:\n- name: persistent-storage\nmountPath: /data\nvolumes:\n- name: persistent-storage\npersistentVolumeClaim:\nclaimName: fsx-claim\n</code></pre>"},{"location":"Containers/EKS/22-using-fsx-for-lustre/#dynamic-provisioning","title":"Dynamic Provisioning","text":"<p>Note</p> <p>You can see examples in HERE.</p> storage-class.yaml<pre><code>kind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\nname: fsx-sc\nprovisioner: fsx.csi.aws.com\nparameters:\nsubnetId: subnet-0eabfaa81fb22bcaf\nsecurityGroupIds: sg-068000ccf82dfba88\ndeploymentType: PERSISTENT_1\nautomaticBackupRetentionDays: \"1\"\ndailyAutomaticBackupStartTime: \"00:00\"\ncopyTagsToBackups: \"true\"\nperUnitStorageThroughput: \"200\"\ndataCompressionType: \"NONE\"\nweeklyMaintenanceStartTime: \"7:09:00\"\nfileSystemTypeVersion: \"2.12\"\nextraTags: \"Tag1=Value1,Tag2=Value2\"\nmountOptions:\n- flock\n</code></pre> <p>Note</p> <p>You should check StorageClass's parameters in HERE.</p> persistent-volume-claim.yaml<pre><code>apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\nname: fsx-claim\nnamespace: default\nspec:\naccessModes:\n- ReadWriteMany\nstorageClassName: fsx-sc\nresources:\nrequests:\nstorage: 1200Gi\n</code></pre> pod.yaml<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\nname: fsx-app\nnamespace: default\nspec:\ncontainers:\n- name: app\nimage: centos\ncommand: [\"/bin/sh\"]\nargs: [\"-c\", \"while true; do echo $(date -u) &gt;&gt; /data/out.txt; sleep 5; done\"]\nvolumeMounts:\n- name: persistent-storage\nmountPath: /data\nvolumes:\n- name: persistent-storage\npersistentVolumeClaim:\nclaimName: fsx-claim\n</code></pre>"},{"location":"Containers/EKS/22-using-fsx-for-lustre/#dynamic-provisioning-with-data-repository","title":"Dynamic Provisioning with Data Repository","text":"<p>Note</p> <p>You can see examples in HERE.</p> storage-class.yaml<pre><code>kind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\nname: fsx-sc\nprovisioner: fsx.csi.aws.com\nparameters:\nsubnetId: subnet-0d7b5e117ad7b4961\nsecurityGroupIds: sg-05a37bfe01467059a\ns3ImportPath: s3://ml-training-data-000\ns3ExportPath: s3://ml-training-data-000/export\ndeploymentType: SCRATCH_2\nmountOptions:\n- flock\n</code></pre> <p>Note</p> <p>You should check StorageClass's parameters in HERE.</p> persistent-volume-claim.yaml<pre><code>apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\nname: fsx-claim\nspec:\naccessModes:\n- ReadWriteMany\nstorageClassName: fsx-sc\nresources:\nrequests:\nstorage: 1200Gi\n</code></pre> pod.yaml<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\nname: fsx-app\nspec:\ncontainers:\n- name: app\nimage: amazonlinux:2\ncommand: [\"/bin/sh\"]\nsecurityContext:\nprivileged: true\nargs: [\"-c\", \"while true; do echo $(date -u) &gt;&gt; /data/out.txt; sleep 5; done\"]\nlifecycle:\npostStart:\nexec:\ncommand: [\"amazon-linux-extras\", \"install\", \"lustre2.10\", \"-y\"]\nvolumeMounts:\n- name: persistent-storage\nmountPath: /data\nvolumes:\n- name: persistent-storage\npersistentVolumeClaim:\nclaimName: fsx-claim\n</code></pre>"},{"location":"Containers/Kubernetes/01-pod/","title":"Pod","text":"pod.yaml<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\nname: nginx\nnamespace: nginx\nlabels:\napp: nginx\nspec:\nserviceAccountName: nginx\ncontainers:\n- name: nginx\nimage: nginx:1.14.2\nports:\n- containerPort: 80\ncommand:  # override Dockerfile `ENTRYPOINT`\n- \"\"\n- \"\"\nargs:     # override Dockerfile `CMD`\n- \"\"\n- \"\"\nreadinessProbe:\nhttpGet:\npath: /health\nport: 80\ninitialDelaySeconds: 15\nlivenessProbe:\nhttpGet:\npath: /health\nport: 80\ninitialDelaySeconds: 30\nlifecycle:\npreStop:\nexec:\ncommand: [\"/bin/sh\", \"-c\", \"sleep 60\"]\n# volumeMounts:\n#   - name: volume-1\n#     mountPath: \"/mnt/volume-1\"\n#     readOnly: true\nterminationGracePeriodSeconds: 60\n# volumes:\n#   - name: volume-1\n#     emptyDir: {}\n# tolerations:\n#   - key: \"key1\"         # taint key\n#     value: \"value1\"     # taint value\n#     operator: \"Equal\"\n#     effect: \"NoSchedule\"\n# nodeSelector:\n#   key: value            # node label key and value\n# topologySpreadConstraints:\n#   - maxSkew: 1\n#     whenUnsatisfiable: DoNotSchedule\n#     topologyKey: topology.kubernetes.io/zone\n#     labelSelector:\n#       matchLabels:\n#         app: nginx\n</code></pre> <p>Kubernetes Documentation</p>"},{"location":"Containers/Kubernetes/02-replica-set/","title":"ReplicaSet","text":"replicaset.yaml<pre><code>apiVersion: apps/v1\nkind: ReplicaSet\nmetadata:\nname: nginx\nnamespace: nginx\nlabels:\napp: nginx\nspec:\nreplicas: 3\nselector:\nmatchLabels:\napp: nginx\ntemplate:\nmetadata:\nlabels:\napp: nginx\nspec:\ncontainers:\n- name: nginx\nimage: nginx:1.14.2\nports:\n- containerPort: 80\n</code></pre> <p>Kubernetes Documentation</p>"},{"location":"Containers/Kubernetes/03-deployment/","title":"Deployment","text":"deployment.yaml<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\nname: nginx\nnamespace: nginx\nlabels:\napp: nginx\nspec:\n# do not include replicas in the manifests if you want replicas to be controlled by HPA\n# replicas: 2\nrevisionHistoryLimit: 10  # default value is 10\nselector:\nmatchLabels:\napp: nginx\ntemplate:\nmetadata:\nlabels:\napp: nginx\nspec:\nserviceAccountName: nginx\ncontainers:\n- name: nginx\nimage: nginx:1.14.2\nports:\n- containerPort: 80\n# env:\n#   - name: TEST\n#     value: \"Hello, World!\"\nresources:\nrequests:\ncpu: \"250m\"\nmemory: \"500Mi\"\nlimits:\ncpu: \"500m\"\nmemory: \"1000Mi\"\n# command:  # override Dockerfile `ENTRYPOINT`\n#   - \"\"\n#   - \"\"\n# args:     # override Dockerfile `CMD`\n#   - \"\"\n#   - \"\"\nreadinessProbe:\nhttpGet:\npath: /health\nport: 80\ninitialDelaySeconds: 15\nlivenessProbe:\nhttpGet:\npath: /health\nport: 80\ninitialDelaySeconds: 30\nlifecycle:\npreStop:\nexec:\ncommand: [\"/bin/sh\", \"-c\", \"sleep 60\"]\n# volumeMounts:\n#   - name: volume-1\n#     mountPath: \"/mnt/volume-1\"\n#     readOnly: true\nterminationGracePeriodSeconds: 60\n# volumes:\n#   - name: volume-1\n#     emptyDir: {}\n# tolerations:\n#   - key: \"key1\"         # taint key\n#     value: \"value1\"     # taint value\n#     operator: \"Equal\"\n#     effect: \"NoSchedule\"\n# nodeSelector:\n#   key: value            # node label key and value\n# topologySpreadConstraints:\n#   - maxSkew: 1\n#     whenUnsatisfiable: DoNotSchedule\n#     topologyKey: topology.kubernetes.io/zone\n#     labelSelector:\n#       matchLabels:\n#         app: nginx\n</code></pre> <p>Kubernetes Documentation</p> <p>Leaving Room For Imperativeness</p> <p>It may be desired to leave room for some imperativeness/automation, and not have everything defined in your Git manifests. For example, if you want the number of your deployment's replicas to be managed by Horizontal Pod Autoscaler, then you would not want to track replicas in Git.</p> <p>ArgoCD Best Practices</p>"},{"location":"Containers/Kubernetes/04-stateful-set/","title":"StatefulSet","text":"statefulset.yaml<pre><code>apiVersion: apps/v1\nkind: StatefulSet\nmetadata:\nname: nginx\nnamespace: nginx\nlabels:\napp: nginx\nspec:\nreplicas: 3\nselector:\nmatchLabels:\napp: nginx\ntemplate:\nmetadata:\nlabels:\napp: nginx\nspec:\ncontainers:\n- name: nginx\nimage: nginx:1.14.2\nports:\n- containerPort: 80\n</code></pre> <p>Kubernetes Documentation</p>"},{"location":"Containers/Kubernetes/05-daemonset/","title":"DaemonSet","text":"daemonset.yaml<pre><code>apiVersion: apps/v1\nkind: DaemonSet\nmetadata:\nname: nginx\nnamespace: nginx\nlabels:\napp: nginx\nspec:\nselector:\nmatchLabels:\napp: nginx\ntemplate:\nmetadata:\nlabels:\napp: nginx\nspec:\ncontainers:\n- name: nginx\nimage: nginx:1.14.2\nports:\n- containerPort: 80\n</code></pre> <p>Kubernetes Documentation</p>"},{"location":"Containers/Kubernetes/06-job/","title":"Job","text":"job.yaml<pre><code>apiVersion: Batch/v1\nkind: Job\nmetadata:\nname: pi\nnamespace: pi\nlabels:\napp: pi\nspec:\ntemplate:\nspec:\ncontainers:\n- name: pi\nimage: perl:5.34.0\ncommand: [\"perl\",  \"-Mbignum=bpi\", \"-wle\", \"print bpi(2000)\"]\nrestartPolicy: Never\nbackoffLimit: 4\n# ttlSecondsAfterFinished: 10 # remove job after 10 seconds\n</code></pre> <p>Kubernetes Documentation</p>"},{"location":"Containers/Kubernetes/07-cronjob/","title":"CronJob","text":"cronjob.yaml<pre><code>apiVersion: Batch/v1\nkind: CronJob\nmetadata:\nname: pi\nnamespace: pi\nlabels:\napp: pi\nspec:\nschedule: \"* * * * *\"\njobTemplate:\nspec:\ntemplate:\ncontainers:\n- name: hello\nimage: busybox:1.28\nimagePullPolicy: IfNotPresent\ncommand:\n- /bin/sh\n- -c\n- date; echo Hello from the Kubernetes cluster\nrestartPolicy: OnFailure\n</code></pre> <p>Kubernetes Documentation</p> <p>Crontab Guru</p>"},{"location":"Containers/Kubernetes/08-service/","title":"Service","text":"service.yaml<pre><code>apiVersion: v1\nkind: Service\nmetadata:\nname: nginx\nnamespace: nginx\nlabels:\napp: nginx\nspec:\nselector:\napp: nginx\ntype: ClusterIP\nports:\n- protocol: TCP\nport: 80\ntargetPort : 80 # container port\n</code></pre> <p>Kubernetes Documentation</p>"},{"location":"Containers/Kubernetes/08-service/#using-aws-nlb","title":"Using AWS NLB","text":"<p>Go to guide</p>"},{"location":"Containers/Kubernetes/09-ingress/","title":"Ingress","text":"<p>Kubernetes Documentation</p>"},{"location":"Containers/Kubernetes/09-ingress/#using-aws-alb","title":"Using AWS ALB","text":"ingress.yaml<pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\nname: nginx\nnamespace: nginx\nannotations:\nalb.ingress.kubernetes.io/scheme: internet-facing\nalb.ingress.kubernetes.io/target-type: ip\nalb.ingress.kubernetes.io/load-balancer-name: nginx\nalb.ingress.kubernetes.io/security-groups: &lt;security group ids&gt;\nalb.ingress.kubernetes.io/healthcheck-path: &lt;healthcheck path&gt;\nalb.ingress.kubernetes.io/tags: &lt;tags&gt;  # Environment=dev,Team=test\nalb.ingress.kubernetes.io/load-balancer-attributes: access_logs.s3.enabled=true,access_logs.s3.bucket=&lt;access log bucket&gt;,access_logs.s3.prefix=&lt;access log prefix&gt;\n# Please check documentations for other annotations.\nspec:\ningressClassName: alb\nrules:\n- http:\npaths:\n- path: /\npathType: Prefix  # Exact\nbackend:\nservice:\nname: nginx\nport:\nnumber: 80\n</code></pre> <p>Go to guide</p>"},{"location":"Containers/Kubernetes/10-namespace/","title":"Namespace","text":"namespace.yaml<pre><code>apiVersion: v1\nkind: Namespace\nmetadata:\nname: nginx\n</code></pre> <p>Kubernetes Documentation</p>"},{"location":"Containers/Kubernetes/11-cluster/","title":"Cluster","text":"<p>eksctl config file schema</p> <pre><code>eksctl create cluster -f cluster.yaml\n</code></pre> cluster.yaml<pre><code>apiVersion: eksctl.io/v1alpha5\nkind: ClusterConfig\nmetadata:\nname: &lt;cluster name&gt;\nregion: &lt;region code&gt;\nversion: \"1.25\" # default is \"1.25\"\n# tags:\n#   &lt;key1&gt;: &lt;value1&gt;\n#   &lt;key2&gt;: &lt;value2&gt;\nkubernetesNetworkConfig:\nipFamily: IPv4  # IPv6\niam:\nserviceRoleARN: &lt;eks cluster role arn&gt;\nwithOIDC: true\nserviceAccounts:\n- metadata: # aws load balancer controller\nname: aws-load-balancer-controller\nnamespace: kube-system\nwellKnownPolicies:\nawsLoadBalancerController: true\nroleName: &lt;eks elb controller role name&gt;\ntags:\nName: &lt;eks elb controller role name&gt;\n- metadata: # cluster autoscaler\nname: cluster-autoscaler\nnamespace: kube-system\nwellKnownPolicies:\nautoScaler: true\nroleName: &lt;cluster autoscaler role name&gt;\ntags:\nName: &lt;cluster autoscaler role name&gt;\n- metadata: # external dns\nname: external-dns\nnamespace: kube-system\nwellKnownPolicies:\nexternalDNS: true\nroleName: &lt;external dns role name&gt;\ntags:\nName: &lt;external dns role name&gt;\n- metadata: # ebs csi controller\nname: ebs-csi-controller-sa\nnamespace: kube-system\nwellKnownPolicies:\nebsCSIController: true\nroleName: &lt;ebs csi controller role name&gt;\ntags:\nName: &lt;ebs csi controller role name&gt;\n- metadata: # efs csi controller\nname: efs-csi-controller-sa\nnamespace: kube-system\nwellKnownPolicies:\nefsCSIController: true\nroleName: &lt;efs csi controller role name&gt;\ntags:\nName: &lt;efs csi controller role name&gt;\niamIdentityMappings:\n- arn: &lt;custom iam resources arn&gt;\ngroups:\n- system:masters\nusername: &lt;identity mapping user name&gt;\nvpc:\nid: \"&lt;vpc id&gt;\"  # ex. vpc-0dd338ecf29863c55\nsecurityGroup: \"&lt;security group id&gt;\"  # ex. sg-074e7b913be56b86d\nsubnets:\nprivate:\n&lt;az code&gt;:  # ex. eu-north-1a\nid: \"&lt;subnet id&gt;\" # ex. subnet-0b2512f8c6ae9bf30\n&lt;az code&gt;:  # ex. eu-north-1b\nid: \"&lt;subnet id&gt;\" # ex. subnet-08cb9a2ed60394ce3\n&lt;az code&gt;:  # ex. eu-north-1c\nid: \"&lt;subnet id&gt;\" # ex. subnet-00f71956cdec8f1dc\nsharedNodeSecurityGroup: \"&lt;general nodegroup security group&gt;\" # ex. sg-013f261f9fb5855f7\nmanageSharedNodeSecurityGroupRules: false\n# clusterEndpoints:\n#   publicAccess: true\n#   privateAccess: true\n# publicAccessCIDRs:\n#   - 0.0.0.0/0 # or my ip\naddons:\n- name: vpc-cni\n- name: coredns\n- name: kube-proxy\nprivateCluster:\nenabled: true\nskipEndpointCreation: true\nmanagedNodeGroups:\n- name: &lt;node group name&gt; # ex. ng-1\namiFamily: AmazonLinux2 # Bottlerocket\ninstanceType: m5.large  # (1)\nsubnets:\n- \"&lt;subnet id&gt;\"\n- \"&lt;subnet id&gt;\"\n- \"&lt;subnet id&gt;\"\ndesiredCapacity: 3\nminSize: 3\nmaxSize: 6\n# labels:\n#   key1: value1\nprivateNetworking: true\n# tags:\n#   key1: value1\n# taints:\n#   - key:\n#     value:\n#     effect:\nlaunchTemplate:\nid: &lt;launch template id&gt;\niam:\ninstanceRoleARN: \"&lt;node group role arn&gt;\"\ncloudWatch:\nclusterLogging:\nenableTypes: [\"api\", \"audit\", \"authenticator\", \"controllerManager\", \"scheduler\"]\nsecretsEncryption:\nkeyARN: \"&lt;kms key arn&gt;\" # ex. arn:aws:kms:us-east-1:123456789012:key/12345678-abcd-efgh-ijkl-123456789012\n</code></pre> <ol> <li>If you use launch template, you should define instance type in launch template and do not use this object.</li> </ol> <p>eksctl Config file schema</p>"},{"location":"Containers/Kubernetes/12-service-account/","title":"ServiceAccount","text":""},{"location":"Containers/Kubernetes/12-service-account/#create-usint-yaml","title":"Create usint YAML","text":"service-account<pre><code>apiVersion: v1\nkind: ServiceAccount\nmetadata:\nname: my-service-account\nnamespace: default\nannotations:\neks.amazonaws.com/role-arn: arn:aws:iam::$account_id:role/my-role\n</code></pre>"},{"location":"Containers/Kubernetes/12-service-account/#create-using-eksctl-to-use-irsa","title":"Create using <code>eksctl</code> to use IRSA","text":"<pre><code>eksctl create iamserviceaccount \\\n--cluster &lt;CLUSTER_NAME&gt; \\\n--name &lt;SERVICE_ACCOUNT_NAME&gt; \\\n--namespace &lt;SERVICE_ACCOUNT_NAMESPACE&gt; \\\n--attach-policy-arn &lt;POLICY_ARN&gt; \\\n--role-name &lt;ROLE_NAME&gt; \\\n--tags &lt;TAGS (ex. k1=v1,k2=v2)&gt; \\\n--region &lt;REGION_CODE&gt; \\\n--approve\n</code></pre>"},{"location":"Containers/Kubernetes/13-argocd/","title":"ArgoCD","text":""},{"location":"Containers/Kubernetes/13-argocd/#application","title":"Application","text":"<pre><code>apiVersion: argoproj.io/v1alpha1\nkind: Application\nmetadata:\nname: &lt;application name&gt;\nnamespace: argocd\n# annotations:\n#   argocd-image-updater.argoproj.io/image-list: org/app=&lt;IMAGE_REPOSITORY_URL&gt;/&lt;IMAGE_REPOSITORY_NAME&gt; # ex. 123456789012.dkr.ecr.us-east-1.amazonaws.com/nginx\n#   argocd-image-updater.argoproj.io/org_app.allow-tags: any\n#   argocd-image-updater.argoproj.io/org_app.pull-secret: ext:/scripts/auth1.sh\n#   argocd-image-updater.argoproj.io/org_app.update-strategy: semver\nspec:\nproject: default\nsource:\nkustomize:\nimages:\n- &lt;IMAGE_REPOSITORY_URL&gt;/&lt;IMAGE_REPOSITORY_NAME&gt;:&lt;IMAGE_REPOSITRY_TAG&gt;  # ex. 123456789012.dkr.ecr.us-east-1.amazonaws.com/nginx:1.0.0\nrepoURL: &lt;GIT_REPOSITORY_URL&gt; # ex. https://github.com/argoproj/argocd-example-apps.git\ntargetRevision: HEAD          # HEAD or git branch name\npath: &lt;K8S_MANIFEST_PATH&gt;     # ex. k8s\ndestination:\nserver: https://kubernetes.default.svc\nnamespace: &lt;DESTINATION NAMESPACE&gt;\n# syncPolicy:\n#   automated:\n#     prune: true\n#     selfHeal: true\n</code></pre>"},{"location":"Containers/Kubernetes/13-argocd/#repository","title":"Repository","text":"<pre><code>apiVersion: v1\nkind: Secret\nmetadata:\nname: &lt;secret name&gt;\nnamespace: argocd\nlabels:\nargocd.argoproj.io/secret-type: repository\nstringData:\ntype: git\nurl: &lt;repo url&gt; # ex. https://github.com/argoproj/private-repo\nusername: &lt;repo username&gt;\npassword: &lt;repo password&gt;\n</code></pre>"},{"location":"Containers/Kubernetes/13-argocd/#application-set","title":"Application Set","text":"<pre><code>apiVersion: argoproj.io/v1alpha1\nkind: ApplicationSet\nmetadata:\nname: &lt;application name&gt;\nnamespace: argocd\nspec:\ngenerators:\n- list:\nelements:\n- cluster: dev\nurl: &lt;server url&gt;\n- cluster: prod\nurl: &lt;server url&gt;\ntemplate:\nmetadata:\nname: '{{cluster}}-nginx'\nspec:\nproject: default\nsource:\nkustomize:\nimages:\n- &lt;IMAGE_REPOSITORY_URL&gt;/&lt;IMAGE_REPOSITORY_NAME&gt;:&lt;IMAGE_REPOSITRY_TAG&gt;  # ex. 123456789012.dkr.ecr.us-east-1.amazonaws.com/nginx:1.0.0\nrepoURL: &lt;GIT_REPOSITORY_URL&gt; # ex. https://github.com/argoproj/argocd-example-apps.git\ntargetRevision: HEAD          # HEAD or git branch name\npath: &lt;K8S_MANIFEST_PATH&gt;     # ex. k8s\ndestination:\nserver: https://kubernetes.default.svc\nnamespace: &lt;DESTINATION NAMESPACE&gt;\n# syncPolicy:\n#   automated:\n#     prune: true\n#     selfHeal: true\n</code></pre>"},{"location":"Containers/Kubernetes/13-argocd/#cluster","title":"Cluster","text":"<pre><code>apiVersion: v1\nkind: Secret\nmetadata:\nname: CLUSTER_NAME\nnamespace: argocd\nlabels:\nargocd.argoproj.io/secret-type: cluster\ntype: Opaque\nstringData:\nconfig: |\n{\n\"bearerToken\":\"TOKEN\",\n\"tlsClientConfig\":{\n\"insecure\":false,\n\"caData\":\"CA_DATA\"\n}\n}\nname: CLUSTER_NAME\nserver: SERVER_URL\n</code></pre>"},{"location":"Containers/Kubernetes/13-argocd/#rollout","title":"Rollout","text":"<pre><code>apiVersion: argoproj.io/v1alpha1\nkind: Rollout\nmetadata:\nname: nginx\nnamespace: nginx\nlabels:\napp: nginx\nspec:\n# do not include replicas in the manifests if you want replicas to be controlled by HPA\n# replicas: 2\nrevisionHistoryLimit: 2\nselector:\nmatchLabels:\napp: nginx\ntemplate:\nmetadata:\nlabels:\napp: nginx\nspec:\nserviceAccountName: nginx\ncontainers:\n- name: nginx\nimage: nginx:latest\nports:\n- containerPort: 8080\n# env:\n#   - name: TEST\n#     value: \"Hello, World!\"\nresources:\nrequests:\ncpu: \"250m\"\nmemory: \"250Mi\"\nlimits:\ncpu: \"500m\"\nmemory: \"500Mi\"\n# command:  # override Dockerfile `ENTRYPOINT`\n#   - \"\"\n#   - \"\"\n# args:     # override Dockerfile `CMD`\n#   - \"\"\n#   - \"\"\nreadinessProbe:\nhttpGet:\npath: /health\nport: 8080\ninitialDelaySeconds: 2\nlivenessProbe:\nhttpGet:\npath: /health\nport: 8080\ninitialDelaySeconds: 3\nlifecycle:\npreStop:\nexec:\ncommand: [\"/bin/sh\", \"-c\", \"sleep 2\"]\n# volumeMounts:\n#   - name: volume-1\n#     mountPath: \"/mnt/volume-1\"\n#     readOnly: true\nterminationGracePeriodSeconds: 3\n# volumes:\n#   - name: volume-1\n#     emptyDir: {}\n# tolerations:\n#   - key: \"type\"         # taint key\n#     value: \"nginx\"     # taint value\n#     operator: \"Equal\"\n#     effect: \"NoSchedule\"\n# nodeSelector:\n#   type: nginx            # node label key and value\n# topologySpreadConstraints:\n#   - maxSkew: 1\n#     whenUnsatisfiable: DoNotSchedule\n#     topologyKey: topology.kubernetes.io/zone\n#     labelSelector:\n#       matchLabels:\n#         app: nginx\nstrategy:\ncanary:\ncanaryService: nginx-canary\nstableService: nginx-stable\ntrafficRouting:\nalb:\ningress: nginx\nrootService: nginx-root\nservicePort: 8080\nsteps:\n- setWeight: 20\n- pause: {duration: 10s}\n- setWeight: 40\n- pause: {duration: 10s}\n- setWeight: 60\n- pause: {duration: 10s}\n- setWeight: 80\n- pause: {duration: 10s}\n</code></pre> <p>Argo Rollout Documentation Sample Application</p>"},{"location":"Containers/Kubernetes/14-kustomize/","title":"Kustomize","text":"kustomization.yaml<pre><code>apiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\nresources:\n- deployment.yaml\n- service.yaml\n- ...\nimages:\n- name: &lt;IMAGE NAME&gt;  # ex. nginx\n# newName: &lt;NEW IMAGE NAME&gt;\n# newTag: 1.23.1\n</code></pre>"},{"location":"Containers/Kubernetes/15-horizontal-pod-autoscaler/","title":"Horizontal Pod Autoscaler","text":""},{"location":"Containers/Kubernetes/15-horizontal-pod-autoscaler/#autoscalingv2","title":"<code>autoscaling/v2</code>","text":"hpa.yaml<pre><code>apiVersion: autoscaling/v2\nkind: HorizontalPodAutoscaler\nmetadata:\nname: nginx\nnamespace: nginx\nlabels:\napp: nginx\nspec:\nminReplicas: 2\nmaxReplicas: 10\nmetrics:\n- type: Resource\nresource:\nname: cpu\ntarget:\ntype: Utilization\naverageUtilization: 40\nscaleTargetRef:\napiVersion: apps/v1\nkind: Deployment\nname: nginx\n</code></pre>"},{"location":"Containers/Kubernetes/15-horizontal-pod-autoscaler/#autoscalingv1","title":"<code>autoscaling/v1</code>","text":"hpa.yaml<pre><code>apiVersion: autoscaling/v1\nkind: HorizontalPodAutoscaler\nmetadata:\nname: nginx\nnamespace: nginx\nlabels:\napp: nginx\nspec:\nminReplicas: 2\nmaxReplicas: 10\ntargetCPUUtilizationPercentage: 40\nscaleTargetRef:\napiVersion: apps/v1\nkind: Deployment\nname: nginx\n</code></pre>"},{"location":"Containers/Kubernetes/16-network-policy/","title":"Network Policy","text":""},{"location":"Containers/Kubernetes/16-network-policy/#calico-network-policy","title":"Calico Network Policy","text":"networkpolicy.yaml<pre><code>kind: NetworkPolicy\napiVersion: networking.k8s.io/v1\nmetadata:\nname: nginx\nnamespace: nginx\nspec:\npodSelector:\nmatchLabels:\napp: nginx # app-label\npolicyTypes:\n- Ingress\n- Egress\ningress:\n- from:\n- ipBlock:\ncidr: 10.0.1.0/24 # allow from elb\n- ipBlock:\ncidr: 10.0.2.0/24 # allow from elb\n- podSelector:\nmatchLabels:\napp: apache      # allow from pod\nports:\n- protocol: TCP\nport: 8080 # the port which should be Internet-accessible\negress: {}  # egress any open\n</code></pre>"},{"location":"Containers/Kubernetes/16-network-policy/#calico-global-network-policy","title":"Calico Global Network Policy","text":"globalnetworkpolicy.yaml<pre><code># Allow all ingress traffic except traffic from app=nginx pod.\napiVersion: crd.projectcalico.org/v1\nkind: GlobalNetworkPolicy\nmetadata:\nname: nginx\nspec:\nselector: app == 'nginx'\ningress:\n- action: Deny\nprotocol: TCP\nsource:\nselector: app == 'apache'\n- action: Allow\nprotocol: TCP\negress:\n- action: Allow\n</code></pre>"},{"location":"Database/DynamoDB/01-create-dynamodb-table/","title":"Create DynamoDB Table","text":"Linux Windows <pre><code>STACK_NAME=\"&lt;stack name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region code&gt;\"\n# Table Configuration - General\nTableName=\"\"                                        # [REQUIRED] The name of DynamoDB's table.\nBillingMode=\"PAY_PER_REQUEST\"                       # `PROVISIONED`(default) or `PAY_PER_REQUEST` | [REQUIRED] The billing mode of DynamoDB Table. (PROVISIONED - Provisioned Mode, PAY_PER_REQUEST - On-Demand Mode)\nTableClass=\"STANDARD\"                               # `STANDARD`(default) or `STANDARD_INFREQUENT_ACCESS` | [optional] The class of DynamoDB's table.\nEnablePitr=\"true\"                                   # [optional] Enable or disable of DynamoDB Table's Point-in-time recovery.\nKmsKeyId=\"alias/aws/dynamodb\"                       # [optional] The AWS KMS key that should be used for the AWS KMS encryption. To specify a key, use its key ID, Amazon Resource Name (ARN), alias name, or alias ARN.\n# Table Configuration - Keys\nPartitionKeyAttributeName=\"\"                        # [REQUIRED] The name of DynamoDB Table's partition key.\nPartitionKeyAttributeType=\"S\"                       # `S`(default), `N` or `B` | [REQUIRED] The type of DynamoDB Table's partition key.\nSortKeyAttributeName=\"\"                             # [optional] The name of DynamoDB Table's sort key.\nSortKeyAttributeType=\"S\"                            # `S`(default), `N` or `B` | [optional] The type of DynamoDB Table's sort key.\n# Table Configuration - Read Capacity (Provisioned Mode)\nProvisionedReadCapacityUnits=\"5\"                    # [optional] The maximum number of strongly consistent reads consumed per second before DynamoDB returns a ThrottlingException.\nEnableProvisionedReadCapacityAutoscaling=\"false\"    # `true`(default) or `false` [optional] Enable or disable of DynamoDB Table's read capacity auto scaling.\nProvisionedReadCapacityMinUnits=\"1\"                 # [optional] The min number of DynamoDB provisioned read capacity units.\nProvisionedReadCapacityMaxUnits=\"10\"                # [optional] The max number of DynamoDB provisioned read capacity units.\nProvisionedReadCapacityTargetUtilization=\"70\"       # [optional] The number of DynamoDB provisioned read capacity units target utilization.\n# Table Configuration - Write Capacity (Provisioned Mode)\nProvisionedWriteCapacityUnits=\"5\"                   # [optional] The maximum number of writes consumed per second before DynamoDB returns a ThrottlingException.\nEnableProvisionedWriteCapacityAutoscaling=\"false\"   # `true`(default) or `false` [optional] Enable or disable of DynamoDB Table's write capacity auto scaling.\nProvisionedWriteCapacityMinUnits=\"1\"                # [optional] The min number of DynamoDB provisioned write capacity units.\nProvisionedWriteCapacityMaxUnits=\"10\"               # [optional] The max number of DynamoDB provisioned write capacity units.\nProvisionedWriteCapacityTargetUtilization=\"70\"      # [optional] The number of DynamoDB provisioned write capacity units target utilization.\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/dynamodb/table.yaml\n\naws cloudformation deploy \\\n--template-file ./table.yaml \\\n--stack-name $STACK_NAME \\\n--parameter-overrides \\\nProjectName=$ProjectName \\\nTableName=$TableName \\\nBillingMode=$BillingMode \\\nTableClass=$TableClass \\\nEnablePitr=$EnablePitr \\\nKmsKeyId=$KmsKeyId \\\nPartitionKeyAttributeName=$PartitionKeyAttributeName \\\nPartitionKeyAttributeType=$PartitionKeyAttributeType \\\nSortKeyAttributeName=$SortKeyAttributeName \\\nSortKeyAttributeType=$SortKeyAttributeType \\\nProvisionedReadCapacityUnits=$ProvisionedReadCapacityUnits \\\nEnableProvisionedReadCapacityAutoscaling=$EnableProvisionedReadCapacityAutoscaling \\\nProvisionedReadCapacityMinUnits=$ProvisionedReadCapacityMinUnits \\\nProvisionedReadCapacityMaxUnits=$ProvisionedReadCapacityMaxUnits \\\nProvisionedReadCapacityTargetUtilization=$ProvisionedReadCapacityTargetUtilization \\\nProvisionedWriteCapacityUnits=$ProvisionedWriteCapacityUnits \\\nEnableProvisionedWriteCapacityAutoscaling=$EnableProvisionedWriteCapacityAutoscaling \\\nProvisionedWriteCapacityMinUnits=$ProvisionedWriteCapacityMinUnits \\\nProvisionedWriteCapacityMaxUnits=$ProvisionedWriteCapacityMaxUnits \\\nProvisionedWriteCapacityTargetUtilization=$ProvisionedWriteCapacityTargetUtilization \\\n--disable-rollback \\\n--tags project=$PROJECT_NAME \\\n--capabilities CAPABILITY_NAMED_IAM \\\n--region $REGION\n</code></pre> <pre><code>$STACK_NAME=\"&lt;stack name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region code&gt;\"\n# Table Configuration - General\n$TableName=\"\"                                       # [REQUIRED] The name of DynamoDB's table.\n$BillingMode=\"PAY_PER_REQUEST\"                      # `PROVISIONED`(default) or `PAY_PER_REQUEST` | [REQUIRED] The billing mode of DynamoDB Table. (PROVISIONED - Provisioned Mode, PAY_PER_REQUEST - On-Demand Mode)\n$TableClass=\"STANDARD\"                              # `STANDARD`(default) or `STANDARD_INFREQUENT_ACCESS` | [optional] The class of DynamoDB's table.\n$EnablePitr=\"true\"                                  # [optional] Enable or disable of DynamoDB Table's Point-in-time recovery.\n$KmsKeyId=\"alias/aws/dynamodb\"                      # [optional] The AWS KMS key that should be used for the AWS KMS encryption. To specify a key, use its key ID, Amazon Resource Name (ARN), alias name, or alias ARN.\n# Table Configuration - Keys\n$PartitionKeyAttributeName=\"\"                       # [REQUIRED] The name of DynamoDB Table's partition key.\n$PartitionKeyAttributeType=\"S\"                      # `S`(default), `N` or `B` | [REQUIRED] The type of DynamoDB Table's partition key.\n$SortKeyAttributeName=\"\"                            # [optional] The name of DynamoDB Table's sort key.\n$SortKeyAttributeType=\"S\"                           # `S`(default), `N` or `B` | [optional] The type of DynamoDB Table's sort key.\n# Table Configuration - Read Capacity (Provisioned Mode)\n$ProvisionedReadCapacityUnits=\"5\"                   # [optional] The maximum number of strongly consistent reads consumed per second before DynamoDB returns a ThrottlingException.\n$EnableProvisionedReadCapacityAutoscaling=\"false\"   # `true`(default) or `false` [optional] Enable or disable of DynamoDB Table's read capacity auto scaling.\n$ProvisionedReadCapacityMinUnits=\"1\"                # [optional] The min number of DynamoDB provisioned read capacity units.\n$ProvisionedReadCapacityMaxUnits=\"10\"               # [optional] The max number of DynamoDB provisioned read capacity units.\n$ProvisionedReadCapacityTargetUtilization=\"70\"      # [optional] The number of DynamoDB provisioned read capacity units target utilization.\n# Table Configuration - Write Capacity (Provisioned Mode)\n$ProvisionedWriteCapacityUnits=\"5\"                  # [optional] The maximum number of writes consumed per second before DynamoDB returns a ThrottlingException.\n$EnableProvisionedWriteCapacityAutoscaling=\"false\"  # `true`(default) or `false` [optional] Enable or disable of DynamoDB Table's write capacity auto scaling.\n$ProvisionedWriteCapacityMinUnits=\"1\"               # [optional] The min number of DynamoDB provisioned write capacity units.\n$ProvisionedWriteCapacityMaxUnits=\"10\"              # [optional] The max number of DynamoDB provisioned write capacity units.\n$ProvisionedWriteCapacityTargetUtilization=\"70\"     # [optional] The number of DynamoDB provisioned write capacity units target utilization.\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/dynamodb/table.yaml\naws cloudformation deploy `\n--template-file ./table.yaml `\n--stack-name $STACK_NAME `\n--parameter-overrides `\nProjectName=$ProjectName `\nTableName=$TableName `\nBillingMode=$BillingMode `\nTableClass=$TableClass `\nEnablePitr=$EnablePitr `\nKmsKeyId=$KmsKeyId `\nPartitionKeyAttributeName=$PartitionKeyAttributeName `\nPartitionKeyAttributeType=$PartitionKeyAttributeType `\nSortKeyAttributeName=$SortKeyAttributeName `\nSortKeyAttributeType=$SortKeyAttributeType `\nProvisionedReadCapacityUnits=$ProvisionedReadCapacityUnits `\nEnableProvisionedReadCapacityAutoscaling=$EnableProvisionedReadCapacityAutoscaling `\nProvisionedReadCapacityMinUnits=$ProvisionedReadCapacityMinUnits `\nProvisionedReadCapacityMaxUnits=$ProvisionedReadCapacityMaxUnits `\nProvisionedReadCapacityTargetUtilization=$ProvisionedReadCapacityTargetUtilization `\nProvisionedWriteCapacityUnits=$ProvisionedWriteCapacityUnits `\nEnableProvisionedWriteCapacityAutoscaling=$EnableProvisionedWriteCapacityAutoscaling `\nProvisionedWriteCapacityMinUnits=$ProvisionedWriteCapacityMinUnits `\nProvisionedWriteCapacityMaxUnits=$ProvisionedWriteCapacityMaxUnits `\nProvisionedWriteCapacityTargetUtilization=$ProvisionedWriteCapacityTargetUtilization `\n--disable-rollback `\n--tags project=$PROJECT_NAME `\n--capabilities CAPABILITY_NAMED_IAM `\n--region $REGION\n</code></pre>"},{"location":"Database/RDS/01-create-rds-multi-az/","title":"Create RDS Multi AZ","text":""},{"location":"Database/RDS/01-create-rds-multi-az/#aurora-mysql-57","title":"Aurora MySQL 5.7","text":""},{"location":"Database/RDS/01-create-rds-multi-az/#engine-version","title":"Engine Version","text":"<ul> <li><code>5.7.mysql_aurora.2.07.0</code></li> <li><code>5.7.mysql_aurora.2.07.1</code></li> <li><code>5.7.mysql_aurora.2.07.2</code></li> <li><code>5.7.mysql_aurora.2.07.3</code></li> <li><code>5.7.mysql_aurora.2.07.4</code></li> <li><code>5.7.mysql_aurora.2.07.5</code></li> <li><code>5.7.mysql_aurora.2.07.6</code></li> <li><code>5.7.mysql_aurora.2.07.7</code></li> <li><code>5.7.mysql_aurora.2.07.8</code></li> <li><code>5.7.mysql_aurora.2.07.9</code></li> <li><code>5.7.mysql_aurora.2.11.1</code></li> <li><code>5.7.mysql_aurora.2.11.2</code></li> </ul>"},{"location":"Database/RDS/01-create-rds-multi-az/#instance-type","title":"Instance Type","text":"<code>r3</code> series <ul> <li><code>db.r3.large</code></li> <li><code>db.r3.xlarge</code></li> <li><code>db.r3.2xlarge</code></li> <li><code>db.r3.4xlarge</code></li> <li><code>db.r3.8xlarge</code></li> </ul> <code>r4</code> series <ul> <li><code>db.r4.large</code></li> <li><code>db.r4.xlarge</code></li> <li><code>db.r4.2xlarge</code></li> <li><code>db.r4.4xlarge</code></li> <li><code>db.r4.8xlarge</code></li> <li><code>db.r4.16xlarge</code></li> </ul> <code>r5</code> series <ul> <li><code>db.r5.large</code></li> <li><code>db.r5.xlarge</code></li> <li><code>db.r5.2xlarge</code></li> <li><code>db.r5.4xlarge</code></li> <li><code>db.r5.8xlarge</code></li> <li><code>db.r5.12xlarge</code></li> <li><code>db.r5.16xlarge</code></li> <li><code>db.r5.24xlarge</code></li> </ul> <code>r6g</code> series <ul> <li><code>db.r6g.large</code></li> <li><code>db.r6g.xlarge</code></li> <li><code>db.r6g.2xlarge</code></li> <li><code>db.r6g.4xlarge</code></li> <li><code>db.r6g.8xlarge</code></li> <li><code>db.r6g.12xlarge</code></li> <li><code>db.r6g.16xlarge</code></li> </ul> <code>r6i</code> series <ul> <li><code>db.r6i.large</code></li> <li><code>db.r6i.xlarge</code></li> <li><code>db.r6i.2xlarge</code></li> <li><code>db.r6i.4xlarge</code></li> <li><code>db.r6i.8xlarge</code></li> <li><code>db.r6i.12xlarge</code></li> <li><code>db.r6i.16xlarge</code></li> <li><code>db.r6i.24xlarge</code></li> <li><code>db.r6i.32xlarge</code></li> </ul> <code>t2</code> series <ul> <li><code>db.t2.small</code></li> <li><code>db.t2.medium</code></li> <li><code>db.t2.large</code></li> </ul> <code>t3</code> series <ul> <li><code>db.t3.small</code></li> <li><code>db.t3.medium</code></li> <li><code>db.t3.large</code></li> </ul> <code>t4g</code> series <ul> <li><code>db.t4g.medium</code></li> <li><code>db.t4g.large</code></li> </ul>"},{"location":"Database/RDS/01-create-rds-multi-az/#commands","title":"Commands","text":"Linux Windows <pre><code>STACK_NAME=\"\"\nPROJECT_NAME=\"\"\nREGION=\"\"\n### Subnet Group Configuration\nSubnetGroupName=\"\"              # [REQUIRED] he name of this launch template.\nSubnets=\"\"                      # [REQUIRED] List of database subnet ids.\n### Parameter Group Configuration\nClusterParameterGroupName=\"\"    # [REQUIRED] Name of database cluster parameter group.\nParameterGroupName=\"\"           # [REQUIRED] Name of database parameter group.\n### Cluster Configuration - General\nClusterIdentifier=\"\"            # [REQUIRED] Identifier(name) used for database cluster.\nEngineVersion=\"\"                # [REQUIRED] EngineVersion for database. (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion)\nKmsKeyId=\"\"                     # [optional] Arn of kms key for database cluster. (If don't specify this property, use default key.)\nDeletionProtection=\"true\"       # `false`(default) or `true` | [optional] State for database deletion protection.\n### Cluster Configuration - Network\nVpcId=\"\"                        # [REQUIRED] ID of database vpc.\nPort=\"3306\"                     # [REQUIRED] Port number for database instance.\nCreateSecurityGroup=\"Yes\"       # `Yes`(default) or `No` | [REQUIRED] Create a new security group or using existed security group.\nSecurityGroupNameOrId=\"\"        # [REQUIRED] New security group name or existed security group id.\n### Cluster Configuration - Credential\nUsername=\"\"                     # [REQUIRED] Username for database access.\nPassword=\"\"                     # [REQUIRED] Password for database access.\n### Instance Configuration\nInstanceClass=\"\"                # [REQUIRED] Type of database instance type.\nInstance1Identifier=\"\"          # [REQUIRED] Identifier(name) used for database instance 1 (maybe writer)\nInstance2Identifier=\"\"          # [REQUIRED] Identifier(name) used for database instance 2 (maybe reader)\nMonitoringRoleName=\"\"           # [REQUIRED] Name of database monitoring iam role.\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/multi-az-cluster/aurora-mysql-5.7/rds-cluster.yaml\n\naws cloudformation deploy \\\n--template-file ./rds-cluster.yaml \\\n--stack-name $STACK_NAME \\\n--parameter-overrides \\\nProjectName=$PROJECT_NAME \\\nSubnetGroupName=$SubnetGroupName \\\nSubnets=$Subnets \\\nSecurityGroupIds=$SecurityGroupIds \\\nClusterParameterGroupName=$ClusterParameterGroupName \\\nParameterGroupName=$ParameterGroupName \\\nClusterIdentifier=$ClusterIdentifier \\\nEngineVersion=$EngineVersion \\\nKmsKeyId=$KmsKeyId \\\nDeletionProtection=$DeletionProtection \\\nVpcId=$VpcId \\\nPort=$Port \\\nCreateSecurityGroup=$CreateSecurityGroup \\\nSecurityGroupNameOrId=$SecurityGroupNameOrId \\\nCreateSecurityGroup=$CreateSecurityGroup \\\nUsername=$Username \\\nPassword=$Password \\\nInstanceClass=$InstanceClass \\\nInstance1Identifier=$Instance1Identifier \\\nInstance2Identifier=$Instance2Identifier \\\nMonitoringRoleName=$MonitoringRoleName \\\n--disable-rollback \\\n--tags project=$PROJECT_NAME \\\n--capabilities CAPABILITY_NAMED_IAM \\\n--region $REGION\n</code></pre> <pre><code>$STACK_NAME=\"\"\n$PROJECT_NAME=\"\"\n$REGION=\"\"\n### Subnet Group Configuration\n$SubnetGroupName=\"\"             # [REQUIRED] he name of this launch template.\n$Subnets=\"\"                     # [REQUIRED] List of database subnet ids.\n### Parameter Group Configuration\n$ClusterParameterGroupName=\"\"   # [REQUIRED] Name of database cluster parameter group.\n$ParameterGroupName=\"\"          # [REQUIRED] Name of database parameter group.\n### Cluster Configuration - General\n$ClusterIdentifier=\"\"           # [REQUIRED] Identifier(name) used for database cluster.\n$EngineVersion=\"\"               # [REQUIRED] EngineVersion for database. (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion)\n$KmsKeyId=\"\"                    # [optional] Arn of kms key for database cluster. (If don't specify this property, use default key.)\n$DeletionProtection=\"true\"      # `false`(default) or `true` | [optional] State for database deletion protection.\n### Cluster Configuration - Network\n$VpcId=\"\"                       # [REQUIRED] ID of database vpc.\n$Port=\"3306\"                    # [REQUIRED] Port number for database instance.\n$CreateSecurityGroup=\"Yes\"      # `Yes`(default) or `No` | [REQUIRED] Create a new security group or using existed security group.\n$SecurityGroupNameOrId=\"\"       # [REQUIRED] New security group name or existed security group id.\n### Cluster Configuration - Credential\n$Username=\"\"                    # [REQUIRED] Username for database access.\n$Password=\"\"                    # [REQUIRED] Password for database access.\n### Instance Configuration\n$InstanceClass=\"\"               # [REQUIRED] Type of database instance type.\n$Instance1Identifier=\"\"         # [REQUIRED] Identifier(name) used for database instance 1 (maybe writer)\n$Instance2Identifier=\"\"         # [REQUIRED] Identifier(name) used for database instance 2 (maybe reader)\n$MonitoringRoleName=\"\"          # [REQUIRED] Name of database monitoring iam role.\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/multi-az-cluster/aurora-mysql-5.7/rds-cluster.yaml\naws cloudformation deploy `\n--template-file ./rds-cluster.yaml `\n--stack-name $STACK_NAME `\n--parameter-overrides `\nProjectName=$PROJECT_NAME `\nSubnetGroupName=$SubnetGroupName `\nSubnets=$Subnets `\nSecurityGroupIds=$SecurityGroupIds `\nClusterParameterGroupName=$ClusterParameterGroupName `\nParameterGroupName=$ParameterGroupName `\nGlobalClusterIdentifier=$GlobalClusterIdentifier `\nClusterIdentifier=$ClusterIdentifier `\nEngineVersion=$EngineVersion `\nKmsKeyId=$KmsKeyId `\nDeletionProtection=$DeletionProtection `\nVpcId=$VpcId `\nPort=$Port `\nCreateSecurityGroup=$CreateSecurityGroup `\nSecurityGroupNameOrId=$SecurityGroupNameOrId `\nCreateSecurityGroup=$CreateSecurityGroup `\nUsername=$Username `\nPassword=$Password `\nInstanceClass=$InstanceClass `\nInstance1Identifier=$Instance1Identifier `\nInstance2Identifier=$Instance2Identifier `\nMonitoringRoleName=$MonitoringRoleName `\n--disable-rollback `\n--tags project=$PROJECT_NAME `\n--capabilities CAPABILITY_NAMED_IAM `\n--region $REGION\n</code></pre>"},{"location":"Database/RDS/01-create-rds-multi-az/#aurora-mysql-80","title":"Aurora MySQL 8.0","text":""},{"location":"Database/RDS/01-create-rds-multi-az/#engine-version_1","title":"Engine Version","text":"<ul> <li><code>8.0.mysql_aurora.3.01.0</code></li> <li><code>8.0.mysql_aurora.3.01.1</code></li> <li><code>8.0.mysql_aurora.3.02.0</code></li> <li><code>8.0.mysql_aurora.3.02.1</code></li> <li><code>8.0.mysql_aurora.3.02.2</code></li> <li><code>8.0.mysql_aurora.3.02.3</code></li> <li><code>8.0.mysql_aurora.3.03.0</code></li> <li><code>8.0.mysql_aurora.3.03.1</code></li> </ul>"},{"location":"Database/RDS/01-create-rds-multi-az/#instance-type_1","title":"Instance Type","text":"<code>r5</code> series <ul> <li><code>db.r5.large</code></li> <li><code>db.r5.xlarge</code></li> <li><code>db.r5.2xlarge</code></li> <li><code>db.r5.4xlarge</code></li> <li><code>db.r5.8xlarge</code></li> <li><code>db.r5.12xlarge</code></li> <li><code>db.r5.16xlarge</code></li> <li><code>db.r5.24xlarge</code></li> </ul> <code>r6g</code> series <ul> <li><code>db.r6g.large</code></li> <li><code>db.r6g.xlarge</code></li> <li><code>db.r6g.2xlarge</code></li> <li><code>db.r6g.4xlarge</code></li> <li><code>db.r6g.8xlarge</code></li> <li><code>db.r6g.12xlarge</code></li> <li><code>db.r6g.16xlarge</code></li> </ul> <code>r6i</code> series <ul> <li><code>db.r6i.large</code></li> <li><code>db.r6i.xlarge</code></li> <li><code>db.r6i.2xlarge</code></li> <li><code>db.r6i.4xlarge</code></li> <li><code>db.r6i.8xlarge</code></li> <li><code>db.r6i.12xlarge</code></li> <li><code>db.r6i.16xlarge</code></li> <li><code>db.r6i.24xlarge</code></li> <li><code>db.r6i.32xlarge</code></li> </ul> <code>t3</code> series <ul> <li><code>db.t3.medium</code></li> <li><code>db.t3.large</code></li> </ul> <code>t4g</code> series <ul> <li><code>db.t4g.medium</code></li> <li><code>db.t4g.large</code></li> </ul>"},{"location":"Database/RDS/01-create-rds-multi-az/#commands_1","title":"Commands","text":"Linux Windows <pre><code>STACK_NAME=\"\"\nPROJECT_NAME=\"\"\nREGION=\"\"\n### Subnet Group Configuration\nSubnetGroupName=\"\"              # [REQUIRED] he name of this launch template.\nSubnets=\"\"                      # [REQUIRED] List of database subnet ids.\n### Parameter Group Configuration\nClusterParameterGroupName=\"\"    # [REQUIRED] Name of database cluster parameter group.\nParameterGroupName=\"\"           # [REQUIRED] Name of database parameter group.\n### Cluster Configuration - General\nClusterIdentifier=\"\"            # [REQUIRED] Identifier(name) used for database cluster.\nEngineVersion=\"\"                # [REQUIRED] EngineVersion for database. (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion)\nKmsKeyId=\"\"                     # [optional] Arn of kms key for database cluster. (If don't specify this property, use default key.)\nDeletionProtection=\"true\"       # `false`(default) or `true` | [optional] State for database deletion protection.\n### Cluster Configuration - Network\nVpcId=\"\"                        # [REQUIRED] ID of database vpc.\nPort=\"3306\"                     # [REQUIRED] Port number for database instance.\nCreateSecurityGroup=\"Yes\"       # `Yes`(default) or `No` | [REQUIRED] Create a new security group or using existed security group.\nSecurityGroupNameOrId=\"\"        # [REQUIRED] New security group name or existed security group id.\n### Cluster Configuration - Credential\nUsername=\"\"                     # [REQUIRED] Username for database access.\nPassword=\"\"                     # [REQUIRED] Password for database access.\n### Instance Configuration\nInstanceClass=\"\"                # [REQUIRED] Type of database instance type.\nInstance1Identifier=\"\"          # [REQUIRED] Identifier(name) used for database instance 1 (maybe writer)\nInstance2Identifier=\"\"          # [REQUIRED] Identifier(name) used for database instance 2 (maybe reader)\nMonitoringRoleName=\"\"           # [REQUIRED] Name of database monitoring iam role.\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/multi-az-cluster/aurora-mysql-8.0-instance/rds-cluster.yaml\n\naws cloudformation deploy \\\n--template-file ./rds-cluster.yaml \\\n--stack-name $STACK_NAME \\\n--parameter-overrides \\\nProjectName=$PROJECT_NAME \\\nSubnetGroupName=$SubnetGroupName \\\nSubnets=$Subnets \\\nSecurityGroupIds=$SecurityGroupIds \\\nClusterParameterGroupName=$ClusterParameterGroupName \\\nClusterIdentifier=$ClusterIdentifier \\\nEngineVersion=$EngineVersion \\\nKmsKeyId=$KmsKeyId \\\nDeletionProtection=$DeletionProtection \\\nVpcId=$VpcId \\\nPort=$Port \\\nCreateSecurityGroup=$CreateSecurityGroup \\\nSecurityGroupNameOrId=$SecurityGroupNameOrId \\\nCreateSecurityGroup=$CreateSecurityGroup \\\nUsername=$Username \\\nPassword=$Password \\\nInstanceClass=$InstanceClass \\\nInstance1Identifier=$Instance1Identifier \\\nInstance2Identifier=$Instance2Identifier \\\nMonitoringRoleName=$MonitoringRoleName \\\n--disable-rollback \\\n--tags project=$PROJECT_NAME \\\n--capabilities CAPABILITY_NAMED_IAM \\\n--region $REGION\n</code></pre> <pre><code>$STACK_NAME=\"\"\n$PROJECT_NAME=\"\"\n$REGION=\"\"\n### Subnet Group Configuration\n$SubnetGroupName=\"\"             # [REQUIRED] he name of this launch template.\n$Subnets=\"\"                     # [REQUIRED] List of database subnet ids.\n### Parameter Group Configuration\n$ClusterParameterGroupName=\"\"   # [REQUIRED] Name of database cluster parameter group.\n$ParameterGroupName=\"\"          # [REQUIRED] Name of database parameter group.\n### Cluster Configuration - General\n$ClusterIdentifier=\"\"           # [REQUIRED] Identifier(name) used for database cluster.\n$EngineVersion=\"\"               # [REQUIRED] EngineVersion for database. (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion)\n$KmsKeyId=\"\"                    # [optional] Arn of kms key for database cluster. (If don't specify this property, use default key.)\n$DeletionProtection=\"true\"      # `false`(default) or `true` | [optional] State for database deletion protection.\n### Cluster Configuration - Network\n$VpcId=\"\"                       # [REQUIRED] ID of database vpc.\n$Port=\"3306\"                    # [REQUIRED] Port number for database instance.\n$CreateSecurityGroup=\"Yes\"      # `Yes`(default) or `No` | [REQUIRED] Create a new security group or using existed security group.\n$SecurityGroupNameOrId=\"\"       # [REQUIRED] New security group name or existed security group id.\n### Cluster Configuration - Credential\n$Username=\"\"                    # [REQUIRED] Username for database access.\n$Password=\"\"                    # [REQUIRED] Password for database access.\n### Instance Configuration\n$InstanceClass=\"\"               # [REQUIRED] Type of database instance type.\n$Instance1Identifier=\"\"         # [REQUIRED] Identifier(name) used for database instance 1 (maybe writer)\n$Instance2Identifier=\"\"         # [REQUIRED] Identifier(name) used for database instance 2 (maybe reader)\n$MonitoringRoleName=\"\"          # [REQUIRED] Name of database monitoring iam role.\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/multi-az-cluster/aurora-mysql-8.0-instance/rds-cluster.yaml\naws cloudformation deploy `\n--template-file ./rds-cluster.yaml `\n--stack-name $STACK_NAME `\n--parameter-overrides `\nProjectName=$PROJECT_NAME `\nSubnetGroupName=$SubnetGroupName `\nSubnets=$Subnets `\nSecurityGroupIds=$SecurityGroupIds `\nClusterParameterGroupName=$ClusterParameterGroupName `\nParameterGroupName=$ParameterGroupName `\nClusterIdentifier=$ClusterIdentifier `\nEngineVersion=$EngineVersion `\nKmsKeyId=$KmsKeyId `\nDeletionProtection=$DeletionProtection `\nVpcId=$VpcId `\nPort=$Port `\nCreateSecurityGroup=$CreateSecurityGroup `\nSecurityGroupNameOrId=$SecurityGroupNameOrId `\nCreateSecurityGroup=$CreateSecurityGroup `\nUsername=$Username `\nPassword=$Password `\nInstanceClass=$InstanceClass `\nInstance1Identifier=$Instance1Identifier `\nInstance2Identifier=$Instance2Identifier `\nMonitoringRoleName=$MonitoringRoleName `\n--disable-rollback `\n--tags project=$PROJECT_NAME `\n--capabilities CAPABILITY_NAMED_IAM `\n--region $REGION\n</code></pre>"},{"location":"Database/RDS/01-create-rds-multi-az/#aurora-mysql-80-serverless","title":"Aurora MySQL 8.0 Serverless","text":""},{"location":"Database/RDS/01-create-rds-multi-az/#engine-version_2","title":"Engine Version","text":"<ul> <li><code>8.0.mysql_aurora.3.02.0</code></li> <li><code>8.0.mysql_aurora.3.02.1</code></li> <li><code>8.0.mysql_aurora.3.02.2</code></li> <li><code>8.0.mysql_aurora.3.02.3</code></li> <li><code>8.0.mysql_aurora.3.03.0</code></li> <li><code>8.0.mysql_aurora.3.03.1</code></li> </ul>"},{"location":"Database/RDS/01-create-rds-multi-az/#commands_2","title":"Commands","text":"Linux Windows <pre><code>STACK_NAME=\"\"\nPROJECT_NAME=\"\"\nREGION=\"\"\n### Subnet Group Configuration\nSubnetGroupName=\"\"              # [REQUIRED] he name of this launch template.\nSubnets=\"\"                      # [REQUIRED] List of database subnet ids.\n### Parameter Group Configuration\nClusterParameterGroupName=\"\"    # [REQUIRED] Name of database cluster parameter group.\nParameterGroupName=\"\"           # [REQUIRED] Name of database parameter group.\n### Cluster Configuration - General\nClusterIdentifier=\"\"            # [REQUIRED] Identifier(name) used for database cluster.\nEngineVersion=\"\"                # [REQUIRED] EngineVersion for database. (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion)\nKmsKeyId=\"\"                     # [optional] Arn of kms key for database cluster. (If don't specify this property, use default key.)\nDeletionProtection=\"true\"       # `false`(default) or `true` | [optional] State for database deletion protection.\n### Cluster Configuration - Network\nVpcId=\"\"                        # [REQUIRED] ID of database vpc.\nPort=\"3306\"                     # [REQUIRED] Port number for database instance.\nCreateSecurityGroup=\"Yes\"       # `Yes`(default) or `No` | [REQUIRED] Create a new security group or using existed security group.\nSecurityGroupNameOrId=\"\"        # [REQUIRED] New security group name or existed security group id.\n### Cluster Configuration - Credential\nUsername=\"\"                     # [REQUIRED] Username for database access.\nPassword=\"\"                     # [REQUIRED] Password for database access.\n### Cluster Configuration - Capacity\nMinCapacity=\"\"                  # [REQUIRED] Min capacity of serverless cluster. (0.5 ~ 128)\nMaxCapacity=\"\"                  # [REQUIRED] Max capacity of serverless cluster. (1 ~ 128)\n### Instance Configuration\nInstance1Identifier=\"\"          # [REQUIRED] Identifier(name) used for database instance 1 (maybe writer)\nInstance2Identifier=\"\"          # [REQUIRED] Identifier(name) used for database instance 2 (maybe reader)\nMonitoringRoleName=\"\"           # [REQUIRED] Name of database monitoring iam role.\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/multi-az-cluster/aurora-mysql-8.0-serverless/rds-cluster.yaml\n\naws cloudformation deploy \\\n--template-file ./rds-cluster.yaml \\\n--stack-name $STACK_NAME \\\n--parameter-overrides \\\nProjectName=$PROJECT_NAME \\\nSubnetGroupName=$SubnetGroupName \\\nSubnets=$Subnets \\\nSecurityGroupIds=$SecurityGroupIds \\\nClusterParameterGroupName=$ClusterParameterGroupName \\\nParameterGroupName=$ParameterGroupName \\\nClusterIdentifier=$ClusterIdentifier \\\nEngineVersion=$EngineVersion \\\nKmsKeyId=$KmsKeyId \\\nDeletionProtection=$DeletionProtection \\\nVpcId=$VpcId \\\nPort=$Port \\\nCreateSecurityGroup=$CreateSecurityGroup \\\nSecurityGroupNameOrId=$SecurityGroupNameOrId \\\nCreateSecurityGroup=$CreateSecurityGroup \\\nUsername=$Username \\\nPassword=$Password \\\nMinCapacity=$MinCapacity \\\nMaxCapacity=$MaxCapacity \\\nInstance1Identifier=$Instance1Identifier \\\nInstance2Identifier=$Instance2Identifier \\\nMonitoringRoleName=$MonitoringRoleName \\\n--disable-rollback \\\n--tags project=$PROJECT_NAME \\\n--capabilities CAPABILITY_NAMED_IAM \\\n--region $REGION\n</code></pre> <pre><code>$STACK_NAME=\"\"\n$PROJECT_NAME=\"\"\n$REGION=\"\"\n### Subnet Group Configuration\n$SubnetGroupName=\"\"             # [REQUIRED] he name of this launch template.\n$Subnets=\"\"                     # [REQUIRED] List of database subnet ids.\n### Parameter Group Configuration\n$ClusterParameterGroupName=\"\"   # [REQUIRED] Name of database cluster parameter group.\n$ParameterGroupName=\"\"          # [REQUIRED] Name of database parameter group.\n### Cluster Configuration - General\n$ClusterIdentifier=\"\"           # [REQUIRED] Identifier(name) used for database cluster.\n$EngineVersion=\"\"               # [REQUIRED] EngineVersion for database. (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion)\n$KmsKeyId=\"\"                    # [optional] Arn of kms key for database cluster. (If don't specify this property, use default key.)\n$DeletionProtection=\"true\"      # `false`(default) or `true` | [optional] State for database deletion protection.\n### Cluster Configuration - Network\n$VpcId=\"\"                       # [REQUIRED] ID of database vpc.\n$Port=\"3306\"                    # [REQUIRED] Port number for database instance.\n$CreateSecurityGroup=\"Yes\"      # `Yes`(default) or `No` | [REQUIRED] Create a new security group or using existed security group.\n$SecurityGroupNameOrId=\"\"       # [REQUIRED] New security group name or existed security group id.\n### Cluster Configuration - Credential\n$Username=\"\"                    # [REQUIRED] Username for database access.\n$Password=\"\"                    # [REQUIRED] Password for database access.\n### Cluster Configuration - Capacity\n$MinCapacity=\"\"                 # [REQUIRED] Min capacity of serverless cluster. (0.5 ~ 128)\n$MaxCapacity=\"\"                 # [REQUIRED] Max capacity of serverless cluster. (1 ~ 128)\n### Instance Configuration\n$Instance1Identifier=\"\"         # [REQUIRED] Identifier(name) used for database instance 1 (maybe writer)\n$Instance2Identifier=\"\"         # [REQUIRED] Identifier(name) used for database instance 2 (maybe reader)\n$MonitoringRoleName=\"\"          # [REQUIRED] Name of database monitoring iam role.\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/multi-az-cluster/aurora-mysql-8.0-serverless/rds-cluster.yaml\naws cloudformation deploy `\n--template-file ./rds-cluster.yaml `\n--stack-name $STACK_NAME `\n--parameter-overrides `\nProjectName=$PROJECT_NAME `\nSubnetGroupName=$SubnetGroupName `\nSubnets=$Subnets `\nSecurityGroupIds=$SecurityGroupIds `\nClusterParameterGroupName=$ClusterParameterGroupName `\nParameterGroupName=$ParameterGroupName `\nClusterIdentifier=$ClusterIdentifier `\nEngineVersion=$EngineVersion `\nKmsKeyId=$KmsKeyId `\nDeletionProtection=$DeletionProtection `\nVpcId=$VpcId `\nPort=$Port `\nCreateSecurityGroup=$CreateSecurityGroup `\nSecurityGroupNameOrId=$SecurityGroupNameOrId `\nCreateSecurityGroup=$CreateSecurityGroup `\nUsername=$Username `\nPassword=$Password `\nMinCapacity=$MinCapacity `\nMaxCapacity=$MaxCapacity `\nInstance1Identifier=$Instance1Identifier `\nInstance2Identifier=$Instance2Identifier `\nMonitoringRoleName=$MonitoringRoleName `\n--disable-rollback `\n--tags project=$PROJECT_NAME `\n--capabilities CAPABILITY_NAMED_IAM `\n--region $REGION\n</code></pre>"},{"location":"Database/RDS/01-create-rds-multi-az/#aurora-postgresql","title":"Aurora PostgreSQL","text":""},{"location":"Database/RDS/01-create-rds-multi-az/#cluster-parameter-group-family","title":"Cluster Parameter Group Family","text":"<ul> <li><code>aurora-postgresql11</code></li> <li><code>aurora-postgresql12</code></li> <li><code>aurora-postgresql13</code></li> <li><code>aurora-postgresql14</code></li> <li><code>aurora-postgresql15</code></li> </ul>"},{"location":"Database/RDS/01-create-rds-multi-az/#engine-version_3","title":"Engine Version","text":"<code>11</code> versions <ul> <li><code>11.9</code></li> <li><code>11.13</code></li> <li><code>11.14</code></li> <li><code>11.15</code></li> <li><code>11.16</code></li> <li><code>11.17</code></li> <li><code>11.18</code></li> <li><code>11.19</code></li> </ul> <code>12</code> versions <ul> <li><code>12.8</code></li> <li><code>12.9</code></li> <li><code>12.10</code></li> <li><code>12.11</code></li> <li><code>12.12</code></li> <li><code>12.13</code></li> <li><code>12.14</code></li> </ul> <code>13</code> versions <ul> <li><code>13.4</code></li> <li><code>13.5</code></li> <li><code>13.6</code></li> <li><code>13.7</code></li> <li><code>13.8</code></li> <li><code>13.9</code></li> <li><code>13.10</code></li> </ul> <code>14</code> versions <ul> <li><code>14.3</code></li> <li><code>14.4</code></li> <li><code>14.5</code></li> <li><code>14.6</code></li> <li><code>14.7</code></li> </ul> <code>15</code> versions <ul> <li><code>15.2</code></li> </ul>"},{"location":"Database/RDS/01-create-rds-multi-az/#instance-type_2","title":"Instance Type","text":"<code>r4</code> series <ul> <li><code>db.r4.large</code></li> <li><code>db.r4.xlarge</code></li> <li><code>db.r4.2xlarge</code></li> <li><code>db.r4.4xlarge</code></li> <li><code>db.r4.8xlarge</code></li> <li><code>db.r4.16xlarge</code></li> </ul> <code>r5</code> series <ul> <li><code>db.r5.large</code></li> <li><code>db.r5.xlarge</code></li> <li><code>db.r5.2xlarge</code></li> <li><code>db.r5.4xlarge</code></li> <li><code>db.r5.8xlarge</code></li> <li><code>db.r5.12xlarge</code></li> <li><code>db.r5.16xlarge</code></li> <li><code>db.r5.24xlarge</code></li> </ul> <code>r6g</code> series <ul> <li><code>db.r6g.large</code></li> <li><code>db.r6g.xlarge</code></li> <li><code>db.r6g.2xlarge</code></li> <li><code>db.r6g.4xlarge</code></li> <li><code>db.r6g.8xlarge</code></li> <li><code>db.r6g.12xlarge</code></li> <li><code>db.r6g.16xlarge</code></li> </ul> <code>r6i</code> series <ul> <li><code>db.r6i.large</code></li> <li><code>db.r6i.xlarge</code></li> <li><code>db.r6i.2xlarge</code></li> <li><code>db.r6i.4xlarge</code></li> <li><code>db.r6i.8xlarge</code></li> <li><code>db.r6i.12xlarge</code></li> <li><code>db.r6i.16xlarge</code></li> <li><code>db.r6i.24xlarge</code></li> <li><code>db.r6i.32xlarge</code></li> </ul> <code>t3</code> series <ul> <li><code>db.t3.medium</code></li> <li><code>db.t3.large</code></li> </ul> <code>t4g</code> series <ul> <li><code>db.t4g.medium</code></li> <li><code>db.t4g.large</code></li> </ul>"},{"location":"Database/RDS/01-create-rds-multi-az/#commands_3","title":"Commands","text":"Linux Windows <pre><code>STACK_NAME=\"\"\nPROJECT_NAME=\"\"\nREGION=\"\"\n### Subnet Group Configuration\nSubnetGroupName=\"\"              # [REQUIRED] he name of this launch template.\nSubnets=\"\"                      # [REQUIRED] List of database subnet ids.\n### Parameter Group Configuration\nClusterParameterGroupName=\"\"    # [REQUIRED] Name of database cluster parameter group.\nParameterGroupName=\"\"           # [REQUIRED] Name of database parameter group.\nClusterParameterGroupFamily=\"\"  # [REQUIRED] Name of database cluster parameter group family.\n### Cluster Configuration - General\nClusterIdentifier=\"\"            # [REQUIRED] Identifier(name) used for database cluster.\nEngineVersion=\"\"                # [REQUIRED] EngineVersion for database. (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion)\nKmsKeyId=\"\"                     # [optional] Arn of kms key for database cluster. (If don't specify this property, use default key.)\nDeletionProtection=\"true\"       # `false`(default) or `true` | [optional] State for database deletion protection.\n### Cluster Configuration - Network\nVpcId=\"\"                        # [REQUIRED] ID of database vpc.\nPort=\"5432\"                     # [REQUIRED] Port number for database instance.\nCreateSecurityGroup=\"Yes\"       # `Yes`(default) or `No` | [REQUIRED] Create a new security group or using existed security group.\nSecurityGroupNameOrId=\"\"        # [REQUIRED] New security group name or existed security group id.\n### Cluster Configuration - Credential\nUsername=\"\"                     # [REQUIRED] Username for database access.\nPassword=\"\"                     # [REQUIRED] Password for database access.\n### Instance Configuration\nInstanceClass=\"\"                # [REQUIRED] Type of database instance type.\nInstance1Identifier=\"\"          # [REQUIRED] Identifier(name) used for database instance 1 (maybe writer)\nInstance2Identifier=\"\"          # [REQUIRED] Identifier(name) used for database instance 2 (maybe reader)\nMonitoringRoleName=\"\"           # [REQUIRED] Name of database monitoring iam role.\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/multi-az-cluster/aurora-postgresql-instance/rds-cluster.yaml\n\naws cloudformation deploy \\\n--template-file ./rds-cluster.yaml \\\n--stack-name $STACK_NAME \\\n--parameter-overrides \\\nProjectName=$PROJECT_NAME \\\nSubnetGroupName=$SubnetGroupName \\\nSubnets=$Subnets \\\nSecurityGroupIds=$SecurityGroupIds \\\nClusterParameterGroupName=$ClusterParameterGroupName \\\nParameterGroupName=$ParameterGroupName \\\nClusterParameterGroupFamily=$ClusterParameterGroupFamily \\\nClusterIdentifier=$ClusterIdentifier \\\nEngineVersion=$EngineVersion \\\nKmsKeyId=$KmsKeyId \\\nDeletionProtection=$DeletionProtection \\\nVpcId=$VpcId \\\nPort=$Port \\\nCreateSecurityGroup=$CreateSecurityGroup \\\nSecurityGroupNameOrId=$SecurityGroupNameOrId \\\nCreateSecurityGroup=$CreateSecurityGroup \\\nUsername=$Username \\\nPassword=$Password \\\nInstanceClass=$InstanceClass \\\nInstance1Identifier=$Instance1Identifier \\\nInstance2Identifier=$Instance2Identifier \\\nMonitoringRoleName=$MonitoringRoleName \\\n--disable-rollback \\\n--tags project=$PROJECT_NAME \\\n--capabilities CAPABILITY_NAMED_IAM \\\n--region $REGION\n</code></pre> <pre><code>$STACK_NAME=\"\"\n$PROJECT_NAME=\"\"\n$REGION=\"\"\n### Subnet Group Configuration\n$SubnetGroupName=\"\"             # [REQUIRED] he name of this launch template.\n$Subnets=\"\"                     # [REQUIRED] List of database subnet ids.\n### Parameter Group Configuration\n$ClusterParameterGroupName=\"\"   # [REQUIRED] Name of database cluster parameter group.\n$ParameterGroupName=\"\"          # [REQUIRED] Name of database parameter group.\n$ClusterParameterGroupFamily=\"\" # [REQUIRED] Name of database cluster parameter group family.\n### Cluster Configuration - General\n$ClusterIdentifier=\"\"           # [REQUIRED] Identifier(name) used for database cluster.\n$EngineVersion=\"\"               # [REQUIRED] EngineVersion for database. (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion)\n$KmsKeyId=\"\"                    # [optional] Arn of kms key for database cluster. (If don't specify this property, use default key.)\n$DeletionProtection=\"true\"      # `false`(default) or `true` | [optional] State for database deletion protection.\n### Cluster Configuration - Network\n$VpcId=\"\"                       # [REQUIRED] ID of database vpc.\n$Port=\"5432\"                    # [REQUIRED] Port number for database instance.\n$CreateSecurityGroup=\"Yes\"      # `Yes`(default) or `No` | [REQUIRED] Create a new security group or using existed security group.\n$SecurityGroupNameOrId=\"\"       # [REQUIRED] New security group name or existed security group id.\n### Cluster Configuration - Credential\n$Username=\"\"                    # [REQUIRED] Username for database access.\n$Password=\"\"                    # [REQUIRED] Password for database access.\n### Instance Configuration\n$InstanceClass=\"\"               # [REQUIRED] Type of database instance type.\n$Instance1Identifier=\"\"         # [REQUIRED] Identifier(name) used for database instance 1 (maybe writer)\n$Instance2Identifier=\"\"         # [REQUIRED] Identifier(name) used for database instance 2 (maybe reader)\n$MonitoringRoleName=\"\"          # [REQUIRED] Name of database monitoring iam role.\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/multi-az-cluster/aurora-postgresql-instance/rds-cluster.yaml\naws cloudformation deploy `\n--template-file ./rds-cluster.yaml `\n--stack-name $STACK_NAME `\n--parameter-overrides `\nProjectName=$PROJECT_NAME `\nSubnetGroupName=$SubnetGroupName `\nSubnets=$Subnets `\nSecurityGroupIds=$SecurityGroupIds `\nClusterParameterGroupName=$ClusterParameterGroupName `\nParameterGroupName=$ParameterGroupName `\nClusterParameterGroupFamily=$ClusterParameterGroupFamily `\nClusterIdentifier=$ClusterIdentifier `\nEngineVersion=$EngineVersion `\nKmsKeyId=$KmsKeyId `\nDeletionProtection=$DeletionProtection `\nVpcId=$VpcId `\nPort=$Port `\nCreateSecurityGroup=$CreateSecurityGroup `\nSecurityGroupNameOrId=$SecurityGroupNameOrId `\nCreateSecurityGroup=$CreateSecurityGroup `\nUsername=$Username `\nPassword=$Password `\nInstanceClass=$InstanceClass `\nInstance1Identifier=$Instance1Identifier `\nInstance2Identifier=$Instance2Identifier `\nMonitoringRoleName=$MonitoringRoleName `\n--disable-rollback `\n--tags project=$PROJECT_NAME `\n--capabilities CAPABILITY_NAMED_IAM `\n--region $REGION\n</code></pre>"},{"location":"Database/RDS/01-create-rds-multi-az/#aurora-postgresql-serverless","title":"Aurora PostgreSQL Serverless","text":""},{"location":"Database/RDS/01-create-rds-multi-az/#cluster-parameter-group-family_1","title":"Cluster Parameter Group Family","text":"<ul> <li><code>aurora-postgresql13</code></li> <li><code>aurora-postgresql14</code></li> <li><code>aurora-postgresql15</code></li> </ul>"},{"location":"Database/RDS/01-create-rds-multi-az/#engine-version_4","title":"Engine Version","text":"<code>13</code> versions <ul> <li><code>13.6</code></li> <li><code>13.7</code></li> <li><code>13.8</code></li> <li><code>13.9</code></li> <li><code>13.10</code></li> </ul> <code>14</code> versions <ul> <li><code>14.3</code></li> <li><code>14.4</code></li> <li><code>14.5</code></li> <li><code>14.6</code></li> <li><code>14.7</code></li> </ul> <code>15</code> versions <ul> <li><code>15.2</code></li> </ul>"},{"location":"Database/RDS/01-create-rds-multi-az/#commands_4","title":"Commands","text":"Linux Windows <pre><code>STACK_NAME=\"\"\nPROJECT_NAME=\"\"\nREGION=\"\"\n### Subnet Group Configuration\nSubnetGroupName=\"\"              # [REQUIRED] he name of this launch template.\nSubnets=\"\"                      # [REQUIRED] List of database subnet ids.\n### Parameter Group Configuration\nClusterParameterGroupName=\"\"    # [REQUIRED] Name of database cluster parameter group.\nParameterGroupName=\"\"           # [REQUIRED] Name of database parameter group.\nClusterParameterGroupFamily=\"\"  # [REQUIRED] Name of database cluster parameter group family.\n### Cluster Configuration - General\nClusterIdentifier=\"\"            # [REQUIRED] Identifier(name) used for database cluster.\nEngineVersion=\"\"                # [REQUIRED] EngineVersion for database. (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion)\nKmsKeyId=\"\"                     # [optional] Arn of kms key for database cluster. (If don't specify this property, use default key.)\nDeletionProtection=\"true\"       # `false`(default) or `true` | [optional] State for database deletion protection.\n### Cluster Configuration - Network\nVpcId=\"\"                        # [REQUIRED] ID of database vpc.\nPort=\"5432\"                     # [REQUIRED] Port number for database instance.\nCreateSecurityGroup=\"Yes\"       # `Yes`(default) or `No` | [REQUIRED] Create a new security group or using existed security group.\nSecurityGroupNameOrId=\"\"        # [REQUIRED] New security group name or existed security group id.\n### Cluster Configuration - Credential\nUsername=\"\"                     # [REQUIRED] Username for database access.\nPassword=\"\"                     # [REQUIRED] Password for database access.\n### Cluster Configuration - Capacity\nMinCapacity=\"\"                  # [REQUIRED] Min capacity of serverless cluster. (0.5 ~ 128)\nMaxCapacity=\"\"                  # [REQUIRED] Max capacity of serverless cluster. (1 ~ 128)\n### Instance Configuration\nInstance1Identifier=\"\"          # [REQUIRED] Identifier(name) used for database instance 1 (maybe writer)\nInstance2Identifier=\"\"          # [REQUIRED] Identifier(name) used for database instance 2 (maybe reader)\nMonitoringRoleName=\"\"           # [REQUIRED] Name of database monitoring iam role.\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/multi-az-cluster/aurora-postgresql-serverless/rds-cluster.yaml\n\naws cloudformation deploy \\\n--template-file ./rds-cluster.yaml \\\n--stack-name $STACK_NAME \\\n--parameter-overrides \\\nProjectName=$PROJECT_NAME \\\nSubnetGroupName=$SubnetGroupName \\\nSubnets=$Subnets \\\nSecurityGroupIds=$SecurityGroupIds \\\nClusterParameterGroupName=$ClusterParameterGroupName \\\nParameterGroupName=$ParameterGroupName \\\nClusterParameterGroupFamily=$ClusterParameterGroupFamily \\\nClusterIdentifier=$ClusterIdentifier \\\nEngineVersion=$EngineVersion \\\nKmsKeyId=$KmsKeyId \\\nDeletionProtection=$DeletionProtection \\\nVpcId=$VpcId \\\nPort=$Port \\\nCreateSecurityGroup=$CreateSecurityGroup \\\nSecurityGroupNameOrId=$SecurityGroupNameOrId \\\nCreateSecurityGroup=$CreateSecurityGroup \\\nUsername=$Username \\\nPassword=$Password \\\nMinCapacity=$MinCapacity \\\nMaxCapacity=$MaxCapacity \\\nInstance1Identifier=$Instance1Identifier \\\nInstance2Identifier=$Instance2Identifier \\\nMonitoringRoleName=$MonitoringRoleName \\\n--disable-rollback \\\n--tags project=$PROJECT_NAME \\\n--capabilities CAPABILITY_NAMED_IAM \\\n--region $REGION\n</code></pre> <pre><code>$STACK_NAME=\"\"\n$PROJECT_NAME=\"\"\n$REGION=\"\"\n### Subnet Group Configuration\n$SubnetGroupName=\"\"             # [REQUIRED] he name of this launch template.\n$Subnets=\"\"                     # [REQUIRED] List of database subnet ids.\n### Parameter Group Configuration\n$ClusterParameterGroupName=\"\"   # [REQUIRED] Name of database cluster parameter group.\n$ParameterGroupName=\"\"          # [REQUIRED] Name of database parameter group.\n$ClusterParameterGroupFamily=\"\" # [REQUIRED] Name of database cluster parameter group family.\n### Cluster Configuration - General\n$ClusterIdentifier=\"\"           # [REQUIRED] Identifier(name) used for database cluster.\n$EngineVersion=\"\"               # [REQUIRED] EngineVersion for database. (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion)\n$KmsKeyId=\"\"                    # [optional] Arn of kms key for database cluster. (If don't specify this property, use default key.)\n$DeletionProtection=\"true\"      # `false`(default) or `true` | [optional] State for database deletion protection.\n### Cluster Configuration - Network\n$VpcId=\"\"                       # [REQUIRED] ID of database vpc.\n$Port=\"5432\"                    # [REQUIRED] Port number for database instance.\n$CreateSecurityGroup=\"Yes\"      # `Yes`(default) or `No` | [REQUIRED] Create a new security group or using existed security group.\n$SecurityGroupNameOrId=\"\"       # [REQUIRED] New security group name or existed security group id.\n### Cluster Configuration - Credential\n$Username=\"\"                    # [REQUIRED] Username for database access.\n$Password=\"\"                    # [REQUIRED] Password for database access.\n### Cluster Configuration - Capacity\n$MinCapacity=\"\"                 # [REQUIRED] Min capacity of serverless cluster. (0.5 ~ 128)\n$MaxCapacity=\"\"                 # [REQUIRED] Max capacity of serverless cluster. (1 ~ 128)\n### Instance Configuration\n$Instance1Identifier=\"\"         # [REQUIRED] Identifier(name) used for database instance 1 (maybe writer)\n$Instance2Identifier=\"\"         # [REQUIRED] Identifier(name) used for database instance 2 (maybe reader)\n$MonitoringRoleName=\"\"          # [REQUIRED] Name of database monitoring iam role.\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/multi-az-cluster/aurora-postgresql-serverless/rds-cluster.yaml\naws cloudformation deploy `\n--template-file ./rds-cluster.yaml `\n--stack-name $STACK_NAME `\n--parameter-overrides `\nProjectName=$PROJECT_NAME `\nSubnetGroupName=$SubnetGroupName `\nSubnets=$Subnets `\nSecurityGroupIds=$SecurityGroupIds `\nClusterParameterGroupName=$ClusterParameterGroupName `\nParameterGroupName=$ParameterGroupName `\nClusterParameterGroupFamily=$ClusterParameterGroupFamily `\nClusterIdentifier=$ClusterIdentifier `\nEngineVersion=$EngineVersion `\nKmsKeyId=$KmsKeyId `\nDeletionProtection=$DeletionProtection `\nVpcId=$VpcId `\nPort=$Port `\nCreateSecurityGroup=$CreateSecurityGroup `\nSecurityGroupNameOrId=$SecurityGroupNameOrId `\nCreateSecurityGroup=$CreateSecurityGroup `\nUsername=$Username `\nPassword=$Password `\nMinCapacity=$MinCapacity `\nMaxCapacity=$MaxCapacity `\nInstance1Identifier=$Instance1Identifier `\nInstance2Identifier=$Instance2Identifier `\nMonitoringRoleName=$MonitoringRoleName `\n--disable-rollback `\n--tags project=$PROJECT_NAME `\n--capabilities CAPABILITY_NAMED_IAM `\n--region $REGION\n</code></pre>"},{"location":"Database/RDS/02-create-aurora-global-database/","title":"Create Aurora Global Database","text":""},{"location":"Database/RDS/02-create-aurora-global-database/#mysql-57","title":"MySQL 5.7","text":""},{"location":"Database/RDS/02-create-aurora-global-database/#engine-version","title":"Engine Version","text":"<ul> <li><code>5.7.mysql_aurora.2.07.0</code></li> <li><code>5.7.mysql_aurora.2.07.1</code></li> <li><code>5.7.mysql_aurora.2.07.2</code></li> <li><code>5.7.mysql_aurora.2.07.3</code></li> <li><code>5.7.mysql_aurora.2.07.4</code></li> <li><code>5.7.mysql_aurora.2.07.5</code></li> <li><code>5.7.mysql_aurora.2.07.6</code></li> <li><code>5.7.mysql_aurora.2.07.7</code></li> <li><code>5.7.mysql_aurora.2.07.8</code></li> <li><code>5.7.mysql_aurora.2.07.9</code></li> <li><code>5.7.mysql_aurora.2.11.1</code></li> <li><code>5.7.mysql_aurora.2.11.2</code></li> </ul>"},{"location":"Database/RDS/02-create-aurora-global-database/#instance-type","title":"Instance Type","text":"<code>r3</code> series <ul> <li><code>db.r3.large</code></li> <li><code>db.r3.xlarge</code></li> <li><code>db.r3.2xlarge</code></li> <li><code>db.r3.4xlarge</code></li> <li><code>db.r3.8xlarge</code></li> </ul> <code>r4</code> series <ul> <li><code>db.r4.large</code></li> <li><code>db.r4.xlarge</code></li> <li><code>db.r4.2xlarge</code></li> <li><code>db.r4.4xlarge</code></li> <li><code>db.r4.8xlarge</code></li> <li><code>db.r4.16xlarge</code></li> </ul> <code>r5</code> series <ul> <li><code>db.r5.large</code></li> <li><code>db.r5.xlarge</code></li> <li><code>db.r5.2xlarge</code></li> <li><code>db.r5.4xlarge</code></li> <li><code>db.r5.8xlarge</code></li> <li><code>db.r5.12xlarge</code></li> <li><code>db.r5.16xlarge</code></li> <li><code>db.r5.24xlarge</code></li> </ul> <code>r6g</code> series <ul> <li><code>db.r6g.large</code></li> <li><code>db.r6g.xlarge</code></li> <li><code>db.r6g.2xlarge</code></li> <li><code>db.r6g.4xlarge</code></li> <li><code>db.r6g.8xlarge</code></li> <li><code>db.r6g.12xlarge</code></li> <li><code>db.r6g.16xlarge</code></li> </ul> <code>r6i</code> series <ul> <li><code>db.r6i.large</code></li> <li><code>db.r6i.xlarge</code></li> <li><code>db.r6i.2xlarge</code></li> <li><code>db.r6i.4xlarge</code></li> <li><code>db.r6i.8xlarge</code></li> <li><code>db.r6i.12xlarge</code></li> <li><code>db.r6i.16xlarge</code></li> <li><code>db.r6i.24xlarge</code></li> <li><code>db.r6i.32xlarge</code></li> </ul>"},{"location":"Database/RDS/02-create-aurora-global-database/#primary","title":"Primary","text":"Linux Windows <pre><code>STACK_NAME=\"\"\nPROJECT_NAME=\"\"\nREGION=\"\"\n### Subnet Group Configuration\nSubnetGroupName=\"\"              # [REQUIRED] he name of this launch template.\nSubnets=\"\"                      # [REQUIRED] List of database subnet ids.\n### Parameter Group Configuration\nClusterParameterGroupName=\"\"    # [REQUIRED] Name of database cluster parameter group.\nParameterGroupName=\"\"           # [REQUIRED] Name of database parameter group.\n### Global Cluster Configuration\nGlobalClusterIdentifier=\"\"      # [REQUIRED] Identifier(name) used for global database cluster.\n### Cluster Configuration - General\nClusterIdentifier=\"\"            # [REQUIRED] Identifier(name) used for database cluster.\nEngineVersion=\"\"                # [REQUIRED] EngineVersion for database. (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion)\nKmsKeyId=\"\"                     # [optional] Arn of kms key for database cluster. (If don't specify this property, use default key.)\nDeletionProtection=\"true\"       # `false`(default) or `true` | [optional] State for database deletion protection.\n### Cluster Configuration - Network\nVpcId=\"\"                        # [REQUIRED] ID of database vpc.\nPort=\"3306\"                     # [REQUIRED] Port number for database instance.\nCreateSecurityGroup=\"Yes\"       # `Yes`(default) or `No` | [REQUIRED] Create a new security group or using existed security group.\nSecurityGroupNameOrId=\"\"        # [REQUIRED] New security group name or existed security group id.\n### Cluster Configuration - Credential\nUsername=\"\"                     # [REQUIRED] Username for database access.\nPassword=\"\"                     # [REQUIRED] Password for database access.\n### Instance Configuration\nInstanceClass=\"\"                # [REQUIRED] Type of database instance type.\nInstance1Identifier=\"\"          # [REQUIRED] Identifier(name) used for database instance 1 (maybe writer)\nInstance2Identifier=\"\"          # [REQUIRED] Identifier(name) used for database instance 2 (maybe reader)\nMonitoringRoleName=\"\"           # [REQUIRED] Name of database monitoring iam role.\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/global-db-cluster/aurora-mysql-5.7/aurora-primary.yaml\n\naws cloudformation deploy \\\n--template-file ./aurora-primary.yaml \\\n--stack-name $STACK_NAME \\\n--parameter-overrides \\\nProjectName=$PROJECT_NAME \\\nSubnetGroupName=$SubnetGroupName \\\nSubnets=$Subnets \\\nSecurityGroupIds=$SecurityGroupIds \\\nClusterParameterGroupName=$ClusterParameterGroupName \\\nParameterGroupName=$ParameterGroupName \\\nGlobalClusterIdentifier=$GlobalClusterIdentifier \\\nClusterIdentifier=$ClusterIdentifier \\\nEngineVersion=$EngineVersion \\\nKmsKeyId=$KmsKeyId \\\nDeletionProtection=$DeletionProtection \\\nVpcId=$VpcId \\\nPort=$Port \\\nCreateSecurityGroup=$CreateSecurityGroup \\\nSecurityGroupNameOrId=$SecurityGroupNameOrId \\\nCreateSecurityGroup=$CreateSecurityGroup \\\nUsername=$Username \\\nPassword=$Password \\\nInstanceClass=$InstanceClass \\\nInstance1Identifier=$Instance1Identifier \\\nInstance2Identifier=$Instance2Identifier \\\nMonitoringRoleName=$MonitoringRoleName \\\n--disable-rollback \\\n--tags project=$PROJECT_NAME \\\n--capabilities CAPABILITY_NAMED_IAM \\\n--region $REGION\n</code></pre> <pre><code>$STACK_NAME=\"\"\n$PROJECT_NAME=\"\"\n$REGION=\"\"\n### Subnet Group Configuration\n$SubnetGroupName=\"\"             # [REQUIRED] he name of this launch template.\n$Subnets=\"\"                     # [REQUIRED] List of database subnet ids.\n### Parameter Group Configuration\n$ClusterParameterGroupName=\"\"   # [REQUIRED] Name of database cluster parameter group.\n$ParameterGroupName=\"\"          # [REQUIRED] Name of database parameter group.\n### Global Cluster Configuration\n$GlobalClusterIdentifier=\"\"     # [REQUIRED] Identifier(name) used for global database cluster.\n### Cluster Configuration - General\n$ClusterIdentifier=\"\"           # [REQUIRED] Identifier(name) used for database cluster.\n$EngineVersion=\"\"               # [REQUIRED] EngineVersion for database. (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion)\n$KmsKeyId=\"\"                    # [optional] Arn of kms key for database cluster. (If don't specify this property, use default key.)\n$DeletionProtection=\"true\"      # `false`(default) or `true` | [optional] State for database deletion protection.\n### Cluster Configuration - Network\n$VpcId=\"\"                       # [REQUIRED] ID of database vpc.\n$Port=\"3306\"                    # [REQUIRED] Port number for database instance.\n$CreateSecurityGroup=\"Yes\"      # `Yes`(default) or `No` | [REQUIRED] Create a new security group or using existed security group.\n$SecurityGroupNameOrId=\"\"       # [REQUIRED] New security group name or existed security group id.\n### Cluster Configuration - Credential\n$Username=\"\"                    # [REQUIRED] Username for database access.\n$Password=\"\"                    # [REQUIRED] Password for database access.\n### Instance Configuration\n$InstanceClass=\"\"               # [REQUIRED] Type of database instance type.\n$Instance1Identifier=\"\"         # [REQUIRED] Identifier(name) used for database instance 1 (maybe writer)\n$Instance2Identifier=\"\"         # [REQUIRED] Identifier(name) used for database instance 2 (maybe reader)\n$MonitoringRoleName=\"\"          # [REQUIRED] Name of database monitoring iam role.\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/global-db-cluster/aurora-mysql-5.7/aurora-primary.yaml\naws cloudformation deploy `\n--template-file ./aurora-primary.yaml `\n--stack-name $STACK_NAME `\n--parameter-overrides `\nProjectName=$PROJECT_NAME `\nSubnetGroupName=$SubnetGroupName `\nSubnets=$Subnets `\nSecurityGroupIds=$SecurityGroupIds `\nClusterParameterGroupName=$ClusterParameterGroupName `\nParameterGroupName=$ParameterGroupName `\nGlobalClusterIdentifier=$GlobalClusterIdentifier `\nClusterIdentifier=$ClusterIdentifier `\nEngineVersion=$EngineVersion `\nKmsKeyId=$KmsKeyId `\nDeletionProtection=$DeletionProtection `\nVpcId=$VpcId `\nPort=$Port `\nCreateSecurityGroup=$CreateSecurityGroup `\nSecurityGroupNameOrId=$SecurityGroupNameOrId `\nCreateSecurityGroup=$CreateSecurityGroup `\nUsername=$Username `\nPassword=$Password `\nInstanceClass=$InstanceClass `\nInstance1Identifier=$Instance1Identifier `\nInstance2Identifier=$Instance2Identifier `\nMonitoringRoleName=$MonitoringRoleName `\n--disable-rollback `\n--tags project=$PROJECT_NAME `\n--capabilities CAPABILITY_NAMED_IAM `\n--region $REGION\n</code></pre>"},{"location":"Database/RDS/02-create-aurora-global-database/#replica","title":"Replica","text":"Linux Windows <pre><code>STACK_NAME=\"\"\nPROJECT_NAME=\"\"\nREGION=\"\"\n### Subnet Group Configuration\nSubnetGroupName=\"\"              # [REQUIRED] he name of this launch template.\nSubnets=\"\"                      # [REQUIRED] List of database subnet ids.\n### Parameter Group Configuration\nClusterParameterGroupName=\"\"    # [REQUIRED] Name of database cluster parameter group.\nParameterGroupName=\"\"           # [REQUIRED] Name of database parameter group.\n### Global Cluster Configuration\nGlobalClusterIdentifier=\"\"      # [REQUIRED] Identifier(name) used for global database cluster.\n### Cluster Configuration - General\nClusterIdentifier=\"\"            # [REQUIRED] Identifier(name) used for database cluster.\nEngineVersion=\"\"                # [REQUIRED] EngineVersion for database. (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion)\nKmsKeyId=\"\"                     # [optional] Arn of kms key for database cluster. (If don't specify this property, use default key.)\nDeletionProtection=\"true\"       # `false`(default) or `true` | [optional] State for database deletion protection.\n### Cluster Configuration - Network\nVpcId=\"\"                        # [REQUIRED] ID of database vpc.\nPort=\"3306\"                     # [REQUIRED] Port number for database instance.\nCreateSecurityGroup=\"Yes\"       # `Yes`(default) or `No` | [REQUIRED] Create a new security group or using existed security group.\nSecurityGroupNameOrId=\"\"        # [REQUIRED] New security group name or existed security group id.\n### Instance Configuration\nInstanceClass=\"\"                # [REQUIRED] Type of database instance type.\nInstance1Identifier=\"\"          # [REQUIRED] Identifier(name) used for database instance 1 (maybe writer)\nInstance2Identifier=\"\"          # [REQUIRED] Identifier(name) used for database instance 2 (maybe reader)\nMonitoringRoleName=\"\"           # [REQUIRED] Name of database monitoring iam role.\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/global-db-cluster/aurora-mysql-5.7/aurora-replica.yaml\n\naws cloudformation deploy \\\n--template-file ./aurora-replica.yaml \\\n--stack-name $STACK_NAME \\\n--parameter-overrides \\\nProjectName=$PROJECT_NAME \\\nSubnetGroupName=$SubnetGroupName \\\nSubnets=$Subnets \\\nSecurityGroupIds=$SecurityGroupIds \\\nClusterParameterGroupName=$ClusterParameterGroupName \\\nParameterGroupName=$ParameterGroupName \\\nGlobalClusterIdentifier=$GlobalClusterIdentifier \\\nClusterIdentifier=$ClusterIdentifier \\\nEngineVersion=$EngineVersion \\\nKmsKeyId=$KmsKeyId \\\nDeletionProtection=$DeletionProtection \\\nVpcId=$VpcId \\\nPort=$Port \\\nCreateSecurityGroup=$CreateSecurityGroup \\\nSecurityGroupNameOrId=$SecurityGroupNameOrId \\\nCreateSecurityGroup=$CreateSecurityGroup \\\nInstanceClass=$InstanceClass \\\nInstance1Identifier=$Instance1Identifier \\\nInstance2Identifier=$Instance2Identifier \\\nMonitoringRoleName=$MonitoringRoleName \\\n--disable-rollback \\\n--tags project=$PROJECT_NAME \\\n--capabilities CAPABILITY_NAMED_IAM \\\n--region $REGION\n</code></pre> <pre><code>$STACK_NAME=\"\"\n$PROJECT_NAME=\"\"\n$REGION=\"\"\n### Subnet Group Configuration\n$SubnetGroupName=\"\"             # [REQUIRED] he name of this launch template.\n$Subnets=\"\"                     # [REQUIRED] List of database subnet ids.\n### Parameter Group Configuration\n$ClusterParameterGroupName=\"\"   # [REQUIRED] Name of database cluster parameter group.\n$ParameterGroupName=\"\"          # [REQUIRED] Name of database parameter group.\n### Global Cluster Configuration\n$GlobalClusterIdentifier=\"\"     # [REQUIRED] Identifier(name) used for global database cluster.\n### Cluster Configuration - General\n$ClusterIdentifier=\"\"           # [REQUIRED] Identifier(name) used for database cluster.\n$EngineVersion=\"\"               # [REQUIRED] EngineVersion for database. (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion)\n$KmsKeyId=\"\"                    # [optional] Arn of kms key for database cluster. (If don't specify this property, use default key.)\n$DeletionProtection=\"true\"      # `false`(default) or `true` | [optional] State for database deletion protection.\n### Cluster Configuration - Network\n$VpcId=\"\"                       # [REQUIRED] ID of database vpc.\n$Port=\"3306\"                    # [REQUIRED] Port number for database instance.\n$CreateSecurityGroup=\"Yes\"      # `Yes`(default) or `No` | [REQUIRED] Create a new security group or using existed security group.\n$SecurityGroupNameOrId=\"\"       # [REQUIRED] New security group name or existed security group id.\n### Instance Configuration\n$InstanceClass=\"\"               # [REQUIRED] Type of database instance type.\n$Instance1Identifier=\"\"         # [REQUIRED] Identifier(name) used for database instance 1 (maybe writer)\n$Instance2Identifier=\"\"         # [REQUIRED] Identifier(name) used for database instance 2 (maybe reader)\n$MonitoringRoleName=\"\"          # [REQUIRED] Name of database monitoring iam role.\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/global-db-cluster/aurora-mysql-5.7/aurora-replica.yaml\naws cloudformation deploy `\n--template-file ./aurora-replica.yaml `\n--stack-name $STACK_NAME `\n--parameter-overrides `\nProjectName=$PROJECT_NAME `\nSubnetGroupName=$SubnetGroupName `\nSubnets=$Subnets `\nSecurityGroupIds=$SecurityGroupIds `\nClusterParameterGroupName=$ClusterParameterGroupName `\nParameterGroupName=$ParameterGroupName `\nGlobalClusterIdentifier=$GlobalClusterIdentifier `\nClusterIdentifier=$ClusterIdentifier `\nEngineVersion=$EngineVersion `\nKmsKeyId=$KmsKeyId `\nDeletionProtection=$DeletionProtection `\nVpcId=$VpcId `\nPort=$Port `\nCreateSecurityGroup=$CreateSecurityGroup `\nSecurityGroupNameOrId=$SecurityGroupNameOrId `\nCreateSecurityGroup=$CreateSecurityGroup `\nInstanceClass=$InstanceClass `\nInstance1Identifier=$Instance1Identifier `\nInstance2Identifier=$Instance2Identifier `\nMonitoringRoleName=$MonitoringRoleName `\n--disable-rollback `\n--tags project=$PROJECT_NAME `\n--capabilities CAPABILITY_NAMED_IAM `\n--region $REGION\n</code></pre>"},{"location":"Database/RDS/02-create-aurora-global-database/#mysql-80","title":"MySQL 8.0","text":""},{"location":"Database/RDS/02-create-aurora-global-database/#engine-version_1","title":"Engine Version","text":"<ul> <li><code>8.0.mysql_aurora.3.01.0</code></li> <li><code>8.0.mysql_aurora.3.01.1</code></li> <li><code>8.0.mysql_aurora.3.02.0</code></li> <li><code>8.0.mysql_aurora.3.02.1</code></li> <li><code>8.0.mysql_aurora.3.02.2</code></li> <li><code>8.0.mysql_aurora.3.02.3</code></li> <li><code>8.0.mysql_aurora.3.03.0</code></li> <li><code>8.0.mysql_aurora.3.03.1</code></li> </ul>"},{"location":"Database/RDS/02-create-aurora-global-database/#instance-type_1","title":"Instance Type","text":"<code>r5</code> series <ul> <li><code>db.r5.large</code></li> <li><code>db.r5.xlarge</code></li> <li><code>db.r5.2xlarge</code></li> <li><code>db.r5.4xlarge</code></li> <li><code>db.r5.8xlarge</code></li> <li><code>db.r5.12xlarge</code></li> <li><code>db.r5.16xlarge</code></li> <li><code>db.r5.24xlarge</code></li> </ul> <code>r6g</code> series <ul> <li><code>db.r6g.large</code></li> <li><code>db.r6g.xlarge</code></li> <li><code>db.r6g.2xlarge</code></li> <li><code>db.r6g.4xlarge</code></li> <li><code>db.r6g.8xlarge</code></li> <li><code>db.r6g.12xlarge</code></li> <li><code>db.r6g.16xlarge</code></li> </ul> <code>r6i</code> series <ul> <li><code>db.r6i.large</code></li> <li><code>db.r6i.xlarge</code></li> <li><code>db.r6i.2xlarge</code></li> <li><code>db.r6i.4xlarge</code></li> <li><code>db.r6i.8xlarge</code></li> <li><code>db.r6i.12xlarge</code></li> <li><code>db.r6i.16xlarge</code></li> <li><code>db.r6i.24xlarge</code></li> <li><code>db.r6i.32xlarge</code></li> </ul>"},{"location":"Database/RDS/02-create-aurora-global-database/#primary_1","title":"Primary","text":"Linux Windows <pre><code>STACK_NAME=\"\"\nPROJECT_NAME=\"\"\nREGION=\"\"\n### Subnet Group Configuration\nSubnetGroupName=\"\"              # [REQUIRED] he name of this launch template.\nSubnets=\"\"                      # [REQUIRED] List of database subnet ids.\n### Parameter Group Configuration\nClusterParameterGroupName=\"\"    # [REQUIRED] Name of database cluster parameter group.\nParameterGroupName=\"\"           # [REQUIRED] Name of database parameter group.\n### Global Cluster Configuration\nGlobalClusterIdentifier=\"\"      # [REQUIRED] Identifier(name) used for global database cluster.\n### Cluster Configuration - General\nClusterIdentifier=\"\"            # [REQUIRED] Identifier(name) used for database cluster.\nEngineVersion=\"\"                # [REQUIRED] EngineVersion for database. (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion)\nKmsKeyId=\"\"                     # [optional] Arn of kms key for database cluster. (If don't specify this property, use default key.)\nDeletionProtection=\"true\"       # `false`(default) or `true` | [optional] State for database deletion protection.\n### Cluster Configuration - Network\nVpcId=\"\"                        # [REQUIRED] ID of database vpc.\nPort=\"3306\"                     # [REQUIRED] Port number for database instance.\nCreateSecurityGroup=\"Yes\"       # `Yes`(default) or `No` | [REQUIRED] Create a new security group or using existed security group.\nSecurityGroupNameOrId=\"\"        # [REQUIRED] New security group name or existed security group id.\n### Cluster Configuration - Credential\nUsername=\"\"                     # [REQUIRED] Username for database access.\nPassword=\"\"                     # [REQUIRED] Password for database access.\n### Instance Configuration\nInstanceClass=\"\"                # [REQUIRED] Type of database instance type.\nInstance1Identifier=\"\"          # [REQUIRED] Identifier(name) used for database instance 1 (maybe writer)\nInstance2Identifier=\"\"          # [REQUIRED] Identifier(name) used for database instance 2 (maybe reader)\nMonitoringRoleName=\"\"           # [REQUIRED] Name of database monitoring iam role.\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/global-db-cluster/aurora-mysql-8.0-instance/aurora-primary.yaml\n\naws cloudformation deploy \\\n--template-file ./aurora-primary.yaml \\\n--stack-name $STACK_NAME \\\n--parameter-overrides \\\nProjectName=$PROJECT_NAME \\\nSubnetGroupName=$SubnetGroupName \\\nSubnets=$Subnets \\\nSecurityGroupIds=$SecurityGroupIds \\\nClusterParameterGroupName=$ClusterParameterGroupName \\\nParameterGroupName=$ParameterGroupName \\\nGlobalClusterIdentifier=$GlobalClusterIdentifier \\\nClusterIdentifier=$ClusterIdentifier \\\nEngineVersion=$EngineVersion \\\nKmsKeyId=$KmsKeyId \\\nDeletionProtection=$DeletionProtection \\\nVpcId=$VpcId \\\nPort=$Port \\\nCreateSecurityGroup=$CreateSecurityGroup \\\nSecurityGroupNameOrId=$SecurityGroupNameOrId \\\nCreateSecurityGroup=$CreateSecurityGroup \\\nUsername=$Username \\\nPassword=$Password \\\nInstanceClass=$InstanceClass \\\nInstance1Identifier=$Instance1Identifier \\\nInstance2Identifier=$Instance2Identifier \\\nMonitoringRoleName=$MonitoringRoleName \\\n--disable-rollback \\\n--tags project=$PROJECT_NAME \\\n--capabilities CAPABILITY_NAMED_IAM \\\n--region $REGION\n</code></pre> <pre><code>$STACK_NAME=\"\"\n$PROJECT_NAME=\"\"\n$REGION=\"\"\n### Subnet Group Configuration\n$SubnetGroupName=\"\"             # [REQUIRED] he name of this launch template.\n$Subnets=\"\"                     # [REQUIRED] List of database subnet ids.\n### Parameter Group Configuration\n$ClusterParameterGroupName=\"\"   # [REQUIRED] Name of database cluster parameter group.\n$ParameterGroupName=\"\"          # [REQUIRED] Name of database parameter group.\n### Global Cluster Configuration\n$GlobalClusterIdentifier=\"\"     # [REQUIRED] Identifier(name) used for global database cluster.\n### Cluster Configuration - General\n$ClusterIdentifier=\"\"           # [REQUIRED] Identifier(name) used for database cluster.\n$EngineVersion=\"\"               # [REQUIRED] EngineVersion for database. (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion)\n$KmsKeyId=\"\"                    # [optional] Arn of kms key for database cluster. (If don't specify this property, use default key.)\n$DeletionProtection=\"true\"      # `false`(default) or `true` | [optional] State for database deletion protection.\n### Cluster Configuration - Network\n$VpcId=\"\"                       # [REQUIRED] ID of database vpc.\n$Port=\"3306\"                    # [REQUIRED] Port number for database instance.\n$CreateSecurityGroup=\"Yes\"      # `Yes`(default) or `No` | [REQUIRED] Create a new security group or using existed security group.\n$SecurityGroupNameOrId=\"\"       # [REQUIRED] New security group name or existed security group id.\n### Cluster Configuration - Credential\n$Username=\"\"                    # [REQUIRED] Username for database access.\n$Password=\"\"                    # [REQUIRED] Password for database access.\n### Instance Configuration\n$InstanceClass=\"\"               # [REQUIRED] Type of database instance type.\n$Instance1Identifier=\"\"         # [REQUIRED] Identifier(name) used for database instance 1 (maybe writer)\n$Instance2Identifier=\"\"         # [REQUIRED] Identifier(name) used for database instance 2 (maybe reader)\n$MonitoringRoleName=\"\"          # [REQUIRED] Name of database monitoring iam role.\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/global-db-cluster/aurora-mysql-8.0-instance/aurora-primary.yaml\naws cloudformation deploy `\n--template-file ./aurora-primary.yaml `\n--stack-name $STACK_NAME `\n--parameter-overrides `\nProjectName=$PROJECT_NAME `\nSubnetGroupName=$SubnetGroupName `\nSubnets=$Subnets `\nSecurityGroupIds=$SecurityGroupIds `\nClusterParameterGroupName=$ClusterParameterGroupName `\nParameterGroupName=$ParameterGroupName `\nGlobalClusterIdentifier=$GlobalClusterIdentifier `\nClusterIdentifier=$ClusterIdentifier `\nEngineVersion=$EngineVersion `\nKmsKeyId=$KmsKeyId `\nDeletionProtection=$DeletionProtection `\nVpcId=$VpcId `\nPort=$Port `\nCreateSecurityGroup=$CreateSecurityGroup `\nSecurityGroupNameOrId=$SecurityGroupNameOrId `\nCreateSecurityGroup=$CreateSecurityGroup `\nUsername=$Username `\nPassword=$Password `\nInstanceClass=$InstanceClass `\nInstance1Identifier=$Instance1Identifier `\nInstance2Identifier=$Instance2Identifier `\nMonitoringRoleName=$MonitoringRoleName `\n--disable-rollback `\n--tags project=$PROJECT_NAME `\n--capabilities CAPABILITY_NAMED_IAM `\n--region $REGION\n</code></pre>"},{"location":"Database/RDS/02-create-aurora-global-database/#replica_1","title":"Replica","text":"Linux Windows <pre><code>STACK_NAME=\"\"\nPROJECT_NAME=\"\"\nREGION=\"\"\n### Subnet Group Configuration\nSubnetGroupName=\"\"              # [REQUIRED] he name of this launch template.\nSubnets=\"\"                      # [REQUIRED] List of database subnet ids.\n### Parameter Group Configuration\nClusterParameterGroupName=\"\"    # [REQUIRED] Name of database cluster parameter group.\nParameterGroupName=\"\"           # [REQUIRED] Name of database parameter group.\n### Global Cluster Configuration\nGlobalClusterIdentifier=\"\"      # [REQUIRED] Identifier(name) used for global database cluster.\n### Cluster Configuration - General\nClusterIdentifier=\"\"            # [REQUIRED] Identifier(name) used for database cluster.\nEngineVersion=\"\"                # [REQUIRED] EngineVersion for database. (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion)\nKmsKeyId=\"\"                     # [optional] Arn of kms key for database cluster. (If don't specify this property, use default key.)\nDeletionProtection=\"true\"       # `false`(default) or `true` | [optional] State for database deletion protection.\n### Cluster Configuration - Network\nVpcId=\"\"                        # [REQUIRED] ID of database vpc.\nPort=\"3306\"                     # [REQUIRED] Port number for database instance.\nCreateSecurityGroup=\"Yes\"       # `Yes`(default) or `No` | [REQUIRED] Create a new security group or using existed security group.\nSecurityGroupNameOrId=\"\"        # [REQUIRED] New security group name or existed security group id.\n### Instance Configuration\nInstanceClass=\"\"                # [REQUIRED] Type of database instance type.\nInstance1Identifier=\"\"          # [REQUIRED] Identifier(name) used for database instance 1 (maybe writer)\nInstance2Identifier=\"\"          # [REQUIRED] Identifier(name) used for database instance 2 (maybe reader)\nMonitoringRoleName=\"\"           # [REQUIRED] Name of database monitoring iam role.\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/global-db-cluster/aurora-mysql-8.0-instance/aurora-replica.yaml\n\naws cloudformation deploy \\\n--template-file ./aurora-replica.yaml \\\n--stack-name $STACK_NAME \\\n--parameter-overrides \\\nProjectName=$PROJECT_NAME \\\nSubnetGroupName=$SubnetGroupName \\\nSubnets=$Subnets \\\nSecurityGroupIds=$SecurityGroupIds \\\nClusterParameterGroupName=$ClusterParameterGroupName \\\nParameterGroupName=$ParameterGroupName \\\nGlobalClusterIdentifier=$GlobalClusterIdentifier \\\nClusterIdentifier=$ClusterIdentifier \\\nEngineVersion=$EngineVersion \\\nKmsKeyId=$KmsKeyId \\\nDeletionProtection=$DeletionProtection \\\nVpcId=$VpcId \\\nPort=$Port \\\nCreateSecurityGroup=$CreateSecurityGroup \\\nSecurityGroupNameOrId=$SecurityGroupNameOrId \\\nCreateSecurityGroup=$CreateSecurityGroup \\\nInstanceClass=$InstanceClass \\\nInstance1Identifier=$Instance1Identifier \\\nInstance2Identifier=$Instance2Identifier \\\nMonitoringRoleName=$MonitoringRoleName \\\n--disable-rollback \\\n--tags project=$PROJECT_NAME \\\n--capabilities CAPABILITY_NAMED_IAM \\\n--region $REGION\n</code></pre> <pre><code>$STACK_NAME=\"\"\n$PROJECT_NAME=\"\"\n$REGION=\"\"\n### Subnet Group Configuration\n$SubnetGroupName=\"\"             # [REQUIRED] he name of this launch template.\n$Subnets=\"\"                     # [REQUIRED] List of database subnet ids.\n### Parameter Group Configuration\n$ClusterParameterGroupName=\"\"   # [REQUIRED] Name of database cluster parameter group.\n$ParameterGroupName=\"\"          # [REQUIRED] Name of database parameter group.\n### Global Cluster Configuration\n$GlobalClusterIdentifier=\"\"     # [REQUIRED] Identifier(name) used for global database cluster.\n### Cluster Configuration - General\n$ClusterIdentifier=\"\"           # [REQUIRED] Identifier(name) used for database cluster.\n$EngineVersion=\"\"               # [REQUIRED] EngineVersion for database. (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion)\n$KmsKeyId=\"\"                    # [optional] Arn of kms key for database cluster. (If don't specify this property, use default key.)\n$DeletionProtection=\"true\"      # `false`(default) or `true` | [optional] State for database deletion protection.\n### Cluster Configuration - Network\n$VpcId=\"\"                       # [REQUIRED] ID of database vpc.\n$Port=\"3306\"                    # [REQUIRED] Port number for database instance.\n$CreateSecurityGroup=\"Yes\"      # `Yes`(default) or `No` | [REQUIRED] Create a new security group or using existed security group.\n$SecurityGroupNameOrId=\"\"       # [REQUIRED] New security group name or existed security group id.\n### Instance Configuration\n$InstanceClass=\"\"               # [REQUIRED] Type of database instance type.\n$Instance1Identifier=\"\"         # [REQUIRED] Identifier(name) used for database instance 1 (maybe writer)\n$Instance2Identifier=\"\"         # [REQUIRED] Identifier(name) used for database instance 2 (maybe reader)\n$MonitoringRoleName=\"\"          # [REQUIRED] Name of database monitoring iam role.\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/global-db-cluster/aurora-mysql-8.0-instance/aurora-replica.yaml\naws cloudformation deploy `\n--template-file ./aurora-replica.yaml `\n--stack-name $STACK_NAME `\n--parameter-overrides `\nProjectName=$PROJECT_NAME `\nSubnetGroupName=$SubnetGroupName `\nSubnets=$Subnets `\nSecurityGroupIds=$SecurityGroupIds `\nClusterParameterGroupName=$ClusterParameterGroupName `\nParameterGroupName=$ParameterGroupName `\nGlobalClusterIdentifier=$GlobalClusterIdentifier `\nClusterIdentifier=$ClusterIdentifier `\nEngineVersion=$EngineVersion `\nKmsKeyId=$KmsKeyId `\nDeletionProtection=$DeletionProtection `\nVpcId=$VpcId `\nPort=$Port `\nCreateSecurityGroup=$CreateSecurityGroup `\nSecurityGroupNameOrId=$SecurityGroupNameOrId `\nCreateSecurityGroup=$CreateSecurityGroup `\nInstanceClass=$InstanceClass `\nInstance1Identifier=$Instance1Identifier `\nInstance2Identifier=$Instance2Identifier `\nMonitoringRoleName=$MonitoringRoleName `\n--disable-rollback `\n--tags project=$PROJECT_NAME `\n--capabilities CAPABILITY_NAMED_IAM `\n--region $REGION\n</code></pre>"},{"location":"Database/RDS/02-create-aurora-global-database/#mysql-80-serverless","title":"MySQL 8.0 Serverless","text":""},{"location":"Database/RDS/02-create-aurora-global-database/#engine-version_2","title":"Engine Version","text":"<ul> <li><code>8.0.mysql_aurora.3.02.0</code></li> <li><code>8.0.mysql_aurora.3.02.1</code></li> <li><code>8.0.mysql_aurora.3.02.2</code></li> <li><code>8.0.mysql_aurora.3.02.3</code></li> <li><code>8.0.mysql_aurora.3.03.0</code></li> <li><code>8.0.mysql_aurora.3.03.1</code></li> </ul>"},{"location":"Database/RDS/02-create-aurora-global-database/#primary_2","title":"Primary","text":"Linux Windows <pre><code>STACK_NAME=\"\"\nPROJECT_NAME=\"\"\nREGION=\"\"\n### Subnet Group Configuration\nSubnetGroupName=\"\"              # [REQUIRED] he name of this launch template.\nSubnets=\"\"                      # [REQUIRED] List of database subnet ids.\n### Parameter Group Configuration\nClusterParameterGroupName=\"\"    # [REQUIRED] Name of database cluster parameter group.\nParameterGroupName=\"\"           # [REQUIRED] Name of database parameter group.\n### Global Cluster Configuration\nGlobalClusterIdentifier=\"\"      # [REQUIRED] Identifier(name) used for global database cluster.\n### Cluster Configuration - General\nClusterIdentifier=\"\"            # [REQUIRED] Identifier(name) used for database cluster.\nEngineVersion=\"\"                # [REQUIRED] EngineVersion for database. (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion)\nKmsKeyId=\"\"                     # [optional] Arn of kms key for database cluster. (If don't specify this property, use default key.)\nDeletionProtection=\"true\"       # `false`(default) or `true` | [optional] State for database deletion protection.\n### Cluster Configuration - Network\nVpcId=\"\"                        # [REQUIRED] ID of database vpc.\nPort=\"3306\"                     # [REQUIRED] Port number for database instance.\nCreateSecurityGroup=\"Yes\"       # `Yes`(default) or `No` | [REQUIRED] Create a new security group or using existed security group.\nSecurityGroupNameOrId=\"\"        # [REQUIRED] New security group name or existed security group id.\n### Cluster Configuration - Credential\nUsername=\"\"                     # [REQUIRED] Username for database access.\nPassword=\"\"                     # [REQUIRED] Password for database access.\n### Cluster Configuration - Capacity\nMinCapacity=\"\"                  # [REQUIRED] Min capacity of serverless cluster. (0.5 ~ 128)\nMaxCapacity=\"\"                  # [REQUIRED] Max capacity of serverless cluster. (1 ~ 128)\n### Instance Configuration\nInstance1Identifier=\"\"          # [REQUIRED] Identifier(name) used for database instance 1 (maybe writer)\nInstance2Identifier=\"\"          # [REQUIRED] Identifier(name) used for database instance 2 (maybe reader)\nMonitoringRoleName=\"\"           # [REQUIRED] Name of database monitoring iam role.\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/global-db-cluster/aurora-mysql-8.0-serverless/aurora-primary.yaml\n\naws cloudformation deploy \\\n--template-file ./aurora-primary.yaml \\\n--stack-name $STACK_NAME \\\n--parameter-overrides \\\nProjectName=$PROJECT_NAME \\\nSubnetGroupName=$SubnetGroupName \\\nSubnets=$Subnets \\\nSecurityGroupIds=$SecurityGroupIds \\\nClusterParameterGroupName=$ClusterParameterGroupName \\\nParameterGroupName=$ParameterGroupName \\\nGlobalClusterIdentifier=$GlobalClusterIdentifier \\\nClusterIdentifier=$ClusterIdentifier \\\nEngineVersion=$EngineVersion \\\nKmsKeyId=$KmsKeyId \\\nDeletionProtection=$DeletionProtection \\\nVpcId=$VpcId \\\nPort=$Port \\\nCreateSecurityGroup=$CreateSecurityGroup \\\nSecurityGroupNameOrId=$SecurityGroupNameOrId \\\nCreateSecurityGroup=$CreateSecurityGroup \\\nUsername=$Username \\\nPassword=$Password \\\nMinCapacity=$MinCapacity \\\nMaxCapacity=$MaxCapacity \\\nInstance1Identifier=$Instance1Identifier \\\nInstance2Identifier=$Instance2Identifier \\\nMonitoringRoleName=$MonitoringRoleName \\\n--disable-rollback \\\n--tags project=$PROJECT_NAME \\\n--capabilities CAPABILITY_NAMED_IAM \\\n--region $REGION\n</code></pre> <pre><code>$STACK_NAME=\"\"\n$PROJECT_NAME=\"\"\n$REGION=\"\"\n### Subnet Group Configuration\n$SubnetGroupName=\"\"             # [REQUIRED] he name of this launch template.\n$Subnets=\"\"                     # [REQUIRED] List of database subnet ids.\n### Parameter Group Configuration\n$ClusterParameterGroupName=\"\"   # [REQUIRED] Name of database cluster parameter group.\n$ParameterGroupName=\"\"          # [REQUIRED] Name of database parameter group.\n### Global Cluster Configuration\n$GlobalClusterIdentifier=\"\"     # [REQUIRED] Identifier(name) used for global database cluster.\n### Cluster Configuration - General\n$ClusterIdentifier=\"\"           # [REQUIRED] Identifier(name) used for database cluster.\n$EngineVersion=\"\"               # [REQUIRED] EngineVersion for database. (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion)\n$KmsKeyId=\"\"                    # [optional] Arn of kms key for database cluster. (If don't specify this property, use default key.)\n$DeletionProtection=\"true\"      # `false`(default) or `true` | [optional] State for database deletion protection.\n### Cluster Configuration - Network\n$VpcId=\"\"                       # [REQUIRED] ID of database vpc.\n$Port=\"3306\"                    # [REQUIRED] Port number for database instance.\n$CreateSecurityGroup=\"Yes\"      # `Yes`(default) or `No` | [REQUIRED] Create a new security group or using existed security group.\n$SecurityGroupNameOrId=\"\"       # [REQUIRED] New security group name or existed security group id.\n### Cluster Configuration - Credential\n$Username=\"\"                    # [REQUIRED] Username for database access.\n$Password=\"\"                    # [REQUIRED] Password for database access.\n### Cluster Configuration - Capacity\n$MinCapacity=\"\"                 # [REQUIRED] Min capacity of serverless cluster. (0.5 ~ 128)\n$MaxCapacity=\"\"                 # [REQUIRED] Max capacity of serverless cluster. (1 ~ 128)\n### Instance Configuration\n$Instance1Identifier=\"\"         # [REQUIRED] Identifier(name) used for database instance 1 (maybe writer)\n$Instance2Identifier=\"\"         # [REQUIRED] Identifier(name) used for database instance 2 (maybe reader)\n$MonitoringRoleName=\"\"          # [REQUIRED] Name of database monitoring iam role.\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/global-db-cluster/aurora-mysql-8.0-serverless/aurora-primary.yaml\naws cloudformation deploy `\n--template-file ./aurora-primary.yaml `\n--stack-name $STACK_NAME `\n--parameter-overrides `\nProjectName=$PROJECT_NAME `\nSubnetGroupName=$SubnetGroupName `\nSubnets=$Subnets `\nSecurityGroupIds=$SecurityGroupIds `\nClusterParameterGroupName=$ClusterParameterGroupName `\nParameterGroupName=$ParameterGroupName `\nGlobalClusterIdentifier=$GlobalClusterIdentifier `\nClusterIdentifier=$ClusterIdentifier `\nEngineVersion=$EngineVersion `\nKmsKeyId=$KmsKeyId `\nDeletionProtection=$DeletionProtection `\nVpcId=$VpcId `\nPort=$Port `\nCreateSecurityGroup=$CreateSecurityGroup `\nSecurityGroupNameOrId=$SecurityGroupNameOrId `\nCreateSecurityGroup=$CreateSecurityGroup `\nUsername=$Username `\nPassword=$Password `\nMinCapacity=$MinCapacity `\nMaxCapacity=$MaxCapacity `\nInstance1Identifier=$Instance1Identifier `\nInstance2Identifier=$Instance2Identifier `\nMonitoringRoleName=$MonitoringRoleName `\n--disable-rollback `\n--tags project=$PROJECT_NAME `\n--capabilities CAPABILITY_NAMED_IAM `\n--region $REGION\n</code></pre>"},{"location":"Database/RDS/02-create-aurora-global-database/#replica_2","title":"Replica","text":"Linux Windows <pre><code>STACK_NAME=\"\"\nPROJECT_NAME=\"\"\nREGION=\"\"\n### Subnet Group Configuration\nSubnetGroupName=\"\"              # [REQUIRED] he name of this launch template.\nSubnets=\"\"                      # [REQUIRED] List of database subnet ids.\n### Parameter Group Configuration\nClusterParameterGroupName=\"\"    # [REQUIRED] Name of database cluster parameter group.\nParameterGroupName=\"\"           # [REQUIRED] Name of database parameter group.\n### Global Cluster Configuration\nGlobalClusterIdentifier=\"\"      # [REQUIRED] Identifier(name) used for global database cluster.\n### Cluster Configuration - General\nClusterIdentifier=\"\"            # [REQUIRED] Identifier(name) used for database cluster.\nEngineVersion=\"\"                # [REQUIRED] EngineVersion for database. (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion)\nKmsKeyId=\"\"                     # [optional] Arn of kms key for database cluster. (If don't specify this property, use default key.)\nDeletionProtection=\"true\"       # `false`(default) or `true` | [optional] State for database deletion protection.\n### Cluster Configuration - Network\nVpcId=\"\"                        # [REQUIRED] ID of database vpc.\nPort=\"3306\"                     # [REQUIRED] Port number for database instance.\nCreateSecurityGroup=\"Yes\"       # `Yes`(default) or `No` | [REQUIRED] Create a new security group or using existed security group.\nSecurityGroupNameOrId=\"\"        # [REQUIRED] New security group name or existed security group id.\n### Cluster Configuration - Capacity\nMinCapacity=\"\"                  # [REQUIRED] Min capacity of serverless cluster. (0.5 ~ 128)\nMaxCapacity=\"\"                  # [REQUIRED] Max capacity of serverless cluster. (1 ~ 128)\n### Instance Configuration\nInstance1Identifier=\"\"          # [REQUIRED] Identifier(name) used for database instance 1 (maybe writer)\nInstance2Identifier=\"\"          # [REQUIRED] Identifier(name) used for database instance 2 (maybe reader)\nMonitoringRoleName=\"\"           # [REQUIRED] Name of database monitoring iam role.\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/global-db-cluster/aurora-mysql-8.0-serverless/aurora-replica.yaml\n\naws cloudformation deploy \\\n--template-file ./aurora-replica.yaml \\\n--stack-name $STACK_NAME \\\n--parameter-overrides \\\nProjectName=$PROJECT_NAME \\\nSubnetGroupName=$SubnetGroupName \\\nSubnets=$Subnets \\\nSecurityGroupIds=$SecurityGroupIds \\\nClusterParameterGroupName=$ClusterParameterGroupName \\\nParameterGroupName=$ParameterGroupName \\\nGlobalClusterIdentifier=$GlobalClusterIdentifier \\\nClusterIdentifier=$ClusterIdentifier \\\nEngineVersion=$EngineVersion \\\nKmsKeyId=$KmsKeyId \\\nDeletionProtection=$DeletionProtection \\\nVpcId=$VpcId \\\nPort=$Port \\\nCreateSecurityGroup=$CreateSecurityGroup \\\nSecurityGroupNameOrId=$SecurityGroupNameOrId \\\nCreateSecurityGroup=$CreateSecurityGroup \\\nMinCapacity=$MinCapacity \\\nMaxCapacity=$MaxCapacity \\\nInstance1Identifier=$Instance1Identifier \\\nInstance2Identifier=$Instance2Identifier \\\nMonitoringRoleName=$MonitoringRoleName \\\n--disable-rollback \\\n--tags project=$PROJECT_NAME \\\n--capabilities CAPABILITY_NAMED_IAM \\\n--region $REGION\n</code></pre> <pre><code>$STACK_NAME=\"\"\n$PROJECT_NAME=\"\"\n$REGION=\"\"\n### Subnet Group Configuration\n$SubnetGroupName=\"\"             # [REQUIRED] he name of this launch template.\n$Subnets=\"\"                     # [REQUIRED] List of database subnet ids.\n### Parameter Group Configuration\n$ClusterParameterGroupName=\"\"   # [REQUIRED] Name of database cluster parameter group.\n$ParameterGroupName=\"\"          # [REQUIRED] Name of database parameter group.\n### Global Cluster Configuration\n$GlobalClusterIdentifier=\"\"     # [REQUIRED] Identifier(name) used for global database cluster.\n### Cluster Configuration - General\n$ClusterIdentifier=\"\"           # [REQUIRED] Identifier(name) used for database cluster.\n$EngineVersion=\"\"               # [REQUIRED] EngineVersion for database. (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion)\n$KmsKeyId=\"\"                    # [optional] Arn of kms key for database cluster. (If don't specify this property, use default key.)\n$DeletionProtection=\"true\"      # `false`(default) or `true` | [optional] State for database deletion protection.\n### Cluster Configuration - Network\n$VpcId=\"\"                       # [REQUIRED] ID of database vpc.\n$Port=\"3306\"                    # [REQUIRED] Port number for database instance.\n$CreateSecurityGroup=\"Yes\"      # `Yes`(default) or `No` | [REQUIRED] Create a new security group or using existed security group.\n$SecurityGroupNameOrId=\"\"       # [REQUIRED] New security group name or existed security group id.\n### Cluster Configuration - Capacity\n$MinCapacity=\"\"                 # [REQUIRED] Min capacity of serverless cluster. (0.5 ~ 128)\n$MaxCapacity=\"\"                 # [REQUIRED] Max capacity of serverless cluster. (1 ~ 128)\n### Instance Configuration\n$Instance1Identifier=\"\"         # [REQUIRED] Identifier(name) used for database instance 1 (maybe writer)\n$Instance2Identifier=\"\"         # [REQUIRED] Identifier(name) used for database instance 2 (maybe reader)\n$MonitoringRoleName=\"\"          # [REQUIRED] Name of database monitoring iam role.\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/global-db-cluster/aurora-mysql-8.0-serverless/aurora-replica.yaml\naws cloudformation deploy `\n--template-file ./aurora-replica.yaml `\n--stack-name $STACK_NAME `\n--parameter-overrides `\nProjectName=$PROJECT_NAME `\nSubnetGroupName=$SubnetGroupName `\nSubnets=$Subnets `\nSecurityGroupIds=$SecurityGroupIds `\nClusterParameterGroupName=$ClusterParameterGroupName `\nParameterGroupName=$ParameterGroupName `\nGlobalClusterIdentifier=$GlobalClusterIdentifier `\nClusterIdentifier=$ClusterIdentifier `\nEngineVersion=$EngineVersion `\nKmsKeyId=$KmsKeyId `\nDeletionProtection=$DeletionProtection `\nVpcId=$VpcId `\nPort=$Port `\nCreateSecurityGroup=$CreateSecurityGroup `\nSecurityGroupNameOrId=$SecurityGroupNameOrId `\nCreateSecurityGroup=$CreateSecurityGroup `\nMinCapacity=$MinCapacity `\nMaxCapacity=$MaxCapacity `\nInstance1Identifier=$Instance1Identifier `\nInstance2Identifier=$Instance2Identifier `\nMonitoringRoleName=$MonitoringRoleName `\n--disable-rollback `\n--tags project=$PROJECT_NAME `\n--capabilities CAPABILITY_NAMED_IAM `\n--region $REGION\n</code></pre>"},{"location":"Database/RDS/02-create-aurora-global-database/#postgresql","title":"PostgreSQL","text":""},{"location":"Database/RDS/02-create-aurora-global-database/#cluster-parameter-group-family","title":"Cluster Parameter Group Family","text":"<ul> <li><code>aurora-postgresql11</code></li> <li><code>aurora-postgresql12</code></li> <li><code>aurora-postgresql13</code></li> <li><code>aurora-postgresql14</code></li> <li><code>aurora-postgresql15</code></li> </ul>"},{"location":"Database/RDS/02-create-aurora-global-database/#engine-version_3","title":"Engine Version","text":"<code>11</code> versions <ul> <li><code>11.9</code></li> <li><code>11.13</code></li> <li><code>11.14</code></li> <li><code>11.15</code></li> <li><code>11.16</code></li> <li><code>11.17</code></li> <li><code>11.18</code></li> <li><code>11.19</code></li> </ul> <code>12</code> versions <ul> <li><code>12.8</code></li> <li><code>12.9</code></li> <li><code>12.10</code></li> <li><code>12.11</code></li> <li><code>12.12</code></li> <li><code>12.13</code></li> <li><code>12.14</code></li> </ul> <code>13</code> versions <ul> <li><code>13.4</code></li> <li><code>13.5</code></li> <li><code>13.6</code></li> <li><code>13.7</code></li> <li><code>13.8</code></li> <li><code>13.9</code></li> <li><code>13.10</code></li> </ul> <code>14</code> versions <ul> <li><code>14.3</code></li> <li><code>14.4</code></li> <li><code>14.5</code></li> <li><code>14.6</code></li> <li><code>14.7</code></li> </ul> <code>15</code> versions <ul> <li><code>15.2</code></li> </ul>"},{"location":"Database/RDS/02-create-aurora-global-database/#instance-type_2","title":"Instance Type","text":"<code>r4</code> series <ul> <li><code>db.r4.large</code></li> <li><code>db.r4.xlarge</code></li> <li><code>db.r4.2xlarge</code></li> <li><code>db.r4.4xlarge</code></li> <li><code>db.r4.8xlarge</code></li> <li><code>db.r4.16xlarge</code></li> </ul> <code>r5</code> series <ul> <li><code>db.r5.large</code></li> <li><code>db.r5.xlarge</code></li> <li><code>db.r5.2xlarge</code></li> <li><code>db.r5.4xlarge</code></li> <li><code>db.r5.8xlarge</code></li> <li><code>db.r5.12xlarge</code></li> <li><code>db.r5.16xlarge</code></li> <li><code>db.r5.24xlarge</code></li> </ul> <code>r6g</code> series <ul> <li><code>db.r6g.large</code></li> <li><code>db.r6g.xlarge</code></li> <li><code>db.r6g.2xlarge</code></li> <li><code>db.r6g.4xlarge</code></li> <li><code>db.r6g.8xlarge</code></li> <li><code>db.r6g.12xlarge</code></li> <li><code>db.r6g.16xlarge</code></li> </ul> <code>r6i</code> series <ul> <li><code>db.r6i.large</code></li> <li><code>db.r6i.xlarge</code></li> <li><code>db.r6i.2xlarge</code></li> <li><code>db.r6i.4xlarge</code></li> <li><code>db.r6i.8xlarge</code></li> <li><code>db.r6i.12xlarge</code></li> <li><code>db.r6i.16xlarge</code></li> <li><code>db.r6i.24xlarge</code></li> <li><code>db.r6i.32xlarge</code></li> </ul>"},{"location":"Database/RDS/02-create-aurora-global-database/#primary_3","title":"Primary","text":"Linux Windows <pre><code>STACK_NAME=\"\"\nPROJECT_NAME=\"\"\nREGION=\"\"\n### Subnet Group Configuration\nSubnetGroupName=\"\"              # [REQUIRED] he name of this launch template.\nSubnets=\"\"                      # [REQUIRED] List of database subnet ids.\n### Parameter Group Configuration\nClusterParameterGroupName=\"\"    # [REQUIRED] Name of database cluster parameter group.\nParameterGroupName=\"\"           # [REQUIRED] Name of database parameter group.\nClusterParameterGroupFamily=\"\"  # [REQUIRED] Name of database cluster parameter group family.\n### Global Cluster Configuration\nGlobalClusterIdentifier=\"\"      # [REQUIRED] Identifier(name) used for global database cluster.\n### Cluster Configuration - General\nClusterIdentifier=\"\"            # [REQUIRED] Identifier(name) used for database cluster.\nEngineVersion=\"\"                # [REQUIRED] EngineVersion for database. (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion)\nKmsKeyId=\"\"                     # [optional] Arn of kms key for database cluster. (If don't specify this property, use default key.)\nDeletionProtection=\"true\"       # `false`(default) or `true` | [optional] State for database deletion protection.\n### Cluster Configuration - Network\nVpcId=\"\"                        # [REQUIRED] ID of database vpc.\nPort=\"5432\"                     # [REQUIRED] Port number for database instance.\nCreateSecurityGroup=\"Yes\"       # `Yes`(default) or `No` | [REQUIRED] Create a new security group or using existed security group.\nSecurityGroupNameOrId=\"\"        # [REQUIRED] New security group name or existed security group id.\n### Cluster Configuration - Credential\nUsername=\"\"                     # [REQUIRED] Username for database access.\nPassword=\"\"                     # [REQUIRED] Password for database access.\n### Instance Configuration\nInstanceClass=\"\"                # [REQUIRED] Type of database instance type.\nInstance1Identifier=\"\"          # [REQUIRED] Identifier(name) used for database instance 1 (maybe writer)\nInstance2Identifier=\"\"          # [REQUIRED] Identifier(name) used for database instance 2 (maybe reader)\nMonitoringRoleName=\"\"           # [REQUIRED] Name of database monitoring iam role.\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/global-db-cluster/aurora-postgresql-instance/aurora-primary.yaml\n\naws cloudformation deploy \\\n--template-file ./aurora-primary.yaml \\\n--stack-name $STACK_NAME \\\n--parameter-overrides \\\nProjectName=$PROJECT_NAME \\\nSubnetGroupName=$SubnetGroupName \\\nSubnets=$Subnets \\\nSecurityGroupIds=$SecurityGroupIds \\\nClusterParameterGroupName=$ClusterParameterGroupName \\\nParameterGroupName=$ParameterGroupName \\\nClusterParameterGroupFamily=$ClusterParameterGroupFamily \\\nGlobalClusterIdentifier=$GlobalClusterIdentifier \\\nClusterIdentifier=$ClusterIdentifier \\\nEngineVersion=$EngineVersion \\\nKmsKeyId=$KmsKeyId \\\nDeletionProtection=$DeletionProtection \\\nVpcId=$VpcId \\\nPort=$Port \\\nCreateSecurityGroup=$CreateSecurityGroup \\\nSecurityGroupNameOrId=$SecurityGroupNameOrId \\\nCreateSecurityGroup=$CreateSecurityGroup \\\nUsername=$Username \\\nPassword=$Password \\\nInstanceClass=$InstanceClass \\\nInstance1Identifier=$Instance1Identifier \\\nInstance2Identifier=$Instance2Identifier \\\nMonitoringRoleName=$MonitoringRoleName \\\n--disable-rollback \\\n--tags project=$PROJECT_NAME \\\n--capabilities CAPABILITY_NAMED_IAM \\\n--region $REGION\n</code></pre> <pre><code>$STACK_NAME=\"\"\n$PROJECT_NAME=\"\"\n$REGION=\"\"\n### Subnet Group Configuration\n$SubnetGroupName=\"\"             # [REQUIRED] he name of this launch template.\n$Subnets=\"\"                     # [REQUIRED] List of database subnet ids.\n### Parameter Group Configuration\n$ClusterParameterGroupName=\"\"   # [REQUIRED] Name of database cluster parameter group.\n$ParameterGroupName=\"\"          # [REQUIRED] Name of database parameter group.\n$ClusterParameterGroupFamily=\"\" # [REQUIRED] Name of database cluster parameter group family.\n### Global Cluster Configuration\n$GlobalClusterIdentifier=\"\"     # [REQUIRED] Identifier(name) used for global database cluster.\n### Cluster Configuration - General\n$ClusterIdentifier=\"\"           # [REQUIRED] Identifier(name) used for database cluster.\n$EngineVersion=\"\"               # [REQUIRED] EngineVersion for database. (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion)\n$KmsKeyId=\"\"                    # [optional] Arn of kms key for database cluster. (If don't specify this property, use default key.)\n$DeletionProtection=\"true\"      # `false`(default) or `true` | [optional] State for database deletion protection.\n### Cluster Configuration - Network\n$VpcId=\"\"                       # [REQUIRED] ID of database vpc.\n$Port=\"5432\"                    # [REQUIRED] Port number for database instance.\n$CreateSecurityGroup=\"Yes\"      # `Yes`(default) or `No` | [REQUIRED] Create a new security group or using existed security group.\n$SecurityGroupNameOrId=\"\"       # [REQUIRED] New security group name or existed security group id.\n### Cluster Configuration - Credential\n$Username=\"\"                    # [REQUIRED] Username for database access.\n$Password=\"\"                    # [REQUIRED] Password for database access.\n### Instance Configuration\n$InstanceClass=\"\"               # [REQUIRED] Type of database instance type.\n$Instance1Identifier=\"\"         # [REQUIRED] Identifier(name) used for database instance 1 (maybe writer)\n$Instance2Identifier=\"\"         # [REQUIRED] Identifier(name) used for database instance 2 (maybe reader)\n$MonitoringRoleName=\"\"          # [REQUIRED] Name of database monitoring iam role.\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/global-db-cluster/aurora-postgresql-instance/aurora-primary.yaml\naws cloudformation deploy `\n--template-file ./aurora-primary.yaml `\n--stack-name $STACK_NAME `\n--parameter-overrides `\nProjectName=$PROJECT_NAME `\nSubnetGroupName=$SubnetGroupName `\nSubnets=$Subnets `\nSecurityGroupIds=$SecurityGroupIds `\nClusterParameterGroupName=$ClusterParameterGroupName `\nParameterGroupName=$ParameterGroupName `\nClusterParameterGroupFamily=$ClusterParameterGroupFamily `\nGlobalClusterIdentifier=$GlobalClusterIdentifier `\nClusterIdentifier=$ClusterIdentifier `\nEngineVersion=$EngineVersion `\nKmsKeyId=$KmsKeyId `\nDeletionProtection=$DeletionProtection `\nVpcId=$VpcId `\nPort=$Port `\nCreateSecurityGroup=$CreateSecurityGroup `\nSecurityGroupNameOrId=$SecurityGroupNameOrId `\nCreateSecurityGroup=$CreateSecurityGroup `\nUsername=$Username `\nPassword=$Password `\nInstanceClass=$InstanceClass `\nInstance1Identifier=$Instance1Identifier `\nInstance2Identifier=$Instance2Identifier `\nMonitoringRoleName=$MonitoringRoleName `\n--disable-rollback `\n--tags project=$PROJECT_NAME `\n--capabilities CAPABILITY_NAMED_IAM `\n--region $REGION\n</code></pre>"},{"location":"Database/RDS/02-create-aurora-global-database/#replica_3","title":"Replica","text":"Linux Windows <pre><code>STACK_NAME=\"\"\nPROJECT_NAME=\"\"\nREGION=\"\"\n### Subnet Group Configuration\nSubnetGroupName=\"\"              # [REQUIRED] he name of this launch template.\nSubnets=\"\"                      # [REQUIRED] List of database subnet ids.\n### Parameter Group Configuration\nClusterParameterGroupName=\"\"    # [REQUIRED] Name of database cluster parameter group.\nParameterGroupName=\"\"           # [REQUIRED] Name of database parameter group.\nClusterParameterGroupFamily=\"\"  # [REQUIRED] Name of database cluster parameter group family.\n### Global Cluster Configuration\nGlobalClusterIdentifier=\"\"      # [REQUIRED] Identifier(name) used for global database cluster.\n### Cluster Configuration - General\nClusterIdentifier=\"\"            # [REQUIRED] Identifier(name) used for database cluster.\nEngineVersion=\"\"                # [REQUIRED] EngineVersion for database. (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion)\nKmsKeyId=\"\"                     # [optional] Arn of kms key for database cluster. (If don't specify this property, use default key.)\nDeletionProtection=\"true\"       # `false`(default) or `true` | [optional] State for database deletion protection.\n### Cluster Configuration - Network\nVpcId=\"\"                        # [REQUIRED] ID of database vpc.\nPort=\"5432\"                     # [REQUIRED] Port number for database instance.\nCreateSecurityGroup=\"Yes\"       # `Yes`(default) or `No` | [REQUIRED] Create a new security group or using existed security group.\nSecurityGroupNameOrId=\"\"        # [REQUIRED] New security group name or existed security group id.\n### Instance Configuration\nInstanceClass=\"\"                # [REQUIRED] Type of database instance type.\nInstance1Identifier=\"\"          # [REQUIRED] Identifier(name) used for database instance 1 (maybe writer)\nInstance2Identifier=\"\"          # [REQUIRED] Identifier(name) used for database instance 2 (maybe reader)\nMonitoringRoleName=\"\"           # [REQUIRED] Name of database monitoring iam role.\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/global-db-cluster/aurora-postgresql-instance/aurora-replica.yaml\n\naws cloudformation deploy \\\n--template-file ./aurora-replica.yaml \\\n--stack-name $STACK_NAME \\\n--parameter-overrides \\\nProjectName=$PROJECT_NAME \\\nSubnetGroupName=$SubnetGroupName \\\nSubnets=$Subnets \\\nSecurityGroupIds=$SecurityGroupIds \\\nClusterParameterGroupName=$ClusterParameterGroupName \\\nParameterGroupName=$ParameterGroupName \\\nClusterParameterGroupFamily=$ClusterParameterGroupFamily \\\nGlobalClusterIdentifier=$GlobalClusterIdentifier \\\nClusterIdentifier=$ClusterIdentifier \\\nEngineVersion=$EngineVersion \\\nKmsKeyId=$KmsKeyId \\\nDeletionProtection=$DeletionProtection \\\nVpcId=$VpcId \\\nPort=$Port \\\nCreateSecurityGroup=$CreateSecurityGroup \\\nSecurityGroupNameOrId=$SecurityGroupNameOrId \\\nCreateSecurityGroup=$CreateSecurityGroup \\\nInstanceClass=$InstanceClass \\\nInstance1Identifier=$Instance1Identifier \\\nInstance2Identifier=$Instance2Identifier \\\nMonitoringRoleName=$MonitoringRoleName \\\n--disable-rollback \\\n--tags project=$PROJECT_NAME \\\n--capabilities CAPABILITY_NAMED_IAM \\\n--region $REGION\n</code></pre> <pre><code>$STACK_NAME=\"\"\n$PROJECT_NAME=\"\"\n$REGION=\"\"\n### Subnet Group Configuration\n$SubnetGroupName=\"\"             # [REQUIRED] he name of this launch template.\n$Subnets=\"\"                     # [REQUIRED] List of database subnet ids.\n### Parameter Group Configuration\n$ClusterParameterGroupName=\"\"   # [REQUIRED] Name of database cluster parameter group.\n$ParameterGroupName=\"\"          # [REQUIRED] Name of database parameter group.\n$ClusterParameterGroupFamily=\"\" # [REQUIRED] Name of database cluster parameter group family.\n### Global Cluster Configuration\n$GlobalClusterIdentifier=\"\"     # [REQUIRED] Identifier(name) used for global database cluster.\n### Cluster Configuration - General\n$ClusterIdentifier=\"\"           # [REQUIRED] Identifier(name) used for database cluster.\n$EngineVersion=\"\"               # [REQUIRED] EngineVersion for database. (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion)\n$KmsKeyId=\"\"                    # [optional] Arn of kms key for database cluster. (If don't specify this property, use default key.)\n$DeletionProtection=\"true\"      # `false`(default) or `true` | [optional] State for database deletion protection.\n### Cluster Configuration - Network\n$VpcId=\"\"                       # [REQUIRED] ID of database vpc.\n$Port=\"5432\"                    # [REQUIRED] Port number for database instance.\n$CreateSecurityGroup=\"Yes\"      # `Yes`(default) or `No` | [REQUIRED] Create a new security group or using existed security group.\n$SecurityGroupNameOrId=\"\"       # [REQUIRED] New security group name or existed security group id.\n### Instance Configuration\n$InstanceClass=\"\"               # [REQUIRED] Type of database instance type.\n$Instance1Identifier=\"\"         # [REQUIRED] Identifier(name) used for database instance 1 (maybe writer)\n$Instance2Identifier=\"\"         # [REQUIRED] Identifier(name) used for database instance 2 (maybe reader)\n$MonitoringRoleName=\"\"          # [REQUIRED] Name of database monitoring iam role.\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/global-db-cluster/aurora-postgresql-instance/aurora-replica.yaml\naws cloudformation deploy `\n--template-file ./aurora-replica.yaml `\n--stack-name $STACK_NAME `\n--parameter-overrides `\nProjectName=$PROJECT_NAME `\nSubnetGroupName=$SubnetGroupName `\nSubnets=$Subnets `\nSecurityGroupIds=$SecurityGroupIds `\nClusterParameterGroupName=$ClusterParameterGroupName `\nParameterGroupName=$ParameterGroupName `\nClusterParameterGroupFamily=$ClusterParameterGroupFamily `\nGlobalClusterIdentifier=$GlobalClusterIdentifier `\nClusterIdentifier=$ClusterIdentifier `\nEngineVersion=$EngineVersion `\nKmsKeyId=$KmsKeyId `\nDeletionProtection=$DeletionProtection `\nVpcId=$VpcId `\nPort=$Port `\nCreateSecurityGroup=$CreateSecurityGroup `\nSecurityGroupNameOrId=$SecurityGroupNameOrId `\nCreateSecurityGroup=$CreateSecurityGroup `\nInstanceClass=$InstanceClass `\nInstance1Identifier=$Instance1Identifier `\nInstance2Identifier=$Instance2Identifier `\nMonitoringRoleName=$MonitoringRoleName `\n--disable-rollback `\n--tags project=$PROJECT_NAME `\n--capabilities CAPABILITY_NAMED_IAM `\n--region $REGION\n</code></pre>"},{"location":"Database/RDS/02-create-aurora-global-database/#postgresql-serverless","title":"PostgreSQL Serverless","text":""},{"location":"Database/RDS/02-create-aurora-global-database/#cluster-parameter-group-family_1","title":"Cluster Parameter Group Family","text":"<ul> <li><code>aurora-postgresql13</code></li> <li><code>aurora-postgresql14</code></li> <li><code>aurora-postgresql15</code></li> </ul>"},{"location":"Database/RDS/02-create-aurora-global-database/#engine-version_4","title":"Engine Version","text":"<code>13</code> versions <ul> <li><code>13.6</code></li> <li><code>13.7</code></li> <li><code>13.8</code></li> <li><code>13.9</code></li> <li><code>13.10</code></li> </ul> <code>14</code> versions <ul> <li><code>14.3</code></li> <li><code>14.4</code></li> <li><code>14.5</code></li> <li><code>14.6</code></li> <li><code>14.7</code></li> </ul> <code>15</code> versions <ul> <li><code>15.2</code></li> </ul>"},{"location":"Database/RDS/02-create-aurora-global-database/#primary_4","title":"Primary","text":"Linux Windows <pre><code>STACK_NAME=\"\"\nPROJECT_NAME=\"\"\nREGION=\"\"\n### Subnet Group Configuration\nSubnetGroupName=\"\"              # [REQUIRED] he name of this launch template.\nSubnets=\"\"                      # [REQUIRED] List of database subnet ids.\n### Parameter Group Configuration\nClusterParameterGroupName=\"\"    # [REQUIRED] Name of database cluster parameter group.\nParameterGroupName=\"\"           # [REQUIRED] Name of database parameter group.\nClusterParameterGroupFamily=\"\"  # [REQUIRED] Name of database cluster parameter group family.\n### Global Cluster Configuration\nGlobalClusterIdentifier=\"\"      # [REQUIRED] Identifier(name) used for global database cluster.\n### Cluster Configuration - General\nClusterIdentifier=\"\"            # [REQUIRED] Identifier(name) used for database cluster.\nEngineVersion=\"\"                # [REQUIRED] EngineVersion for database. (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion)\nKmsKeyId=\"\"                     # [optional] Arn of kms key for database cluster. (If don't specify this property, use default key.)\nDeletionProtection=\"true\"       # `false`(default) or `true` | [optional] State for database deletion protection.\n### Cluster Configuration - Network\nVpcId=\"\"                        # [REQUIRED] ID of database vpc.\nPort=\"5432\"                     # [REQUIRED] Port number for database instance.\nCreateSecurityGroup=\"Yes\"       # `Yes`(default) or `No` | [REQUIRED] Create a new security group or using existed security group.\nSecurityGroupNameOrId=\"\"        # [REQUIRED] New security group name or existed security group id.\n### Cluster Configuration - Credential\nUsername=\"\"                     # [REQUIRED] Username for database access.\nPassword=\"\"                     # [REQUIRED] Password for database access.\n### Instance Configuration\nInstanceClass=\"\"                # [REQUIRED] Type of database instance type.\nInstance1Identifier=\"\"          # [REQUIRED] Identifier(name) used for database instance 1 (maybe writer)\nInstance2Identifier=\"\"          # [REQUIRED] Identifier(name) used for database instance 2 (maybe reader)\nMonitoringRoleName=\"\"           # [REQUIRED] Name of database monitoring iam role.\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/global-db-cluster/aurora-postgresql-instance/aurora-primary.yaml\n\naws cloudformation deploy \\\n--template-file ./aurora-primary.yaml \\\n--stack-name $STACK_NAME \\\n--parameter-overrides \\\nProjectName=$PROJECT_NAME \\\nSubnetGroupName=$SubnetGroupName \\\nSubnets=$Subnets \\\nSecurityGroupIds=$SecurityGroupIds \\\nClusterParameterGroupName=$ClusterParameterGroupName \\\nParameterGroupName=$ParameterGroupName \\\nClusterParameterGroupFamily=$ClusterParameterGroupFamily \\\nGlobalClusterIdentifier=$GlobalClusterIdentifier \\\nClusterIdentifier=$ClusterIdentifier \\\nEngineVersion=$EngineVersion \\\nKmsKeyId=$KmsKeyId \\\nDeletionProtection=$DeletionProtection \\\nVpcId=$VpcId \\\nPort=$Port \\\nCreateSecurityGroup=$CreateSecurityGroup \\\nSecurityGroupNameOrId=$SecurityGroupNameOrId \\\nCreateSecurityGroup=$CreateSecurityGroup \\\nUsername=$Username \\\nPassword=$Password \\\nInstanceClass=$InstanceClass \\\nInstance1Identifier=$Instance1Identifier \\\nInstance2Identifier=$Instance2Identifier \\\nMonitoringRoleName=$MonitoringRoleName \\\n--disable-rollback \\\n--tags project=$PROJECT_NAME \\\n--capabilities CAPABILITY_NAMED_IAM \\\n--region $REGION\n</code></pre> <pre><code>$STACK_NAME=\"\"\n$PROJECT_NAME=\"\"\n$REGION=\"\"\n### Subnet Group Configuration\n$SubnetGroupName=\"\"             # [REQUIRED] he name of this launch template.\n$Subnets=\"\"                     # [REQUIRED] List of database subnet ids.\n### Parameter Group Configuration\n$ClusterParameterGroupName=\"\"   # [REQUIRED] Name of database cluster parameter group.\n$ParameterGroupName=\"\"          # [REQUIRED] Name of database parameter group.\n$ClusterParameterGroupFamily=\"\" # [REQUIRED] Name of database cluster parameter group family.\n### Global Cluster Configuration\n$GlobalClusterIdentifier=\"\"     # [REQUIRED] Identifier(name) used for global database cluster.\n### Cluster Configuration - General\n$ClusterIdentifier=\"\"           # [REQUIRED] Identifier(name) used for database cluster.\n$EngineVersion=\"\"               # [REQUIRED] EngineVersion for database. (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion)\n$KmsKeyId=\"\"                    # [optional] Arn of kms key for database cluster. (If don't specify this property, use default key.)\n$DeletionProtection=\"true\"      # `false`(default) or `true` | [optional] State for database deletion protection.\n### Cluster Configuration - Network\n$VpcId=\"\"                       # [REQUIRED] ID of database vpc.\n$Port=\"5432\"                    # [REQUIRED] Port number for database instance.\n$CreateSecurityGroup=\"Yes\"      # `Yes`(default) or `No` | [REQUIRED] Create a new security group or using existed security group.\n$SecurityGroupNameOrId=\"\"       # [REQUIRED] New security group name or existed security group id.\n### Cluster Configuration - Credential\n$Username=\"\"                    # [REQUIRED] Username for database access.\n$Password=\"\"                    # [REQUIRED] Password for database access.\n### Instance Configuration\n$InstanceClass=\"\"               # [REQUIRED] Type of database instance type.\n$Instance1Identifier=\"\"         # [REQUIRED] Identifier(name) used for database instance 1 (maybe writer)\n$Instance2Identifier=\"\"         # [REQUIRED] Identifier(name) used for database instance 2 (maybe reader)\n$MonitoringRoleName=\"\"          # [REQUIRED] Name of database monitoring iam role.\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/global-db-cluster/aurora-postgresql-instance/aurora-primary.yaml\naws cloudformation deploy `\n--template-file ./aurora-primary.yaml `\n--stack-name $STACK_NAME `\n--parameter-overrides `\nProjectName=$PROJECT_NAME `\nSubnetGroupName=$SubnetGroupName `\nSubnets=$Subnets `\nSecurityGroupIds=$SecurityGroupIds `\nClusterParameterGroupName=$ClusterParameterGroupName `\nParameterGroupName=$ParameterGroupName `\nClusterParameterGroupFamily=$ClusterParameterGroupFamily `\nGlobalClusterIdentifier=$GlobalClusterIdentifier `\nClusterIdentifier=$ClusterIdentifier `\nEngineVersion=$EngineVersion `\nKmsKeyId=$KmsKeyId `\nDeletionProtection=$DeletionProtection `\nVpcId=$VpcId `\nPort=$Port `\nCreateSecurityGroup=$CreateSecurityGroup `\nSecurityGroupNameOrId=$SecurityGroupNameOrId `\nCreateSecurityGroup=$CreateSecurityGroup `\nUsername=$Username `\nPassword=$Password `\nInstanceClass=$InstanceClass `\nInstance1Identifier=$Instance1Identifier `\nInstance2Identifier=$Instance2Identifier `\nMonitoringRoleName=$MonitoringRoleName `\n--disable-rollback `\n--tags project=$PROJECT_NAME `\n--capabilities CAPABILITY_NAMED_IAM `\n--region $REGION\n</code></pre>"},{"location":"Database/RDS/02-create-aurora-global-database/#replica_4","title":"Replica","text":"Linux Windows <pre><code>STACK_NAME=\"\"\nPROJECT_NAME=\"\"\nREGION=\"\"\n### Subnet Group Configuration\nSubnetGroupName=\"\"              # [REQUIRED] he name of this launch template.\nSubnets=\"\"                      # [REQUIRED] List of database subnet ids.\n### Parameter Group Configuration\nClusterParameterGroupName=\"\"    # [REQUIRED] Name of database cluster parameter group.\nParameterGroupName=\"\"           # [REQUIRED] Name of database parameter group.\nClusterParameterGroupFamily=\"\"  # [REQUIRED] Name of database cluster parameter group family.\n### Global Cluster Configuration\nGlobalClusterIdentifier=\"\"      # [REQUIRED] Identifier(name) used for global database cluster.\n### Cluster Configuration - General\nClusterIdentifier=\"\"            # [REQUIRED] Identifier(name) used for database cluster.\nEngineVersion=\"\"                # [REQUIRED] EngineVersion for database. (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion)\nKmsKeyId=\"\"                     # [optional] Arn of kms key for database cluster. (If don't specify this property, use default key.)\nDeletionProtection=\"true\"       # `false`(default) or `true` | [optional] State for database deletion protection.\n### Cluster Configuration - Network\nVpcId=\"\"                        # [REQUIRED] ID of database vpc.\nPort=\"5432\"                     # [REQUIRED] Port number for database instance.\nCreateSecurityGroup=\"Yes\"       # `Yes`(default) or `No` | [REQUIRED] Create a new security group or using existed security group.\nSecurityGroupNameOrId=\"\"        # [REQUIRED] New security group name or existed security group id.\n### Instance Configuration\nInstanceClass=\"\"                # [REQUIRED] Type of database instance type.\nInstance1Identifier=\"\"          # [REQUIRED] Identifier(name) used for database instance 1 (maybe writer)\nInstance2Identifier=\"\"          # [REQUIRED] Identifier(name) used for database instance 2 (maybe reader)\nMonitoringRoleName=\"\"           # [REQUIRED] Name of database monitoring iam role.\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/global-db-cluster/aurora-postgresql-instance/aurora-replica.yaml\n\naws cloudformation deploy \\\n--template-file ./aurora-replica.yaml \\\n--stack-name $STACK_NAME \\\n--parameter-overrides \\\nProjectName=$PROJECT_NAME \\\nSubnetGroupName=$SubnetGroupName \\\nSubnets=$Subnets \\\nSecurityGroupIds=$SecurityGroupIds \\\nClusterParameterGroupName=$ClusterParameterGroupName \\\nParameterGroupName=$ParameterGroupName \\\nClusterParameterGroupFamily=$ClusterParameterGroupFamily \\\nGlobalClusterIdentifier=$GlobalClusterIdentifier \\\nClusterIdentifier=$ClusterIdentifier \\\nEngineVersion=$EngineVersion \\\nKmsKeyId=$KmsKeyId \\\nDeletionProtection=$DeletionProtection \\\nVpcId=$VpcId \\\nPort=$Port \\\nCreateSecurityGroup=$CreateSecurityGroup \\\nSecurityGroupNameOrId=$SecurityGroupNameOrId \\\nCreateSecurityGroup=$CreateSecurityGroup \\\nInstanceClass=$InstanceClass \\\nInstance1Identifier=$Instance1Identifier \\\nInstance2Identifier=$Instance2Identifier \\\nMonitoringRoleName=$MonitoringRoleName \\\n--disable-rollback \\\n--tags project=$PROJECT_NAME \\\n--capabilities CAPABILITY_NAMED_IAM \\\n--region $REGION\n</code></pre> <pre><code>$STACK_NAME=\"\"\n$PROJECT_NAME=\"\"\n$REGION=\"\"\n### Subnet Group Configuration\n$SubnetGroupName=\"\"             # [REQUIRED] he name of this launch template.\n$Subnets=\"\"                     # [REQUIRED] List of database subnet ids.\n### Parameter Group Configuration\n$ClusterParameterGroupName=\"\"   # [REQUIRED] Name of database cluster parameter group.\n$ParameterGroupName=\"\"          # [REQUIRED] Name of database parameter group.\n$ClusterParameterGroupFamily=\"\" # [REQUIRED] Name of database cluster parameter group family.\n### Global Cluster Configuration\n$GlobalClusterIdentifier=\"\"     # [REQUIRED] Identifier(name) used for global database cluster.\n### Cluster Configuration - General\n$ClusterIdentifier=\"\"           # [REQUIRED] Identifier(name) used for database cluster.\n$EngineVersion=\"\"               # [REQUIRED] EngineVersion for database. (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion)\n$KmsKeyId=\"\"                    # [optional] Arn of kms key for database cluster. (If don't specify this property, use default key.)\n$DeletionProtection=\"true\"      # `false`(default) or `true` | [optional] State for database deletion protection.\n### Cluster Configuration - Network\n$VpcId=\"\"                       # [REQUIRED] ID of database vpc.\n$Port=\"5432\"                    # [REQUIRED] Port number for database instance.\n$CreateSecurityGroup=\"Yes\"      # `Yes`(default) or `No` | [REQUIRED] Create a new security group or using existed security group.\n$SecurityGroupNameOrId=\"\"       # [REQUIRED] New security group name or existed security group id.\n### Instance Configuration\n$InstanceClass=\"\"               # [REQUIRED] Type of database instance type.\n$Instance1Identifier=\"\"         # [REQUIRED] Identifier(name) used for database instance 1 (maybe writer)\n$Instance2Identifier=\"\"         # [REQUIRED] Identifier(name) used for database instance 2 (maybe reader)\n$MonitoringRoleName=\"\"          # [REQUIRED] Name of database monitoring iam role.\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/global-db-cluster/aurora-postgresql-instance/aurora-replica.yaml\naws cloudformation deploy `\n--template-file ./aurora-replica.yaml `\n--stack-name $STACK_NAME `\n--parameter-overrides `\nProjectName=$PROJECT_NAME `\nSubnetGroupName=$SubnetGroupName `\nSubnets=$Subnets `\nSecurityGroupIds=$SecurityGroupIds `\nClusterParameterGroupName=$ClusterParameterGroupName `\nParameterGroupName=$ParameterGroupName `\nClusterParameterGroupFamily=$ClusterParameterGroupFamily `\nGlobalClusterIdentifier=$GlobalClusterIdentifier `\nClusterIdentifier=$ClusterIdentifier `\nEngineVersion=$EngineVersion `\nKmsKeyId=$KmsKeyId `\nDeletionProtection=$DeletionProtection `\nVpcId=$VpcId `\nPort=$Port `\nCreateSecurityGroup=$CreateSecurityGroup `\nSecurityGroupNameOrId=$SecurityGroupNameOrId `\nCreateSecurityGroup=$CreateSecurityGroup `\nInstanceClass=$InstanceClass `\nInstance1Identifier=$Instance1Identifier `\nInstance2Identifier=$Instance2Identifier `\nMonitoringRoleName=$MonitoringRoleName `\n--disable-rollback `\n--tags project=$PROJECT_NAME `\n--capabilities CAPABILITY_NAMED_IAM `\n--region $REGION\n</code></pre>"},{"location":"Database/RDS/02-create-aurora-global-database/#failover-and-recovery","title":"Failover and Recovery","text":"Linux Windows <pre><code>STACK_NAME=\"\"\nPROJECT_NAME=\"\"\nREGION=\"\"\n### Failover Configuration\nRdsGlobalClusterName=\"\"     # [REQUIRED] The name of RDS global cluster.\nRoute53HostesdZoneId=\"\"     # [REQUIRED] The id of Route53 Hosted Zone.\nRoute53RecordName=\"\"        # [REQUIRED] The record name of Route53 Hosted Zone(ex. db.test.lobal).\n### Function Configuration\nRoleName=\"\"                 # [REQUIRED] The name of function's IAM role.\nFunctionName=\"\"             # [REQUIRED] The name of Lambda function.\nEventName=\"\"                # [REQUIRED] The name of EventBridge rule.\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/global-db-cluster/failover/aurora-failover.yaml\n\naws cloudformation deploy \\\n--template-file ./aurora-primary.yaml \\\n--stack-name $STACK_NAME \\\n--parameter-overrides \\\nProjectName=$PROJECT_NAME \\\nSubnetGroupName=$SubnetGroupName \\\nRdsGlobalClusterName=$RdsGlobalClusterName \\\nRoute53HostesdZoneId=$Route53HostesdZoneId \\\nRoute53RecordName=$Route53RecordName \\\nRoleName=$RoleName \\\nFunctionName=$FunctionName \\\nEventName=$EventName \\\n--disable-rollback \\\n--tags project=$PROJECT_NAME \\\n--capabilities CAPABILITY_NAMED_IAM \\\n--region $REGION\n</code></pre> <pre><code>$STACK_NAME=\"\"\n$PROJECT_NAME=\"\"\n$REGION=\"\"\n### Failover Configuration\n$RdsGlobalClusterName=\"\"    # [REQUIRED] The name of RDS global cluster.\n$Route53HostesdZoneId=\"\"    # [REQUIRED] The id of Route53 Hosted Zone.\n$Route53RecordName=\"\"       # [REQUIRED] The record name of Route53 Hosted Zone(ex. db.test.lobal).\n### Function Configuration\n$RoleName=\"\"                # [REQUIRED] The name of function's IAM role.\n$FunctionName=\"\"            # [REQUIRED] The name of Lambda function.\n$EventName=\"\"               # [REQUIRED] The name of EventBridge rule.\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/rds/global-db-cluster/failover/aurora-failover.yaml\naws cloudformation deploy `\n--template-file ./aurora-primary.yaml `\n--stack-name $STACK_NAME `\n--parameter-overrides `\nProjectName=$PROJECT_NAME `\nSubnetGroupName=$SubnetGroupName `\nRdsGlobalClusterName=$RdsGlobalClusterName `\nRoute53HostesdZoneId=$Route53HostesdZoneId `\nRoute53RecordName=$Route53RecordName `\nRoleName=$RoleName `\nFunctionName=$FunctionName `\nEventName=$EventName `\n--disable-rollback `\n--tags project=$PROJECT_NAME `\n--capabilities CAPABILITY_NAMED_IAM `\n--region $REGION\n</code></pre>"},{"location":"Database/RDS/03-cdc-to-dms/","title":"CDC to DMS (MySQL)","text":""},{"location":"Database/RDS/03-cdc-to-dms/#cluster-parameter-group","title":"Cluster Parameter Group","text":"<ul> <li><code>binlog_format</code> : <code>ROW</code></li> <li><code>binlog_row_image</code> : <code>full</code></li> <li><code>binlog_checksum</code> : <code>NONE</code></li> </ul>"},{"location":"Database/RDS/03-cdc-to-dms/#cloudformation-template-example","title":"CloudFormation Template Example","text":"<pre><code>Resources:\nClusterParameterGroup:\nType: AWS::RDS::DBClusterParameterGroup\nProperties:\nDBClusterParameterGroupName: &lt;CLUSTER PARAMETER GROUP NAME&gt;\nDescription: &lt;CLUSTER PARAMETER GROUP NAME&gt;\nFamily: aurora-mysql8.0\nParameters:\ntime_zone: UTC                                    # MySQL family\nbinlog_format: ROW\nbinlog_row_image: full\nbinlog_checksum: NONE\nTags:\n- Key: project\nValue: &lt;PROJECT NAME&gt;\n</code></pre>"},{"location":"Database/SQL/01-example-queries/","title":"Example Queries","text":""},{"location":"Database/SQL/01-example-queries/#about-connection","title":"About Connection","text":""},{"location":"Database/SQL/01-example-queries/#connect-to-database","title":"Connect to Database","text":"MySQLPostgreSQL <pre><code>mysql -u USERNAME -h HOSTNAME -P PORT -p\n</code></pre> <pre><code>psql -U USERNAME -h HOSTNAME -p PORT\n</code></pre>"},{"location":"Database/SQL/01-example-queries/#about-database","title":"About Database","text":""},{"location":"Database/SQL/01-example-queries/#create-database","title":"Create Database","text":"MySQLPostgreSQL <pre><code>CREATE DATABASE `DB_NAME`;\n</code></pre> <pre><code>CREATE SCHEMA \"DB_NAME\";\n</code></pre>"},{"location":"Database/SQL/01-example-queries/#use-database","title":"Use Database","text":"MySQLPostgreSQL <pre><code>USE `DB_NAME`;\n</code></pre> <pre><code>\\c \"DB_NAME\"\n</code></pre>"},{"location":"Database/SQL/01-example-queries/#list-databases","title":"List Databases","text":"MySQLPostgreSQL <pre><code>SHOW DATABASES;\n</code></pre> <pre><code>\\dn\n</code></pre>"},{"location":"Database/SQL/01-example-queries/#delete-database","title":"Delete Database","text":"MySQLPostgreSQL <pre><code>DROP DATABASE `DB_NAME`;\n</code></pre> <pre><code>DROP SCHEMA \"DB_NAME\";\n</code></pre>"},{"location":"Database/SQL/01-example-queries/#about-user","title":"About User","text":""},{"location":"Database/SQL/01-example-queries/#create-user","title":"Create User","text":"MySQLPostgreSQL <pre><code>CREATE USER `USER_NAME`@`%` IDENTIFIED BY 'USER_PASSWORD';\n</code></pre> <pre><code>CREATE USER \"USER_NAME\" WITH ENCRYPTED PASSWORD \"USER_PASSWORD\";\n</code></pre>"},{"location":"Database/SQL/01-example-queries/#about-grant","title":"About Grant","text":""},{"location":"Database/SQL/01-example-queries/#grant-to-user","title":"Grant to User","text":"MySQLPostgreSQL <pre><code>GRANT ALL PRIVILEGES ON `DB_NAME`.* TO `USER_NAME`@`%`;\nFLUSH PRIVILEGES;\n</code></pre> <pre><code>GRANT ALL PRIVILEGES ON DATABASE \"DB_NAME\" TO \"USER_NAME\";\n</code></pre>"},{"location":"Database/SQL/01-example-queries/#about-table","title":"About Table","text":""},{"location":"Database/SQL/01-example-queries/#create-table","title":"Create Table","text":"MySQLPostgreSQL <pre><code>CREATE TABLE `DB_NAME`.`TABLE_NAME` (\nIDX INT NOT NULL PRIMARY KEY AUTO_INCREMENT,\nNAME VARCHAR(255),\nOTHER_ID INT,\nINDEX NAME_IDX(NAME),\nFOREIGN KEY (OTHER_ID) REFERENCES `OTHER_TABLE_NAME` (OTHER_TABLE_COLUMN_NAME) ON UPDATE CASCADE\n);\n</code></pre> <pre><code>CREATE TABLE \"DB_NAME\".\"TABLE_NAME\" (\nIDX INT NOT NULL PRIMARY KEY AUTO_INCREMENT,\nNAME VARCHAR(255),\nOTHER_ID INT,\nFOREIGN KEY (OTHER_ID) REFERENCES \"DB_NAME\".\"OTHER_TABLE_NAME\" (OTHER_TABLE_COLUMN_NAME) ON UPDATE CASCADE\n);\nCREATE INDEX \"INDEX_NAME\" ON \"DB_NAME\".\"TABLE_NAME\" (COLUMN_NAME);\n</code></pre>"},{"location":"Developer%20Tools/CodeBuild/01-build-with-custom-image/","title":"Build with Custom Image","text":""},{"location":"Developer%20Tools/CodeBuild/01-build-with-custom-image/#using-ecr-private-repository","title":"Using ECR Private Repository","text":""},{"location":"Developer%20Tools/CodeBuild/01-build-with-custom-image/#add-resource-based-policy","title":"Add Resource-Based Policy","text":"ecr-repository-permission.json<pre><code>{\n\"Version\":\"2012-10-17\",\n\"Statement\":[\n{\n\"Sid\":\"CodeBuildAccessPrincipal\",\n\"Effect\":\"Allow\",\n\"Principal\":{\n\"Service\":\"codebuild.amazonaws.com\"\n},\n\"Action\":[\n\"ecr:GetDownloadUrlForLayer\",\n\"ecr:BatchGetImage\",\n\"ecr:BatchCheckLayerAvailability\"\n],\n\"Condition\":{\n\"StringEquals\":{\n\"aws:SourceArn\":\"arn:aws:codebuild:&lt;region&gt;:&lt;aws-account-id&gt;:project/&lt;project-name&gt;\",\n\"aws:SourceAccount\":\"&lt;aws-account-id&gt;\"\n}\n}\n}\n]\n}\n</code></pre>"},{"location":"Developer%20Tools/CodeBuild/02-build-with-eks/","title":"Build with EKS","text":""},{"location":"Developer%20Tools/CodeBuild/02-build-with-eks/#deploy-application-to-eks-with-codedeploy","title":"Deploy application to EKS with CodeDeploy","text":""},{"location":"Developer%20Tools/CodeBuild/02-build-with-eks/#create-deployspecyml","title":"Create <code>deployspec.yml</code>","text":"Note <p>You should define below environment variables in CodeBuild project.</p> deployspec.yml<pre><code>version: 0.2\nrun-as: root\nphases:\ninstall:\non-failure: ABORT\nruntime-versions:\npython: 3.9\ncommands:\n- echo Install started on `date`\n- echo Remove AWS CLI v1\n- aws --version\n- pip3 uninstall -y awscli\n- echo Install AWS CLI v2\n- curl \"https://awscli.amazonaws.com/awscli-exe-linux-$(uname -p).zip\" -o \"awscliv2.zip\"\n- unzip awscliv2.zip\n- ./aws/install -i /usr/aws-cli -b /usr/bin\n- echo Install kubectl\n- curl -o kubectl https://s3.us-west-2.amazonaws.com/amazon-eks/1.23.7/2022-06-29/bin/linux/amd64/kubectl\n- chmod +x ./kubectl\n- mkdir -p $HOME/bin &amp;&amp; cp ./kubectl $HOME/bin/kubectl &amp;&amp; export PATH=$PATH:$HOME/bin\n- echo 'export PATH=$PATH:$HOME/bin' &gt;&gt; ~/.bashrc\n- kubectl version --short --client\npre_build:\non-failure: ABORT\ncommands:\n- echo Pre build started on `date`\n- aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION\nbuild:\non-failure: ABORT\ncommands:\n- echo Build started on `date`\n- aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com\n- docker build -t $REPOSITORY_URI:latest .\n- docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$VERSION\npost_build:\non-failure: ABORT\ncommands:\n- echo Post build started on `date`\n- docker push $REPOSITORY_URI:$VERSION\n- docker push $REPOSITORY_URI:latest\n- sed -i \"s|IMAGE|$REPOSITORY_URI:$VERSION|g\" ./deployment.yaml\n- kubectl apply -f deployment.yaml\n</code></pre>"},{"location":"Developer%20Tools/CodeBuild/02-build-with-eks/#update-aws-auth","title":"Update <code>aws-auth</code>","text":"<pre><code>kubectl edit cm aws-auth -n kube-system\n</code></pre> <p>Add CodeBuild service role to <code>aws-auth</code>.</p> <pre><code>    - rolearn: arn:aws:iam::&lt;account id&gt;:role/&lt;codebuile service role name&gt;\nusername: &lt;codebuile service role name&gt;\ngroups:\n- system:masters\n</code></pre> <p>Note</p> <p>Please DO NOT ADD with <code>/service-role/</code></p> <p><code>arn:aws:iam::{account_id}:role/service-role/codebuild-EKS-DEPLOY-service-role</code> (x)</p> <p><code>arn:aws:iam::{account_id}:role/codebuild-EKS-DEPLOY-service-role</code> (o)</p> Example aws-auth.yaml<pre><code>apiVersion: v1\ndata:\nmapRoles: |\n- groups:\n- system:bootstrappers\n- system:nodes\n- system:node-proxier\nrolearn: arn:aws:iam::&lt;account id&gt;:role/&lt;node or fargate role&gt;\nusername: system:node:{{SessionName}}\n- rolearn: arn:aws:iam::&lt;account id&gt;:role/&lt;codebuild service role name&gt;\nusername: &lt;codebuild service role name&gt;\ngroups:\n- system:masters\nkind: ConfigMap\nmetadata:\ncreationTimestamp: \"2022-08-19T00:05:00Z\"\nname: aws-auth\nnamespace: kube-system\nresourceVersion: \"36933\"\nuid: edbcf405-1bf6-4a4b-95b3-9c9cc71979cd\n</code></pre>"},{"location":"Developer%20Tools/CodeBuild/03-build-with-cache/","title":"Build with Cache","text":""},{"location":"Developer%20Tools/CodeBuild/03-build-with-cache/#go","title":"Go","text":"<pre><code>/go/pkg/mod/**/*\n</code></pre>"},{"location":"Developer%20Tools/CodeBuild/03-build-with-cache/#nodejs","title":"NodeJS","text":"<pre><code>/root/.npm/**/*\n/usr/lib/node_modules/**/*\n</code></pre>"},{"location":"Developer%20Tools/CodeBuild/03-build-with-cache/#php","title":"PHP","text":""},{"location":"Developer%20Tools/CodeBuild/03-build-with-cache/#composer","title":"Composer","text":"<pre><code>/root/.composer/**/*\n</code></pre>"},{"location":"Developer%20Tools/CodeBuild/03-build-with-cache/#java","title":"Java","text":""},{"location":"Developer%20Tools/CodeBuild/03-build-with-cache/#gradle","title":"Gradle","text":"<pre><code>/root/.gradle/**/*\n</code></pre>"},{"location":"Developer%20Tools/CodeBuild/03-build-with-cache/#maven","title":"Maven","text":"<pre><code>/root/.m2/**/*\n</code></pre>"},{"location":"Developer%20Tools/CodeBuild/03-build-with-cache/#python","title":"Python","text":"<p>Note</p> <p>You should fix Python version.</p> <pre><code>/usr/local/lib/pythonO.O/site-package/\n</code></pre>"},{"location":"Developer%20Tools/CodeBuild/04-sample-buildspec/","title":"Sample Buildspec","text":"buildspec.yml<pre><code>version: 0.2\nphases:\npre_build:\ncommands:\n- echo \"install pypy3.8\"\n- wget https://downloads.python.org/pypy/pypy3.8-v7.3.9-linux64.tar.bz2 -P /tmp/\n- tar xf /tmp/pypy3.8-v7.3.9-linux64.tar.bz2 -C /tmp/\nbuild:\ncommands:\n- echo Build started on `date`\n- /tmp/pypy3.8-v7.3.9-linux64/bin/pypy3 -m py_compile src/app.py\npost_build:\ncommands:\n- echo Build completed on `date`\n- mv src/__pycache__/app.pypy38.pyc .\nartifacts:\nfiles:\n- scripts/**/*\n- appspec.yml\n- requirements.txt\n- app.pypy38.pyc\n</code></pre> <p>AWS Documentation</p>"},{"location":"Developer%20Tools/CodeCommit/01-using-git/","title":"Using Git","text":""},{"location":"Developer%20Tools/CodeCommit/01-using-git/#set-up-git","title":"Set Up <code>git</code>","text":"<pre><code>USER_NAME=\"&lt;user_name&gt;\"\nUSER_EMAIL=\"&lt;user_email&gt;\"\nsudo yum update -y\nsudo yum install -y git\n\ngit config --global credential.helper '!aws codecommit credential-helper $@'\ngit config --global credential.UseHttpPath true\ngit config --global user.name $USER_NAME\ngit config --global user.email $USER_EMAIL\n</code></pre>"},{"location":"Developer%20Tools/CodeDeploy/01-install-codedeploy-agent/","title":"Install CodeDeploy Agent","text":"Amazon LinuxUbuntu <pre><code>TOKEN=`curl -X PUT \"http://169.254.169.254/latest/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\"`\nREGION=`curl \\\n-H \"X-aws-ec2-metadata-token: $TOKEN\" \\\nhttp://169.254.169.254/latest/meta-data/placement/availability-zone | sed '$s/.$//'`\nsudo yum update -y\nsudo yum install -y wget ruby\n\ncd /home/ec2-user\nwget https://aws-codedeploy-$REGION.s3.$REGION.amazonaws.com/latest/install\nchmod +x ./install\nsudo ./install auto\n\nsudo systemctl status codedeploy-agent\n</code></pre> <pre><code>TOKEN=`curl -X PUT \"http://169.254.169.254/latest/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\"`\nREGION=`curl \\\n-H \"X-aws-ec2-metadata-token: $TOKEN\" \\\nhttp://169.254.169.254/latest/meta-data/placement/availability-zone | sed '$s/.$//'`\nsudo apt update -y\nsudo apt install -y ruby-full wget\n\ncd /home/ubuntu\nwget https://aws-codedeploy-$REGION.s3.$REGION.amazonaws.com/latest/install\nchmod +x ./install\nsudo ./install auto &gt; /tmp/logfile\n\nsudo systemctl status codedeploy-agent\n</code></pre>"},{"location":"Developer%20Tools/CodeDeploy/02-sample-appspec/","title":"Sample Appspec","text":"<p>AWS Documentation</p>"},{"location":"Developer%20Tools/CodeDeploy/02-sample-appspec/#ec2on-premises","title":"EC2/On-Premises","text":"appspec.yml<pre><code>version: 0.0\nos: linux\nfiles:\n- source: /app.pypy38.pyc\ndestination: /opt/app\n- source: /requirements.txt\ndestination: /opt/app\nfile_exists_behavior: OVERWRITE # DISALLOW | OVERWRITE | RETAIN\nhooks:\nBeforeInstall:\n- location: scripts/before_install.sh\ntimeout: 300\nrunas: root\nAfterInstall:\n- location: scripts/after_install.sh\ntimeout: 300\nrunas: root\nApplicationStart:\n- location: scripts/application_start.sh\ntimeout: 300\nrunas: root\nApplicationStop:\n- location: scripts/application_stop.sh\ntimeout: 300\nrunas: root\n</code></pre>"},{"location":"Developer%20Tools/CodeDeploy/02-sample-appspec/#ecs","title":"ECS","text":"appspec.yml<pre><code>version: 0.0\nResources:\n- TargetService:\nType: AWS::ECS::Service\nProperties:\nTaskDefinition: \"&lt;TASK_DEFINITION&gt;\"\nLoadBalancerInfo:\nContainerName: \"webapp\"\nContainerPort: 5000\nCapacityProviderStrategy:\n- Base: 0\nCapacityProvider: \"example-ecs-cluster-EC2CapacityProvider-QWqu8ZG9Rvfl\"\nWeight: 2\n</code></pre>"},{"location":"Developer%20Tools/CodeDeploy/02-sample-appspec/#lambda","title":"Lambda","text":"appspec.yml<pre><code>version: 0.0\nResources:\n- myLambdaFunction:\nType: AWS::Lambda::Function\nProperties:\nName: \"myLambdaFunction\"\nAlias: \"myLambdaFunctionAlias\"\nCurrentVersion: \"1\"\nTargetVersion: \"2\"\nHooks:\n- BeforeAllowTraffic: \"LambdaFunctionToValidateBeforeTrafficShift\"\n- AfterAllowTraffic: \"LambdaFunctionToValidateAfterTrafficShift\"\n</code></pre>"},{"location":"Developer%20Tools/CodePipeline/01-invoke-lambda/","title":"Invoke Lambda","text":""},{"location":"Developer%20Tools/CodePipeline/01-invoke-lambda/#create-a-lambda-function","title":"Create a Lambda Function","text":"lambda_function.py<pre><code>import boto3\nclient = boto3.client('codepipeline')\ndef lambda_handler(event, context):\n# get codepipeline job id from event\njob_id = event['CodePipeline.job']['id']\n# codepipeline job successful\nclient.put_job_success_result(jobId=job_id)\n# codepipeline job failed\nclient.put_job_failure_result(\njobId=job_id,\nfailureDetails={\n'type': 'JobFailed'|'ConfigurationError'|'PermissionError'|'RevisionOutOfSync'|'RevisionUnavailable'|'SystemUnavailable',\n'message': ''\n}\n)\n</code></pre> <p>Note</p> <p>You should add this policy to lambda function's role.</p> <pre><code>{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"VisualEditor0\",\n\"Effect\": \"Allow\",\n\"Action\": [\n\"codepipeline:PutJobFailureResult\",\n\"codepipeline:PutJobSuccessResult\"\n],\n\"Resource\": \"*\"\n}\n]\n}\n</code></pre>"},{"location":"Developer%20Tools/CodePipeline/01-invoke-lambda/#example-json-event","title":"Example JSON Event","text":"<pre><code>{\n\"CodePipeline.job\": {\n\"id\": \"11111111-abcd-1111-abcd-111111abcdef\",\n\"accountId\": \"111111111111\",\n\"data\": {\n\"actionConfiguration\": {\n\"configuration\": {\n\"FunctionName\": \"MyLambdaFunctionForAWSCodePipeline\",\n\"UserParameters\": \"some-input-such-as-a-URL\"\n}\n},\n\"inputArtifacts\": [\n{\n\"location\": {\n\"s3Location\": {\n\"bucketName\": \"the name of the bucket configured as the pipeline artifact store in Amazon S3, for example codepipeline-us-east-2-1234567890\",\n\"objectKey\": \"the name of the application, for example CodePipelineDemoApplication.zip\"\n},\n\"type\": \"S3\"\n},\n\"revision\": null,\n\"name\": \"ArtifactName\"\n}\n],\n\"outputArtifacts\": [],\n\"artifactCredentials\": {\n\"secretAccessKey\": \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\",\n\"sessionToken\": \"MIICiTCCAfICCQD6m7oRw0uXOjANBgkqhkiG9w\n 0BAQUFADCBiDELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAldBMRAwDgYDVQQHEwdTZ\n WF0dGxlMQ8wDQYDVQQKEwZBbWF6b24xFDASBgNVBAsTC0lBTSBDb25zb2xlMRIw\n EAYDVQQDEwlUZXN0Q2lsYWMxHzAdBgkqhkiG9w0BCQEWEG5vb25lQGFtYXpvbi5\n jb20wHhcNMTEwNDI1MjA0NTIxWhcNMTIwNDI0MjA0NTIxWjCBiDELMAkGA1UEBh\n MCVVMxCzAJBgNVBAgTAldBMRAwDgYDVQQHEwdTZWF0dGxlMQ8wDQYDVQQKEwZBb\n WF6b24xFDASBgNVBAsTC0lBTSBDb25zb2xlMRIwEAYDVQQDEwlUZXN0Q2lsYWMx\n HzAdBgkqhkiG9w0BCQEWEG5vb25lQGFtYXpvbi5jb20wgZ8wDQYJKoZIhvcNAQE\n BBQADgY0AMIGJAoGBAMaK0dn+a4GmWIWJ21uUSfwfEvySWtC2XADZ4nB+BLYgVI\n k60CpiwsZ3G93vUEIO3IyNoH/f0wYK8m9TrDHudUZg3qX4waLG5M43q7Wgc/MbQ\n ITxOUSQv7c7ugFFDzQGBzZswY6786m86gpEIbb3OhjZnzcvQAaRHhdlQWIMm2nr\n AgMBAAEwDQYJKoZIhvcNAQEFBQADgYEAtCu4nUhVVxYUntneD9+h8Mg9q6q+auN\n KyExzyLwaxlAoo7TJHidbtS4J5iNmZgXL0FkbFFBjvSfpJIlJ00zbhNYS5f6Guo\n EDmFJl0ZxBHjJnyp378OD8uTs7fLvjx79LjSTbNYiytVbZPQUQ5Yaxu2jXnimvw\n 3rrszlaEXAMPLE=\",\n\"accessKeyId\": \"AKIAIOSFODNN7EXAMPLE\"\n},\n\"continuationToken\": \"A continuation token if continuing job\",\n\"encryptionKey\": { \"id\": \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\",\n\"type\": \"KMS\"\n}\n}\n}\n}\n</code></pre>"},{"location":"Developer%20Tools/cloud9/01-cloud9-on-existed-instance/","title":"Cloud9 on Existed Instance","text":""},{"location":"Developer%20Tools/cloud9/01-cloud9-on-existed-instance/#install-libraries","title":"Install Libraries","text":"Amazon LinuxUbuntu <pre><code>sudo su\n\nyum update -y\nyum install -y glibc-static gcc wget ncurses-devel jq\nyum groupinstall -y development\n\nexit\n</code></pre> <pre><code>sudo su\n\napt-get update -y\napt-get upgrade -y\napt-get install -y build-essential wget jq python3-pip python2\n\nexit\n</code></pre>"},{"location":"Developer%20Tools/cloud9/01-cloud9-on-existed-instance/#create-cloud9-user","title":"Create Cloud9 User","text":"Amazon LinuxUbuntu <pre><code>sudo su\n\nAUTHORIZED_KEYS=\"&lt;AUTHORIZED_KEYS&gt;\"\nuseradd cloud9\necho \"1234\" | passwd --stdin cloud9\n\nmkdir -p /home/cloud9/.ssh\necho $AUTHORIZED_KEYS &gt; /home/cloud9/.ssh/authorized_keys\nchown -R cloud9:cloud9 /home/cloud9/.ssh\n\necho \"cloud9 ALL=(ALL) NOPASSWD:ALL\" &gt;&gt; /etc/sudoers.d/90-cloud-init-users\n\nexit\n</code></pre> <pre><code>sudo su\n\nAUTHORIZED_KEYS=\"&lt;AUTHORIZED_KEYS&gt;\"\nuseradd -m -s /bin/bash -p $(openssl passwd -1 1234) cloud9\n\nmkdir -p /home/cloud9/.ssh\necho $AUTHORIZED_KEYS &gt; /home/cloud9/.ssh/authorized_keys\nchown -R cloud9:cloud9 /home/cloud9/\n\necho \"cloud9 ALL=(ALL) NOPASSWD:ALL\" &gt;&gt; /etc/sudoers.d/90-cloud-init-users\n\nexit\n</code></pre>"},{"location":"Developer%20Tools/cloud9/01-cloud9-on-existed-instance/#install-nodejs","title":"Install Node.js","text":"<pre><code>sudo -S su cloud9\n\ncd ~\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.0/install.sh | bash\n. ~/.bashrc\nnvm install 16\nnode --version\nnpm --version npm install -g npm c9\n\nwhereis node\n\nexit\n</code></pre>"},{"location":"Developer%20Tools/cloud9/01-cloud9-on-existed-instance/#get-cloud9-ip-range","title":"Get Cloud9 IP Range","text":"<pre><code>REGION=\"&lt;region code&gt;\"\ncurl -L --silent https://ip-ranges.amazonaws.com/ip-ranges.json | jq '.prefixes[] | select((.service==\"CLOUD9\") and (.region=='\\\"$REGION\\\"'))'\n</code></pre>"},{"location":"General/01-install-awscli-v2/","title":"Install AWS CLI v2","text":""},{"location":"General/01-install-awscli-v2/#uninstall-aws-cli-v1","title":"Uninstall AWS CLI v1","text":"Amazon LinuxUbuntu <pre><code>sudo yum remove -y awscli\nsource ~/.bash_profile\n</code></pre> <p>Nothing.</p>"},{"location":"General/01-install-awscli-v2/#install-aws-cli-v2_1","title":"Install AWS CLI v2","text":"Amazon LinuxUbuntu <pre><code>cd\ncurl \"https://awscli.amazonaws.com/awscli-exe-linux-$(uname -p).zip\" -o \"awscliv2.zip\"\nunzip awscliv2.zip\nsudo ./aws/install -i /usr/local/aws-cli -b /usr/local/bin\n\nsudo su\ncd\ncurl \"https://awscli.amazonaws.com/awscli-exe-linux-$(uname -p).zip\" -o \"awscliv2.zip\"\nunzip awscliv2.zip\n./aws/install -i /usr/aws-cli -b /usr/bin\nexit\nrm -rf aws*\n</code></pre> Enable Shell Autocomplete <pre><code>echo \"complete -C '/usr/local/bin/aws_completer' aws\" | sudo tee -a /etc/bashrc &gt; /dev/null\n</code></pre> <pre><code>sudo apt-get update -y\nsudo apt-get upgrade -y\nsudo apt-get install -y unzip\n\ncd\ncurl \"https://awscli.amazonaws.com/awscli-exe-linux-$(uname -p).zip\" -o \"awscliv2.zip\"\nunzip awscliv2.zip\nsudo ./aws/install -i /usr/local/aws-cli -b /usr/local/bin\n\nsudo su\ncd\ncurl \"https://awscli.amazonaws.com/awscli-exe-linux-$(uname -p).zip\" -o \"awscliv2.zip\"\nunzip awscliv2.zip\n./aws/install -i /usr/aws-cli -b /usr/bin\nrm -rf aws*\nexit\n</code></pre> Enable Shell Autocomplete <pre><code>echo \"complete -C '/usr/local/bin/aws_completer' aws\" | sudo tee -a /etc/bash.bashrc &gt; /dev/null\n</code></pre> <p>AWS Documentation</p>"},{"location":"General/02-install-python-311/","title":"Install Python 3.11","text":"<p>OpenSSL Python</p> Amazon Linux 2/CentOS 7Ubuntu <pre><code>sudo yum update -y\nsudo yum install -y zlib zlib-devel libffi libffi-devel bzip2 bzip2-devel gcc make\nsudo yum remove -y openssl openssl-devel\n\nwget https://www.openssl.org/source/openssl-1.1.1q.tar.gz\ntar -xvzf openssl-1.1.1q.tar.gz\ncd openssl-1.1.1q\n\n./config\nsudo make\nsudo make install\nsudo ln -s /usr/local/bin/openssl /usr/bin/openssl\nsudo cp libssl.so.1.1 /usr/lib64/libssl.so.1.1\nsudo cp libcrypto.so.1.1 /usr/lib64/libcrypto.so.1.1\nopenssl version\ncd\nwget https://www.python.org/ftp/python/3.11.4/Python-3.11.4.tgz\ntar -xvzf Python-3.11.4.tgz\ncd Python-3.11.4\n\n./configure\nsudo make\nsudo make install\n\nln -s /usr/local/bin/python3 /usr/bin/python3\npython3 --version\npip3 --version\n</code></pre> <pre><code>sudo apt-get update -y\nsudo apt-get upgrade -y\nsudo apt-get install -y build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev libsqlite3-dev wget libbz2-dev\n\nwget https://www.python.org/ftp/python/3.11.4/Python-3.11.4.tar.xz\ntar -xf Python-3.11.4.tar.xz\ncd Python-3.11.4\n\nsudo ./configure --enable-optimizations\nsudo make\nsudo make altinstall\n</code></pre>"},{"location":"General/03-url-test-with-curl-and-wget/","title":"URL Test with cURL","text":""},{"location":"General/03-url-test-with-curl-and-wget/#request-each-methods","title":"Request Each Methods","text":""},{"location":"General/03-url-test-with-curl-and-wget/#get","title":"GET","text":"<pre><code>curl -X GET \"&lt;URL&gt;\"\n</code></pre>"},{"location":"General/03-url-test-with-curl-and-wget/#post","title":"POST","text":"<pre><code>DATA='\n{\n    \"key1\": \"value1\",\n    \"key2\": \"value2\"\n}\n'\ncurl -X POST \\\n-H 'Content-Type: application/json' \\\n-d \"$(echo $DATA)\" \\\n\"&lt;URL&gt;\"\n</code></pre>"},{"location":"General/03-url-test-with-curl-and-wget/#put","title":"PUT","text":"<pre><code>DATA='\n{\n    \"key1\": \"value1\",\n    \"key2\": \"value2\"\n}\n'\ncurl -X PUT \\\n-H 'Content-Type: application/json' \\\n-d \"$(echo $DATA)\" \\\n\"&lt;URL&gt;\"\n</code></pre>"},{"location":"General/03-url-test-with-curl-and-wget/#delete","title":"DELETE","text":"<pre><code>curl -X DELETE \"&lt;URL&gt;\"\n</code></pre> <p>cURL Options</p>"},{"location":"General/03-url-test-with-curl-and-wget/#get-http-status-code","title":"Get HTTP Status Code","text":"<pre><code>curl -o /dev/null -w \"%{http_code}\" \"&lt;URL&gt;\"\n</code></pre>"},{"location":"General/03-url-test-with-curl-and-wget/#url-test-with-wget","title":"URL Test with Wget","text":""},{"location":"General/03-url-test-with-curl-and-wget/#request-url-silently","title":"Request URL silently","text":"<pre><code>wget --spider -S \"&lt;URL&gt;\"\n</code></pre>"},{"location":"General/03-url-test-with-curl-and-wget/#create-uuid-random-string","title":"Create UUID (Random String)","text":"<pre><code>uuidgen -r\n</code></pre>"},{"location":"General/04-get-ec2-metadata/","title":"Get EC2 Metadata","text":""},{"location":"General/04-get-ec2-metadata/#get-token-for-imds-v2","title":"Get Token for IMDS v2","text":"<pre><code>TOKEN=`curl -X PUT \"http://169.254.169.254/latest/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\"`\n</code></pre>"},{"location":"General/04-get-ec2-metadata/#get-instance-id","title":"Get Instance ID","text":"<pre><code>curl \\\n-H \"X-aws-ec2-metadata-token: $TOKEN\" \\\nhttp://169.254.169.254/latest/meta-data/instance-id\n</code></pre>"},{"location":"General/04-get-ec2-metadata/#get-availability-zone","title":"Get Availability Zone","text":"<pre><code>curl \\\n-H \"X-aws-ec2-metadata-token: $TOKEN\" \\\nhttp://169.254.169.254/latest/meta-data/placement/availability-zone\n</code></pre>"},{"location":"General/04-get-ec2-metadata/#get-region","title":"Get Region","text":"<pre><code>curl \\\n-H \"X-aws-ec2-metadata-token: $TOKEN\" \\\nhttp://169.254.169.254/latest/meta-data/placement/availability-zone | sed '$s/.$//'\n</code></pre>"},{"location":"General/05-run-scripts-using-systemd/","title":"Run Scripts using SystemD","text":""},{"location":"General/05-run-scripts-using-systemd/#create-an-application-execute-script-file","title":"Create an application execute script file","text":"/run-myapp.sh<pre><code>#!/bin/bash\n/usr/bin/python3.7 -m uvicorn app:app --host 0.0.0.0 &gt;&gt; /app.log 2&gt;&amp;1\n</code></pre>"},{"location":"General/05-run-scripts-using-systemd/#create-a-systemd-service-unit-file","title":"Create a systemd service unit file","text":"/etc/systemd/system/myapp.service<pre><code>[Unit]\nDescription=My Python Application\nAfter=network.target\n\n[Service]\nUser=root\nGroup=root\nWorkingDirectory=/\nExecStart=/run-myapp.sh\nRestart=always\nStandardInput=null\nStandardOutput=file:/app.log\nStandardError=file:/app.log\n\n[Install]\nWantedBy=multi-user.target\n</code></pre>"},{"location":"General/05-run-scripts-using-systemd/#create-a-log-file","title":"Create a log file","text":"<pre><code>touch /app.log\n</code></pre>"},{"location":"General/05-run-scripts-using-systemd/#reload-systemd","title":"Reload SystemD","text":"<pre><code>systemctl daemon-reload\n</code></pre>"},{"location":"General/05-run-scripts-using-systemd/#start-application","title":"Start application","text":"<pre><code>systemctl start myapp\n</code></pre>"},{"location":"General/05-run-scripts-using-systemd/#get-application-status","title":"Get application status","text":"<pre><code>systemctl status myapp\n</code></pre>"},{"location":"General/06-using-userdata/","title":"Using User Data","text":""},{"location":"General/06-using-userdata/#change-ssh-port","title":"Change SSH port","text":"<pre><code>#!/bin/bash\necho \"Port 2222\" &gt;&gt; /etc/ssh/sshd_config\nsystemctl restart sshd\n</code></pre>"},{"location":"General/06-using-userdata/#change-ssh-port_1","title":"Change SSH port","text":"Amazon LinuxUbuntu <pre><code>#!/bin/bash\nsed -i \"s|PasswordAuthentication no|PasswordAuthentication yes|\" /etc/ssh/sshd_config\necho -e 'ec2-user:1234' | chpasswd\nsystemctl restart sshd\n</code></pre> <pre><code>#!/bin/bash\nsed -i \"s|PasswordAuthentication no|PasswordAuthentication yes|\" /etc/ssh/sshd_config\necho -e 'ubuntu:1234' | chpasswd\nsystemctl restart sshd\n</code></pre>"},{"location":"General/07-using-fluent-bit/","title":"Using Fluent Bit","text":""},{"location":"General/07-using-fluent-bit/#install-fluent-bit-on-ec2-instance","title":"Install Fluent Bit on EC2 Instance","text":"<pre><code># install fluent bit using single line command\ncurl https://raw.githubusercontent.com/fluent/fluent-bit/master/install.sh | sh\n\n# start fluent bit\nsudo systemctl start fluent-bit\nsudo systemctl enable fluent-bit\n\n# get fluent bit status\nsudo systemctl status fluent-bit\n</code></pre> <p>Note</p> <p>Fluent Bit configuration files are <code>/etc/fluent-bit/</code> on EC2 instance.</p>"},{"location":"General/07-using-fluent-bit/#configure-fluent-bit","title":"Configure Fluent Bit","text":""},{"location":"General/07-using-fluent-bit/#eks-on-ec2","title":"EKS on EC2","text":"fluent-bit.conf<pre><code>[INPUT]\n    Name                tail\n    Tag                 application.server\n    Path                /var/log/containers/server-*\n    multiline.parser    docker, cri\n    DB                  /var/fluent-bit/state/flb_server.db\n    Mem_Buf_Limit       50MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Rotate_Wait         30\n    storage.type        filesystem\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[FILTER]\n    Name parser\n    Match application.server\n    Key_name log\n    Parser server\n\n[OUTPUT]\n    Name                kinesis_streams \n    Match               application.server\n    region              ${AWS_REGION}\n    stream              test\n    time_key            time\n    time_key_format     %Y-%m-%dT%H:%M:%S\n\n[OUTPUT]\n    Name                cloudwatch_logs\n    Match               application.server\n    region              ${AWS_REGION}\n    log_group_name      /aws/${AWS_REGION}/server\n    log_stream_prefix   ${HOST_NAME}-\n    auto_create_group   true\n    extra_user_agent    container-insights\n</code></pre> parser.conf<pre><code>[PARSER]\n    Name server\n    Format regex\n    Regex ^\\[GIN\\] (?&lt;timestamp&gt;\\d{4}\\/\\d{2}\\/\\d{2} - \\d{2}:\\d{2}:\\d{2}) \\| (?&lt;status&gt;\\d{3}) \\| *(?&lt;latency&gt;[^ ]+) \\| *(?&lt;ip&gt;\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}) \\| (?&lt;method&gt;[A-Z]+) *\\\"(?&lt;path&gt;[^ ]+)?\\\"$\n    Time_Key timestamp\n    Time_Format %Y/%m/%d - %H:%M:%S\n    Time_Keep Off\n    Types status:integer\n</code></pre>"},{"location":"General/07-using-fluent-bit/#eks-on-fargate","title":"EKS on Fargate","text":"filters.conf<pre><code>[FILTER]\n    Name parser\n    Match *\n    Key_name log\n    Parser crio\n[FILTER]\n    Name kubernetes\n    Match kube.*\n    Merge_Log On\n    Keep_Log Off\n    Buffer_Size 0\n    Kube_Meta_Cache_TTL 300s\n\n[FILTER]\n    Name parser\n    Match kube.*\n    Key_name log\n    Parser fastapi\n</code></pre> output.conf<pre><code># [OUTPUT]\n#     Name cloudwatch_logs\n#     Match   kube.*\n#     region region-code\n#     log_group_name my-logs\n#     log_stream_prefix from-fluent-bit-\n#     log_retention_days 60\n#     auto_create_group true\n\n[OUTPUT]\n    Name                kinesis_streams \n    Match               kube.*\n    region              us-east-1\n    stream              stream_name\n    # log_key             log\n    # time_key            time\n    # time_key_format     %Y-%m-%dT%H:%M:%S\n</code></pre> parsers.conf<pre><code>[PARSER]\n    Name crio\n    Format Regex\n    Regex ^(?&lt;time&gt;[^ ]+) (?&lt;stream&gt;stdout|stderr) (?&lt;logtag&gt;P|F) (?&lt;log&gt;.*)$\n    Time_Key    time\n    Time_Format %Y-%m-%dT%H:%M:%S.%L%z\n\n[PARSER]\n    Name fastapi\n    Format Regex\n    Regex INFO: *(?&lt;host&gt;[^ ]+):(?&lt;port&gt;[\\d]+) (?&lt;user&gt;[^ ]+) \\\"(?&lt;method&gt;[^ ]+) (?&lt;path&gt;[^ ]+) (?&lt;mode&gt;[^ ]+)\\\" (?&lt;status_code&gt;[^ ]+) .*\n    Types status_code:integer\n    # Time_Key    time\n    # Time_Format %Y-%m-%dT%H:%M:%S.%L%z\n</code></pre>"},{"location":"General/07-using-fluent-bit/#ec2","title":"EC2","text":"<p>Tail</p> fluent-bit.conf<pre><code>[INPUT]\n    Name tail\n    Path /home/ec2-user/app.log\n    Refresh_Interval 1\n    Tag server\n\n[FILTER]\n    Name parser\n    Match server\n    Key_name log\n    Parser server\n\n[OUTPUT]\n    Name  stdout\n    Match server\n    Format json\n    json_date_key timestamp\n    json_date_format java_sql_timestamp\n\n[OUTPUT]\n    Name kinesis_streams\n    Match server\n    region &lt;region&gt;\n    stream &lt;stream name&gt;\n    time_key time\n    time_key_format %Y-%m-%d %H:%M:%S\n</code></pre> parser.conf<pre><code>[PARSER]\n    Name server\n    Format regex\n    Regex ^(?&lt;ip&gt;((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)) (?&lt;user&gt;[^ ]+) \\[(?&lt;timestamp&gt;[^ ]+)\\] \\\"(?&lt;method&gt;[A-Z]+) (?&lt;path&gt;[^ ]+) (?&lt;mode&gt;[^ ]+) (?&lt;statuscode&gt;\\d{3}) (?&lt;latency&gt;[^ ]+) \\\"(?&lt;useragent&gt;[^ ]+)\\\" \\\"$\n    Time_Key timestamp\n    Time_Format %FT%T%z\n    Time_Keep Off\n    Types statuscode:integer\n</code></pre> <p>SystemD</p> fluent-bit.conf<pre><code>[INPUT]\n    Name systemd\n    Tag server\n    Systemd_Filter _SYSTEMD_UNIT=&lt;SERVICE_NAME&gt;.service\n    Read_From_Tail On\n\n[OUTPUT]\n    Name cloudwatch_logs\n    Match server\n    region &lt;REGION_CODE&gt;\n    log_group_name &lt;LOG_GROUP&gt;\n    log_stream_name &lt;INSTANCE_ID&gt;\n    auto_create_group true\n    log_key MESSAGE\n</code></pre>"},{"location":"General/08-set-timezone/","title":"Set Timezone","text":""},{"location":"General/08-set-timezone/#get-timezone-list","title":"Get Timezone List","text":"<pre><code>timedatectl\n</code></pre>"},{"location":"General/08-set-timezone/#set-timezone_1","title":"Set Timezone","text":"<pre><code>sudo timedatectl set-timezone &lt;CITY&gt;\n</code></pre>"},{"location":"Internet%20of%20Things/IoT%20Core/01-sample-mqtt-client/","title":"Sample MQTT Client","text":"<pre><code>pip install awsiotsdk\n</code></pre> <pre><code>from awscrt import io, mqtt, auth, http\nfrom awsiot import mqtt_connection_builder\nimport time as t\nimport json\nimport random\nfrom datetime import datetime\n# Define ENDPOINT, CLIENT_ID, PATH_TO_CERTIFICATE, PATH_TO_PRIVATE_KEY, PATH_TO_AMAZON_ROOT_CA_1, MESSAGE, TOPIC, and RANGE\nENDPOINT = \"&lt;DEVICE DATA ENDPOINT&gt;\"\nCLIENT_ID = \"&lt;CLIENT ID (ex. test-client)&gt;\"\nPATH_TO_CERTIFICATE = \"&lt;CERTIFCATE FILE LOCATION&gt;\"\nPATH_TO_PRIVATE_KEY = \"&lt;PRIVATE KEY FILE LOCATION&gt;\"\nPATH_TO_AMAZON_ROOT_CA_1 = \"&lt;ROOT CA FILE LOCATION&gt;\"\nTOPIC = \"&lt;TOPIC NAME (ex. test-topic)&gt;\"\n# Spin up resources\nevent_loop_group = io.EventLoopGroup(1)\nhost_resolver = io.DefaultHostResolver(event_loop_group)\nclient_bootstrap = io.ClientBootstrap(event_loop_group, host_resolver)\nmqtt_connection = mqtt_connection_builder.mtls_from_path(\nendpoint=ENDPOINT,\ncert_filepath=PATH_TO_CERTIFICATE,\npri_key_filepath=PATH_TO_PRIVATE_KEY,\nclient_bootstrap=client_bootstrap,\nca_filepath=PATH_TO_AMAZON_ROOT_CA_1,\nclient_id=CLIENT_ID,\nclean_session=False,\nkeep_alive_secs=6\n)\nprint(\"Connecting to {} with client ID '{}'...\".format(\nENDPOINT, CLIENT_ID))\n# Make the connect() call\nconnect_future = mqtt_connection.connect()\n# Future.result() waits until a result is available\nconnect_future.result()\nprint(\"Connected!\")\n# Publish message to server desired number of times.\nprint('Begin Publish')\ntry:\nwhile True:\nfor i in range(1):\nmessage = {\n'sensorId': i,\n'temperature': random.randint(-20, 80),\n'datetime': str(datetime.now())\n}\n# message = {'default': json.dumps(message)}\nprint(message)\nmqtt_connection.publish(topic=TOPIC, payload=json.dumps(message), qos=mqtt.QoS.AT_LEAST_ONCE)\nt.sleep(2)\nexcept Exception:\npass\nfinally:\nprint('Publish End')\ndisconnect_future = mqtt_connection.disconnect()\ndisconnect_future.result()\n</code></pre>"},{"location":"Management%20%26%20Governance/cloudtrail/01-create-a-trail/","title":"Create a Trail","text":"Linux Windows <pre><code>STACK_NAME=\"&lt;stack name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region code&gt;\"\n### Trail Configuration - General\nTrailName=\"\"                # [REQUIRED] The name of CloudTrail trail.\nEnableLogGroup=\"Enable\"     # `Enable`(default) or `Disable` | [REQUIRED] Enable of disable logging to CloudWatch logs from CloudTrail trail.\nLogGroupName=\"\"             # [optional] The name of CloudWatch Logs LogGroup for CloudTrail trail.\nLogRoleName=\"\"              # [optional] The name of CloudWatch Logs IAM Role for CloudTrail trail.\n### Trail Configuration - S3\nBucketName=\"\"               # [optional] The name of bucket.\nBucketPrefix=\"\"             # [optional] The prefix of bucket.\n### Trail Configuration - KMS\nKmsKeyAlias=\"\"              # [REQUIRED] The name of KMS key. (MUST BE STARTED WITH 'alias/')\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/cloudtrail/trail.yaml\n\naws cloudformation deploy \\\n--template-file ./trail.yaml \\\n--stack-name $STACK_NAME \\\n--parameter-overrides \\\nProjectName=$PROJECT_NAME \\\nTrailName=$TrailName \\\nEnableLogGroup=$EnableLogGroup \\\nLogGroupName=$LogGroupName \\\nLogRoleName=$LogRoleName \\\nBucketName=$BucketName \\\nBucketPrefix=$BucketPrefix \\\nKmsKeyAlias=$KmsKeyAlias \\\n--capabilities CAPABILITY_NAMED_IAM \\\n--disable-rollback \\\n--tags project=$PROJECT_NAME \\\n--region $REGION\n</code></pre> <pre><code>$STACK_NAME=\"&lt;stack name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region code&gt;\"\n### Trail Configuration - General\n$TrailName=\"\"               # [REQUIRED] The name of CloudTrail trail.\n$EnableLogGroup=\"Enable\"    # `Enable`(default) or `Disable` | [REQUIRED] Enable of disable logging to CloudWatch logs from CloudTrail trail.\n$LogGroupName=\"\"            # [optional] The name of CloudWatch Logs LogGroup for CloudTrail trail.\n$LogRoleName=\"\"             # [optional] The name of CloudWatch Logs IAM Role for CloudTrail trail.\n### Trail Configuration - S3\n$BucketName=\"\"              # [optional] The name of bucket.\n$BucketPrefix=\"\"            # [optional] The prefix of bucket.\n### Trail Configuration - KMS\n$KmsKeyAlias=\"\"             # [REQUIRED] The name of KMS key. (MUST BE STARTED WITH 'alias/')\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/cloudtrail/trail.yaml\naws cloudformation deploy `\n--template-file ./trail.yaml `\n--stack-name $STACK_NAME `\n--parameter-overrides `\nProjectName=$PROJECT_NAME `\nTrailName=$TrailName `\nEnableLogGroup=$EnableLogGroup `\nLogGroupName=$LogGroupName `\nLogRoleName=$LogRoleName `\nBucketName=$BucketName `\nBucketPrefix=$BucketPrefix `\nKmsKeyAlias=$KmsKeyAlias `\n--capabilities CAPABILITY_NAMED_IAM `\n--disable-rollback `\n--tags project=$PROJECT_NAME `\n--region $REGION\n</code></pre>"},{"location":"Management%20%26%20Governance/cloudwatch/01-enable-contributor-insights-in-api-gateway/","title":"Enable Contributer Insights in API Gateway","text":"<ol> <li>Enter the API Gateway service, choose API to enable Contributer Insights and enter the stage menu.</li> <li>Choose stage.</li> <li>Enter <code>Logs/Tracing</code> menu.</li> <li>Enable <code>Log full requests/responses data</code>.</li> <li>Save changes.</li> </ol> <ol> <li>Enter the CloudWatch service, and enter the <code>Contributer Insights</code> menu.</li> <li>Start to create rule.</li> </ol> <ol> <li>Choose API Gateway log group.</li> <li>Choose rule type. There are sample rules for API Gateway like HTTP method, IP, etc.</li> </ol> <ol> <li>Choose log format. Recommands <code>JSON</code>.</li> <li>Add contribution key like <code>pettype</code>.</li> <li>Choose aggregation type.</li> <li>Click <code>Next</code>.</li> </ol> <ol> <li>Enter the rule name.</li> <li>Click <code>Next</code>.</li> </ol> <p>Create rule.</p> <p></p> <p>You should be able to see a graph in a few minutes time.</p> <p>Observability Workshop</p>"},{"location":"Management%20%26%20Governance/cloudwatch/02-cloudwatch-agent-for-ec2/","title":"CloudWatch Agent for EC2","text":""},{"location":"Management%20%26%20Governance/cloudwatch/02-cloudwatch-agent-for-ec2/#install-cloudwatch-agent","title":"Install CloudWatch Agent","text":"ec2-userroot <pre><code>sudo yum update -y\nsudo yum install -y amazon-cloudwatch-agent\n</code></pre> <pre><code>yum update -y\nyum install -y amazon-cloudwatch-agent\n</code></pre>"},{"location":"Management%20%26%20Governance/cloudwatch/02-cloudwatch-agent-for-ec2/#configure-cloudwatch-agent-to-monitoring-instances-os-level-metrics","title":"Configure CloudWatch Agent to Monitoring Instance's OS-Level Metrics","text":"ec2-userroot <pre><code>INSTANCE_NAME=\"&lt;INSTANCE_NAME&gt;\"\nsudo cat &lt;&lt; EOF &gt; /opt/aws/amazon-cloudwatch-agent/bin/config.json\n{\n    \"agent\": {\n        \"metrics_collection_interval\": 60,\n        \"run_as_user\": \"root\"\n    },\n    \"metrics\": {\n        \"aggregation_dimensions\": [\n            [\n                \"InstanceId\"\n            ],\n            [\n                \"AutoScalingGroupName\",\n                \"InstanceId\"\n            ],\n            [\n                \"InstanceName\",\n                \"InstanceId\"\n            ],\n            [\n                \"AutoScalingGroupName\"\n            ]\n        ],\n        \"append_dimensions\": {\n            \"AutoScalingGroupName\": \"\\${aws:AutoScalingGroupName}\",\n            \"ImageId\": \"\\${aws:ImageId}\",\n            \"InstanceId\": \"\\${aws:InstanceId}\",\n            \"InstanceType\": \"\\${aws:InstanceType}\"\n        },\n        \"metrics_collected\": {\n            \"cpu\": {\n                \"measurement\": [\n                    \"cpu_usage_idle\",\n                    \"cpu_usage_iowait\",\n                    \"cpu_usage_user\",\n                    \"cpu_usage_system\",\n                    \"cpu_usage_active\"\n                ],\n                \"metrics_collection_interval\": 60,\n                \"resources\": [\n                    \"*\"\n                ],\n                \"totalcpu\": true,\n                \"append_dimensions\": {\n                    \"InstanceName\": \"${INSTANCE_NAME}\"\n                }\n            },\n            \"disk\": {\n                \"measurement\": [\n                    \"used_percent\",\n                    \"inodes_free\"\n                ],\n                \"metrics_collection_interval\": 60,\n                \"resources\": [\n                    \"*\"\n                ],\n                \"append_dimensions\": {\n                    \"InstanceName\": \"${INSTANCE_NAME}\"\n                }\n            },\n            \"diskio\": {\n                \"measurement\": [\n                    \"io_time\",\n                    \"write_bytes\",\n                    \"read_bytes\",\n                    \"writes\",\n                    \"reads\"\n                ],\n                \"metrics_collection_interval\": 60,\n                \"resources\": [\n                    \"*\"\n                ],\n                \"append_dimensions\": {\n                    \"InstanceName\": \"${INSTANCE_NAME}\"\n                }\n            },\n            \"mem\": {\n                \"measurement\": [\n                    \"used\",\n                    \"mem_used_percent\"\n                ],\n                \"metrics_collection_interval\": 60,\n                \"append_dimensions\": {\n                    \"InstanceName\": \"${INSTANCE_NAME}\"\n                }\n            },\n            \"net\": {\n                \"measurement\": [\n                    \"bytes_sent\",\n                    \"bytes_recv\"\n                ],\n                \"metrics_collection_interval\": 60,\n                \"resources\": [\n                    \"*\"\n                ],\n                \"append_dimensions\": {\n                    \"InstanceName\": \"${INSTANCE_NAME}\"\n                }\n            },\n            \"netstat\": {\n                \"measurement\": [\n                    \"tcp_established\",\n                    \"tcp_time_wait\"\n                ],\n                \"metrics_collection_interval\": 60,\n                \"append_dimensions\": {\n                    \"InstanceName\": \"${INSTANCE_NAME}\"\n                }\n            },\n            \"swap\": {\n                \"measurement\": [\n                    \"swap_used_percent\"\n                ],\n                \"metrics_collection_interval\": 60,\n                \"append_dimensions\": {\n                    \"InstanceName\": \"${INSTANCE_NAME}\"\n                }\n            }\n        }\n    }\n}\nEOF\n</code></pre> <pre><code>INSTANCE_NAME=\"&lt;INSTANCE_NAME&gt;\"\ncat &lt;&lt; EOF &gt; /opt/aws/amazon-cloudwatch-agent/bin/config.json\n{\n    \"agent\": {\n        \"metrics_collection_interval\": 60,\n        \"run_as_user\": \"root\"\n    },\n    \"metrics\": {\n        \"aggregation_dimensions\": [\n            [\n                \"InstanceId\"\n            ],\n            [\n                \"AutoScalingGroupName\",\n                \"InstanceId\"\n            ],\n            [\n                \"InstanceName\",\n                \"InstanceId\"\n            ],\n            [\n                \"AutoScalingGroupName\"\n            ]\n        ],\n        \"append_dimensions\": {\n            \"AutoScalingGroupName\": \"\\${aws:AutoScalingGroupName}\",\n            \"ImageId\": \"\\${aws:ImageId}\",\n            \"InstanceId\": \"\\${aws:InstanceId}\",\n            \"InstanceType\": \"\\${aws:InstanceType}\"\n        },\n        \"metrics_collected\": {\n            \"cpu\": {\n                \"measurement\": [\n                    \"cpu_usage_idle\",\n                    \"cpu_usage_iowait\",\n                    \"cpu_usage_user\",\n                    \"cpu_usage_system\",\n                    \"cpu_usage_active\"\n                ],\n                \"metrics_collection_interval\": 60,\n                \"resources\": [\n                    \"*\"\n                ],\n                \"totalcpu\": true,\n                \"append_dimensions\": {\n                    \"InstanceName\": \"${INSTANCE_NAME}\"\n                }\n            },\n            \"disk\": {\n                \"measurement\": [\n                    \"used_percent\",\n                    \"inodes_free\"\n                ],\n                \"metrics_collection_interval\": 60,\n                \"resources\": [\n                    \"*\"\n                ],\n                \"append_dimensions\": {\n                    \"InstanceName\": \"${INSTANCE_NAME}\"\n                }\n            },\n            \"diskio\": {\n                \"measurement\": [\n                    \"io_time\",\n                    \"write_bytes\",\n                    \"read_bytes\",\n                    \"writes\",\n                    \"reads\"\n                ],\n                \"metrics_collection_interval\": 60,\n                \"resources\": [\n                    \"*\"\n                ],\n                \"append_dimensions\": {\n                    \"InstanceName\": \"${INSTANCE_NAME}\"\n                }\n            },\n            \"mem\": {\n                \"measurement\": [\n                    \"used\",\n                    \"mem_used_percent\"\n                ],\n                \"metrics_collection_interval\": 60,\n                \"append_dimensions\": {\n                    \"InstanceName\": \"${INSTANCE_NAME}\"\n                }\n            },\n            \"net\": {\n                \"measurement\": [\n                    \"bytes_sent\",\n                    \"bytes_recv\"\n                ],\n                \"metrics_collection_interval\": 60,\n                \"resources\": [\n                    \"*\"\n                ],\n                \"append_dimensions\": {\n                    \"InstanceName\": \"${INSTANCE_NAME}\"\n                }\n            },\n            \"netstat\": {\n                \"measurement\": [\n                    \"tcp_established\",\n                    \"tcp_time_wait\"\n                ],\n                \"metrics_collection_interval\": 60,\n                \"append_dimensions\": {\n                    \"InstanceName\": \"${INSTANCE_NAME}\"\n                }\n            },\n            \"swap\": {\n                \"measurement\": [\n                    \"swap_used_percent\"\n                ],\n                \"metrics_collection_interval\": 60,\n                \"append_dimensions\": {\n                    \"InstanceName\": \"${INSTANCE_NAME}\"\n                }\n            }\n        }\n    }\n}\nEOF\n</code></pre> Note <p>If you use aws agents, you can use these log configurations.</p> CodeDeploy AgentECS Agent <pre><code>\"logs\": {\n\"logs_collected\": {\n\"files\": {\n\"collect_list\": [\n{\n\"file_path\": \"/var/log/aws/codedeploy-agent/codedeploy-agent.log\",\n\"log_group_name\": \"codedeploy-agent-log\",\n\"log_stream_name\": \"{instance_id}-agent-log\",\n\"retention_in_days\": 90\n},\n{\n\"file_path\": \"/opt/codedeploy-agent/deployment-root/deployment-logs/codedeploy-agent-deployments.log\",\n\"log_group_name\": \"codedeploy-agent-deployment-log\",\n\"log_stream_name\": \"{instance_id}-codedeploy-agent-deployment-log\",\n\"retention_in_days\": 90\n},\n{\n\"file_path\": \"/tmp/codedeploy-agent.update.log\",\n\"log_group_name\": \"codedeploy-agent-updater-log\",\n\"log_stream_name\": \"{instance_id}-codedeploy-agent-updater-log\",\n\"retention_in_days\": 90\n}\n]\n}\n}\n}\n</code></pre> <pre><code>\"logs\": {\n\"logs_collected\": {\n\"files\": {\n\"collect_list\": [\n{\n\"file_path\": \"/var/log/ecs/ecs-agent.log*\",\n\"log_group_name\": \"ecs-agent-log\",\n\"log_stream_name\": \"{instance_id}-agent-log\",\n\"retention_in_days\": 90\n}\n]\n}\n}\n}\n</code></pre>"},{"location":"Management%20%26%20Governance/cloudwatch/02-cloudwatch-agent-for-ec2/#enable-cloudwatch-agent","title":"Enable CloudWatch Agent","text":"ec2-userroot <pre><code>sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c file:/opt/aws/amazon-cloudwatch-agent/bin/config.json\n</code></pre> <pre><code>/opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c file:/opt/aws/amazon-cloudwatch-agent/bin/config.json\n</code></pre>"},{"location":"Management%20%26%20Governance/cloudwatch/02-cloudwatch-agent-for-ec2/#cloudwatch-metrics-for-ecs-infra-level-monitoring","title":"CloudWatch Metrics for ECS Infra-Level Monitoring","text":""},{"location":"Management%20%26%20Governance/cloudwatch/02-cloudwatch-agent-for-ec2/#cpu-utilization","title":"CPU Utilization","text":"<pre><code>{\n\"view\": \"timeSeries\",\n\"stacked\": false,\n\"metrics\": [\n[ { \"expression\": \"SEARCH('{CWAgent,InstanceId,InstanceName} InstanceName=\\\"&lt;INSTANCE NAME&gt;\\\" MetricName=\\\"cpu_usage_active\\\"', 'Average', 60)\", \"label\": \"CPUUtilization\", \"id\": \"e1\", \"region\": \"&lt;REGION&gt;\" } ]\n],\n\"region\": \"&lt;REGION&gt;\",\n\"stat\": \"Average\",\n\"period\": 60,\n\"yAxis\": {\n\"left\": {\n\"min\": 0,\n\"label\": \"Percent\",\n\"showUnits\": false,\n\"max\": 100\n}\n},\n\"title\": \"CpuUtilization\"\n}\n</code></pre>"},{"location":"Management%20%26%20Governance/cloudwatch/02-cloudwatch-agent-for-ec2/#memory-utilization","title":"Memory Utilization","text":"<pre><code>{\n\"view\": \"timeSeries\",\n\"stacked\": false,\n\"metrics\": [\n[ { \"expression\": \"SEARCH('{CWAgent,InstanceId,InstanceName} InstanceName=\\\"&lt;INSTANCE NAME&gt;\\\" MetricName=\\\"mem_used_percent\\\"', 'Average', 60)\", \"label\": \"MemoryUtilization\", \"id\": \"e1\", \"region\": \"&lt;REGION&gt;\" } ]\n],\n\"region\": \"&lt;REGION&gt;\",\n\"stat\": \"Average\",\n\"period\": 60,\n\"yAxis\": {\n\"left\": {\n\"min\": 0,\n\"label\": \"Percent\",\n\"showUnits\": false,\n\"max\": 100\n}\n},\n\"title\": \"MemoryUtilization\"\n}\n</code></pre>"},{"location":"Management%20%26%20Governance/cloudwatch/02-cloudwatch-agent-for-ec2/#network-out","title":"Network Out","text":"<pre><code>{\n\"view\": \"timeSeries\",\n\"stacked\": false,\n\"metrics\": [\n[ { \"expression\": \"SEARCH('{CWAgent,InstanceId,InstanceName} InstanceName=\\\"&lt;INSTANCE NAME&gt;\\\" MetricName=\\\"net_bytes_sent\\\"', 'Average', 60)\", \"label\": \"NetworkOut\", \"id\": \"e1\", \"region\": \"&lt;REGION&gt;\" } ]\n],\n\"region\": \"&lt;REGION&gt;\",\n\"stat\": \"Average\",\n\"period\": 60,\n\"yAxis\": {\n\"left\": {\n\"label\": \"Bytes/Min\",\n\"showUnits\": false\n}\n},\n\"title\": \"NetworkOut\"\n}\n</code></pre>"},{"location":"Management%20%26%20Governance/cloudwatch/02-cloudwatch-agent-for-ec2/#network-in","title":"Network In","text":"<pre><code>{\n\"view\": \"timeSeries\",\n\"stacked\": false,\n\"metrics\": [\n[ { \"expression\": \"SEARCH('{CWAgent,InstanceId,InstanceName} InstanceName=\\\"&lt;INSTANCE NAME&gt;\\\" MetricName=\\\"net_bytes_recv\\\"', 'Average', 60)\", \"label\": \"NetworkIn\", \"id\": \"e1\", \"region\": \"&lt;REGION&gt;\" } ]\n],\n\"region\": \"&lt;REGION&gt;\",\n\"stat\": \"Average\",\n\"period\": 60,\n\"yAxis\": {\n\"left\": {\n\"label\": \"Bytes/Min\",\n\"showUnits\": false\n}\n},\n\"title\": \"NetworkIn\"\n}\n</code></pre>"},{"location":"Management%20%26%20Governance/cloudwatch/02-cloudwatch-agent-for-ec2/#disk-read","title":"Disk Read","text":"<pre><code>{\n\"view\": \"timeSeries\",\n\"stacked\": false,\n\"metrics\": [\n[ { \"expression\": \"SEARCH('{CWAgent,InstanceId,InstanceName} InstanceName=\\\"&lt;INSTANCE NAME&gt;\\\" MetricName=\\\"diskio_read_bytes\\\"', 'Average', 60)\", \"label\": \"DiskRead\", \"id\": \"e1\", \"region\": \"&lt;REGION&gt;\" } ]\n],\n\"region\": \"&lt;REGION&gt;\",\n\"stat\": \"Average\",\n\"period\": 60,\n\"yAxis\": {\n\"left\": {\n\"label\": \"Percent\",\n\"showUnits\": false\n}\n},\n\"title\": \"DiskRead\"\n}\n</code></pre>"},{"location":"Management%20%26%20Governance/cloudwatch/02-cloudwatch-agent-for-ec2/#disk-write","title":"Disk Write","text":"<pre><code>{\n\"view\": \"timeSeries\",\n\"stacked\": false,\n\"metrics\": [\n[ { \"expression\": \"SEARCH('{CWAgent,InstanceId,InstanceName} InstanceName=\\\"&lt;INSTANCE NAME&gt;\\\" MetricName=\\\"diskio_write_bytes\\\"', 'Average', 60)\", \"label\": \"DiskWrite\", \"id\": \"e1\", \"region\": \"&lt;REGION&gt;\" } ]\n],\n\"region\": \"&lt;REGION&gt;\",\n\"stat\": \"Average\",\n\"period\": 60,\n\"yAxis\": {\n\"left\": {\n\"label\": \"Percent\",\n\"showUnits\": false\n}\n},\n\"title\": \"DiskWrite\"\n}\n</code></pre>"},{"location":"Management%20%26%20Governance/cloudwatch/03-cloudwatch-logs-config/","title":"CloudWatch Logs Config","text":"<pre><code>import boto3\nimport json\nREGION = ''\nKMS_KEY_ARN = ''\nRETENTION = 90\nPROJECT_NAME = ''\nclient = boto3.session.Session(region_name=REGION).client('logs')\nresponse = client.describe_log_groups()\nlog_groups = [item for item in response['logGroups'] if not item.get('kmsKeyId', None) or not item.get('retentionInDays', None)]\nkms_policy = {\n'Effect': 'Allow',\n'Principal': {\n'Service': f'logs.{REGION}.amazonaws.com'\n},\n'Action': [\n'kms:Encrypt*',\n'kms:Decrypt*',\n'kms:ReEncrypt*',\n'kms:GenerateDataKey*',\n'kms:Describe*'\n],\n'Resource': '*',\n'Condition': {\n'ForAnyValue:ArnEquals': {\n'kms:EncryptionContext:aws:logs:arn': [item['arn'][:-2] for item in log_groups]\n}\n}\n}\nprint('\\nKMS Key Policy\\n')\nprint(json.dumps(kms_policy, indent=4))\nstart = input('Config Log Groups? (Y/n) ')\nif start == 'Y' or start == 'y' or start == '':\nfor log in log_groups:\ntry:\ntry:\nclient.delete_log_group(logGroupName=log['logGroupName'])\nexcept client.exceptions.ResourceNotFoundException:\npass\nclient.create_log_group(\nlogGroupName=log['logGroupName'],\nkmsKeyId=KMS_KEY_ARN,\ntags={\n'project': PROJECT_NAME\n}\n)\nclient.put_retention_policy(\nlogGroupName=log['logGroupName'],\nretentionInDays=RETENTION\n)\nprint(f'SUCCESS! {log[\"logGroupName\"]}')\nexcept client.exceptions.ResourceAlreadyExistsException:\nprint(f'ResourceAlreadyExistsException {log[\"logGroupName\"]}')\nelse:\nexit\n</code></pre>"},{"location":"Networking%20%26%20Content%20Delivery/App%20Mesh/01-config-app-mesh-on-ec2/","title":"Config App Mesh on EC2","text":"<p>Danger</p> <p>You should install Docker on EC2.</p>"},{"location":"Networking%20%26%20Content%20Delivery/App%20Mesh/01-config-app-mesh-on-ec2/#install-envoy-proxy","title":"Install Envoy Proxy","text":"x86_64ARM64 <pre><code>docker run \\\n-itd \\\n-u 1337 \\\n-e APPMESH_VIRTUAL_NODE_NAME=mesh/&lt;mesh name&gt;/virtualNode/&lt;node name&gt; \\\n--network host \\\n--name envoy-proxy \\\n--restart=unless-stopped \\\npublic.ecr.aws/appmesh/aws-appmesh-envoy:amd64-v1.25.4.0-prod\n</code></pre> <pre><code>docker run \\\n-itd \\\n-u 1337 \\\n-e APPMESH_VIRTUAL_NODE_NAME=mesh/&lt;mesh name&gt;/virtualNode/&lt;node name&gt; \\\n--network host \\\n--name envoy-proxy \\\n--restart=unless-stopped \\\npublic.ecr.aws/appmesh/aws-appmesh-envoy:arm64-v1.25.4.0-prod\n</code></pre> <p>Note</p> <p>If you want to use with X-Ray, using this environment variable.</p> <pre><code>-e ENABLE_ENVOY_XRAY_TRACING=1 \\\n</code></pre>"},{"location":"Networking%20%26%20Content%20Delivery/App%20Mesh/01-config-app-mesh-on-ec2/#install-x-ray-daemon","title":"Install X-Ray Daemon","text":"<pre><code>docker run \\\n-itd \\\n-u 1337 \\\n--network host \\\n--name xray-daemon \\\n--restart=unless-stopped \\\npublic.ecr.aws/xray/aws-xray-daemon:latest\n</code></pre>"},{"location":"Networking%20%26%20Content%20Delivery/App%20Mesh/01-config-app-mesh-on-ec2/#config-routing","title":"Config Routing","text":"<pre><code>export APP_PORTS=\"3000\"                 # Application Ports\nexport EGRESS_IGNORED_PORTS=\"22,443\"    # SSH or AWS APIs, etc.\nexport EGRESS_IGNORED_IPS=\"169.254.169.254,169.254.170.2\"\nexport PROXY_INGRESS_PORT=\"15000\"\nexport PROXY_EGRESS_PORT=\"15001\"\nexport APPMESH_LOCAL_ROUTE_TABLE_ID=\"100\"\nexport APPMESH_PACKET_MARK=\"0x1e7700ce\"\nsudo iptables -t mangle -N APPMESH_INGRESS\nsudo iptables -t nat -N APPMESH_INGRESS\nsudo iptables -t nat -N APPMESH_EGRESS\nsudo ip rule add fwmark \"$APPMESH_PACKET_MARK\" lookup $APPMESH_LOCAL_ROUTE_TABLE_ID\nsudo ip route add local default dev lo table $APPMESH_LOCAL_ROUTE_TABLE_ID\n# Enable egress routing\n### Ignore egress redirect based UID, ports, and IPs\nsudo iptables -t nat -A APPMESH_EGRESS \\\n-m owner --uid-owner \"1337\" \\\n-j RETURN\nsudo iptables -t nat -A APPMESH_EGRESS \\\n-p tcp \\\n-m multiport --dports \"$EGRESS_IGNORED_PORTS\" \\\n-j RETURN\nsudo iptables -t nat -A APPMESH_EGRESS \\\n-p tcp \\\n-d \"$EGRESS_IGNORED_IPS\" \\\n-j RETURN\n\n### Redirect everything that is not ignored\nsudo iptables -t nat -A APPMESH_EGRESS \\\n-p tcp \\\n-j REDIRECT --to \"$PROXY_EGRESS_PORT\"\n### Apply APPMESH_EGRESS chain to non-local traffic\nsudo iptables -t nat -A OUTPUT \\\n-p tcp \\\n-m addrtype ! --dst-type LOCAL \\\n-j APPMESH_EGRESS\n\n# Enable ingress routing\n### Route everything arriving at the application port to Envoy\nsudo iptables -t nat -A APPMESH_INGRESS \\\n-p tcp \\\n-m multiport --dports \"$APP_PORTS\" \\\n-j REDIRECT --to-port \"$PROXY_INGRESS_PORT\"\n### Apply APPMESH_INGRESS chain to non-local traffic\nsudo iptables -t nat -A PREROUTING \\\n-p tcp \\\n-m addrtype ! --src-type LOCAL \\\n-j APPMESH_INGRESS\n</code></pre> <p>Danger</p> <p>The iptables settings are initialized upon reboot. Write a shell script and run it on systemd.</p>"},{"location":"Networking%20%26%20Content%20Delivery/App%20Mesh/02-config-app-mesh-on-ecs/","title":"Config App Mesh on ECS","text":"<p>Danger</p> <p>You should add below AWS managed policies to ECS task role.</p> <ul> <li><code>arn:aws:iam::aws:policy/AWSAppMeshEnvoyAccess</code></li> <li><code>arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess</code></li> </ul> <pre><code>{\n\"family\": \"nginx\",\n\"containerDefinitions\": [\n{\n\"name\": \"nginx\",\n\"image\": \"nginx:latest\",\n\"cpu\": 0,\n\"portMappings\": [\n{\n\"name\": \"nginx-80-tcp\",\n\"containerPort\": 80,\n\"hostPort\": 80,\n\"protocol\": \"tcp\",\n\"appProtocol\": \"http\"\n}\n],\n\"essential\": true,\n\"environment\": [],\n\"mountPoints\": [],\n\"volumesFrom\": [],\n\"dependsOn\": [\n{\n\"containerName\": \"envoy\",\n\"condition\": \"HEALTHY\"\n}\n],\n\"logConfiguration\": {\n\"logDriver\": \"awslogs\",\n\"options\": {\n\"awslogs-create-group\": \"true\",\n\"awslogs-group\": \"/ecs/nginx\",\n\"awslogs-region\": \"us-east-1\",\n\"awslogs-stream-prefix\": \"ecs\"\n}\n},\n\"healthCheck\": {\n\"command\": [\n\"CMD-SHELL\",\n\"curl -s http://localhost:80/ || exit 1\"\n],\n\"interval\": 5,\n\"timeout\": 2,\n\"retries\": 3,\n\"startPeriod\": 10\n}\n},\n{\n\"name\": \"envoy\",\n\"image\": \"public.ecr.aws/appmesh/aws-appmesh-envoy:amd64-v1.25.4.0-prod\",\n\"cpu\": 0,\n\"portMappings\": [],\n\"essential\": true,\n\"environment\": [\n{\n\"name\": \"APPMESH_VIRTUAL_NODE_NAME\",\n\"value\": \"mesh/&lt;mesh name&gt;/virtualNode/&lt;node name&gt;\"\n},\n{\n\"name\": \"ENABLE_ENVOY_XRAY_TRACING\",\n\"value\": \"1\"\n}\n],\n\"mountPoints\": [],\n\"volumesFrom\": [],\n\"user\": \"1337\",\n\"logConfiguration\": {\n\"logDriver\": \"awslogs\",\n\"options\": {\n\"awslogs-create-group\": \"true\",\n\"awslogs-group\": \"nginx-envoy\",\n\"awslogs-region\": \"us-east-1\",\n\"awslogs-stream-prefix\": \"fargate\"\n}\n},\n\"healthCheck\": {\n\"command\": [\n\"CMD-SHELL\",\n\"curl -s http://localhost:9901/server_info | grep state | grep -q LIVE\"\n],\n\"interval\": 5,\n\"timeout\": 2,\n\"retries\": 3,\n\"startPeriod\": 10\n}\n},\n{\n\"name\": \"xray\",\n\"image\": \"public.ecr.aws/xray/aws-xray-daemon:latest\",\n\"cpu\": 0,\n\"portMappings\": [\n{\n\"containerPort\": 2000,\n\"hostPort\": 2000,\n\"protocol\": \"udp\"\n}\n],\n\"essential\": true,\n\"environment\": [],\n\"mountPoints\": [],\n\"volumesFrom\": []\n}\n],\n\"taskRoleArn\": \"&lt;task role&gt;\",\n\"executionRoleArn\": \"&lt;task execution role&gt;\",\n\"networkMode\": \"awsvpc\",\n\"requiresCompatibilities\": [\n\"FARGATE\"\n],\n\"cpu\": \"256\",\n\"memory\": \"512\",\n\"proxyConfiguration\": {\n\"type\": \"APPMESH\",\n\"containerName\": \"envoy\",\n\"properties\": [\n{\n\"name\": \"ProxyIngressPort\",\n\"value\": \"15000\"\n},\n{\n\"name\": \"AppPorts\",\n\"value\": \"80\"\n},\n{\n\"name\": \"EgressIgnoredIPs\",\n\"value\": \"169.254.170.2,169.254.169.254\"\n},\n{\n\"name\": \"IgnoredUID\",\n\"value\": \"1337\"\n},\n{\n\"name\": \"ProxyEgressPort\",\n\"value\": \"15001\"\n}\n]\n},\n\"runtimePlatform\": {\n\"cpuArchitecture\": \"X86_64\",\n\"operatingSystemFamily\": \"LINUX\"\n},\n\"tags\": [\n{\n\"key\": \"project\",\n\"value\": \"project_name\"\n}\n]\n}\n</code></pre>"},{"location":"Networking%20%26%20Content%20Delivery/CloudFront/01-serving-sse-kms-encrypted-content-from-s3-using-cloudfront/","title":"Service SSE-KMS Encrypted Content From S3 Using CloudFront","text":"<p>AWS Blog</p> <p>Danger</p> <p>DO NOT USE OAI at CloudFront!!</p>"},{"location":"Networking%20%26%20Content%20Delivery/CloudFront/01-serving-sse-kms-encrypted-content-from-s3-using-cloudfront/#lambdaedge-functions","title":"Lambda@Edge functions","text":"Node.js (16.x)Python (3.9) <pre><code>const crypto = require('crypto');\nconst emptyHash = 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855';\nconst signedHeadersGeneric = 'host;x-amz-content-sha256;x-amz-date;x-amz-security-token';\nconst signedHeadersCustomOrigin = 'host;x-amz-cf-id;x-amz-content-sha256;x-amz-date;x-amz-security-token';\nconst { AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_SESSION_TOKEN } = process.env;\nexports.handler = async (event) =&gt; {\nconst request = event.Records[0].cf.request;\nlet originType = '';\nif (request.origin.hasOwnProperty('s3'))\noriginType = 's3';\nelse if (request.origin.hasOwnProperty('custom'))\noriginType = 'custom';\nelse\nthrow(\"Unexpected origin type. Expected 's3' or 'custom'. Got: \" + JSON.stringify(request.origin));\nconst sigv4Options = {\nmethod: request.method,\npath: request.origin[originType].path + request.uri,\ncredentials: {\naccessKeyId: AWS_ACCESS_KEY_ID,\nsecretAccessKey: AWS_SECRET_ACCESS_KEY,\nsessionToken: AWS_SESSION_TOKEN\n},\nhost: request.headers['host'][0].value,\nxAmzCfId: event.Records[0].cf.config.requestId,\noriginType: originType\n};\nconst signature = signV4(sigv4Options);\nfor(var header in signature){\nrequest.headers[header.toLowerCase()] = [{\nkey: header,\nvalue: signature[header].toString()\n}];\n}\nreturn request;\n};\nconst signV4 = (options) =&gt; {\nconst region = options.host.split('.')[2];\nconst date = (new Date()).toISOString().replace(/[:-]|\\.\\d{3}/g, '');\nlet canonicalHeaders = '';\nlet signedHeaders = '';\nif (options.originType == 's3') {\ncanonicalHeaders = ['host:'+options.host, 'x-amz-content-sha256:'+emptyHash, 'x-amz-date:'+date, 'x-amz-security-token:'+options.credentials.sessionToken].join('\\n');\nsignedHeaders = signedHeadersGeneric;\n} else {\ncanonicalHeaders = ['host:'+options.host, 'x-amz-cf-id:'+options.xAmzCfId, 'x-amz-content-sha256:'+emptyHash, 'x-amz-date:'+date, 'x-amz-security-token:'+options.credentials.sessionToken].join('\\n');\nsignedHeaders = signedHeadersCustomOrigin;\n}\nconst canonicalURI = encodeRfc3986(encodeURIComponent(decodeURIComponent(options.path).replace(/\\+/g, ' ')).replace(/%2F/g, '/'));\nconst canonicalRequest = [options.method, canonicalURI, '', canonicalHeaders + '\\n', signedHeaders,emptyHash].join('\\n');\nconst credentialScope = [date.slice(0, 8), region, 's3/aws4_request'].join('/');\nconst stringToSign = ['AWS4-HMAC-SHA256', date, credentialScope, hash(canonicalRequest, 'hex')].join('\\n');\nconst signature = hmac(hmac(hmac(hmac(hmac('AWS4' + options.credentials.secretAccessKey, date.slice(0, 8)), region), \"s3\"), 'aws4_request'), stringToSign, 'hex');\nconst authorizationHeader = ['AWS4-HMAC-SHA256 Credential=' + options.credentials.accessKeyId + '/' + credentialScope,'SignedHeaders=' + signedHeaders,'Signature=' + signature].join(', ');\nreturn {\n'Authorization': authorizationHeader,\n'X-Amz-Content-Sha256' : emptyHash,\n'X-Amz-Date': date,\n'X-Amz-Security-Token': options.credentials.sessionToken\n};\n}\nconst encodeRfc3986 = (urlEncodedStr) =&gt; {\nreturn urlEncodedStr.replace(/[!'()*]/g, c =&gt; '%' + c.charCodeAt(0).toString(16).toUpperCase())\n}\nconst hash = (string, encoding) =&gt; {\nreturn crypto.createHash('sha256').update(string, 'utf8').digest(encoding)\n}\nconst hmac = (key, string, encoding) =&gt; {\nreturn crypto.createHmac('sha256', key).update(string, 'utf8').digest(encoding)\n}\n</code></pre> <pre><code>import os\nimport json\nemptyHash = 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855';\nsignedHeadersGeneric = 'host;x-amz-content-sha256;x-amz-date;x-amz-security-token';\nsignedHeadersCustomOrigin = 'host;x-amz-cf-id;x-amz-content-sha256;x-amz-date;x-amz-security-token';\nAWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY_ID')\nAWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY')\nAWS_SESSION_TOKEN = os.getenv('AWS_SESSION_TOKEN')\ndef lambda_handler(event, context):\nrequest = event['Records'][0]['cf']['request'];\noriginType = ''\nif hasattr(request['origin'], 's3'):\noriginType = 's3\nelif hasattr(request['origin'], 'custom'):\noriginType = 'custom'\nelse:\nraise Exception('Unexpected origin type. Expected \\'s3\\' or \\'custom\\'. Got: ' + json.dumps(request['origin']))\nsigv4Options = {\nmethod: \n}\nreturn {\n'statusCode': 200,\n'body': json.dumps('Hello from Lambda!')\n}\n</code></pre>"},{"location":"Networking%20%26%20Content%20Delivery/CloudFront/02-remove-s3-metadata-headers/","title":"Remove S3 Metadata Headers","text":""},{"location":"Networking%20%26%20Content%20Delivery/CloudFront/02-remove-s3-metadata-headers/#what-is-s3-metadata-headers","title":"What is S3 Metadata Headers?","text":"<p>If you use S3 bucket to CloudFront origin, you can see s3 metadata like this:</p> <p></p> <p>They show some sensitive information like KMS key id and S3 object version id. You should hide this information and serve to clients like this:</p> <p></p>"},{"location":"Networking%20%26%20Content%20Delivery/CloudFront/02-remove-s3-metadata-headers/#create-cloudfront-response-headers-policy","title":"Create CloudFront <code>response headers policy</code>","text":"Using AWS CLIUsing CloudFormaiton <pre><code>aws cloudfront create-response-headers-policy \\\n--response-headers-policy-config \"Name=remove-s3-metadata,RemoveHeadersConfig={Quantity=5,Items=[{Header=x-amz-replication-status},{Header=x-amz-server-side-encryption},{Header=x-amz-server-side-encryption-aws-kms-key-id},{Header=x-amz-server-side-encryption-bucket-key-enabled},{Header=x-amz-version-id}]}\"\n</code></pre> <pre><code>CloudFrontResponseHeadersPolicy:\nType: AWS::CloudFront::ResponseHeadersPolicy\nProperties:\nName: remove-s3-metadata\nRemoveHeadersConfig:\nItems:\n- \"x-amz-replication-status\"\n- \"x-amz-server-side-encryption\"\n- \"x-amz-server-side-encryption-aws-kms-key-id\"\n- \"x-amz-server-side-encryption-bucket-key-enabled\"\n- \"x-amz-version-id\"\n</code></pre>"},{"location":"Networking%20%26%20Content%20Delivery/CloudFront/03-cloudfront-caching-sequence/","title":"CloudFront Caching Sequence","text":""},{"location":"Networking%20%26%20Content%20Delivery/CloudFront/03-cloudfront-caching-sequence/#using-amazon-s3-to-origin","title":"Using Amazon S3 to Origin","text":"<pre><code>sequenceDiagram\n    autonumber\n    Client-&gt;&gt;Edge: Get object\n    alt is already existed in Edge\n        Edge-&gt;&gt;Client: Serve object (2XX/3XX, Hit from cloudfront)\n    else is not already existed in Edge\n        Edge-&gt;&gt;Origin: Get object\n        alt is found in S3 bucket\n            Origin-&gt;&gt;Edge: Save object\n            Edge-&gt;&gt;Client: Serve object (2XX, Miss from cloudfront)\n        else is not found in S3 bucket\n            Origin-&gt;&gt;Edge: Serve 4XX/5XX\n            Edge-&gt;&gt;Client: Serve Error (4XX/5XX, Error from cloudfront)\n        end\n    end</code></pre>"},{"location":"Networking%20%26%20Content%20Delivery/ELB/01-create-access-logs-bucket/","title":"Create a bucket for saving access logs","text":"Linux (Bash) Windows (Powershell)  <pre><code>STACK_NAME=\"&lt;stack name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region code&gt;\"\n### Bucket Configuration\nAccessLogBucketName=\"\"  # [REQUIRED] The name of alb access log bucket.\nAccessLogPrefix=\"\"      # [optional] The prefix of alb access log. It cannot start or end with `/`.\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/elb/access-log-bucket.yaml\n\naws cloudformation deploy \\\n--template-file ./access-log-bucket.yaml \\\n--stack-name $STACK_NAME \\\n--parameter-overrides \\\nProjectName=$PROJECT_NAME \\\nAccessLogBucketName=$AccessLogBucketName \\\nAccessLogPrefix=$AccessLogPrefix \\\n--disable-rollback \\\n--tags project=$PROJECT_NAME \\\n--region $REGION\n</code></pre> <pre><code>$STACK_NAME=\"&lt;stack name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region code&gt;\"\n### Bucket Configuration\n$AccessLogBucketName=\"\" # [REQUIRED] The name of alb access log bucket.\n$AccessLogPrefix=\"\"     # [optional] The prefix of alb access log. It cannot start or end with `/`.\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/elb/access-log-bucket.yaml\naws cloudformation deploy `\n--template-file ./access-log-bucket.yaml `\n--stack-name $STACK_NAME `\n--parameter-overrides `\nProjectName=$PROJECT_NAME `\nAccessLogBucketName=$AccessLogBucketName `\nAccessLogPrefix=$AccessLogPrefix `\n--disable-rollback `\n--tags project=$PROJECT_NAME `\n--region $REGION\n</code></pre>"},{"location":"Networking%20%26%20Content%20Delivery/ELB/02-create-application-load-balancer/","title":"Create Application Load Balancer","text":"Linux Windows <pre><code>STACK_NAME=\"&lt;stack name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region code&gt;\"\n### ALB Configuration - General\nLoadBalancerName=\"\"         # [REQUIRED] The name of alb.\nVpcId=\"\"                    # [REQUIRED] The id of alb security group's vpc.\nSubnets=\"\"                  # [REQUIRED] The id list of alb's subnets.\nScheme=\"internet-facing\"    # `internet-facing`(default) or `internal` | [REQUIRED] The type of alb.\nIpAddressType=\"ipv4\"        # `ipv4`(default) or `dualstack` | [optional] The IP address type of alb.\nSecurityGroupId=\"\"          # [REQUIRED] The id of alb security group.\nListenerPathPattern=\"\"      # [REQUIRED] The path pattern list of listener. Type with comma(,).  For example, `/v1/test1,/v1/admin*,/v2/test1`.\n### ALB Configuration - Target Group\nTargetGroupName=\"\"          # [REQUIRED] The name of target group.\nTargetType=\"\"               # `instance`, `ip`, `lambda` or `alb` | [REQUIRED] the type of target group.\nTargetSecurityGroupId=\"\"    # [optional] The id of alb target group's security group.\nTargetPort=\"80\"             # [REQUIRED] The port number of target group.\nHealthCheckPath=\"/\"         # [REQUIRED] The health check path of target group. It should end with `/`.\n### ALB Configuration - Access Log\nCreateAccessLogBucket=\"\"    # `Yes`(default) or `No` | [REQUIRED] Create a new S3 bucket or using existed S3 bucket.\nAccessLogBucketName=\"\"      # [REQUIRED] The name of alb access log bucket.\nAccessLogPrefix=\"\"          # [optional] The prefix of alb access log. It cannot start or end with `/`.\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/elb/application-load-balancer.yaml\n\n# Using `deploy`\naws cloudformation deploy \\\n--template-file ./application-load-balancer.yaml \\\n--stack-name $STACK_NAME \\\n--parameter-overrides \\\nProjectName=$PROJECT_NAME \\\nLoadBalancerName=$LoadBalancerName \\\nVpcId=$VpcId \\\nSubnets=$Subnets \\\nScheme=$Scheme \\\nIpAddressType=$IpAddressType \\\nSecurityGroupId=$SecurityGroupId \\\nListenerPathPattern=$ListenerPathPattern \\\nTargetGroupName=$TargetGroupName \\\nTargetType=$TargetType \\\nTargetSecurityGroupId=$TargetSecurityGroupId \\\nTargetPort=$TargetPort \\\nHealthCheckPath=$HealthCheckPath \\\nCreateAccessLogBucket=$CreateAccessLogBucket \\\nAccessLogBucketName=$AccessLogBucketName \\\nAccessLogPrefix=$AccessLogPrefix \\\n--disable-rollback \\\n--tags project=$PROJECT_NAME \\\n--region $REGION\n# Using `create-stack`\naws cloudformation create-stack \\\n--template-body file://application-load-balancer.yaml \\\n--stack-name $STACK_NAME \\\n--parameters \\\nParameterKey=ProjectName,ParameterValue=$PROJECT_NAME \\\nParameterKey=LoadBalancerName,ParameterValue=$LoadBalancerName \\\nParameterKey=VpcId,ParameterValue=$VpcId \\\nParameterKey=Subnets,ParameterValue=$Subnets \\\nParameterKey=Scheme,ParameterValue=$Scheme \\\nParameterKey=IpAddressType,ParameterValue=$IpAddressType \\\nParameterKey=SecurityGroupId,ParameterValue=$SecurityGroupId \\\nParameterKey=ListenerPathPattern,ParameterValue=$ListenerPathPattern \\\nParameterKey=TargetGroupName,ParameterValue=$TargetGroupName \\\nParameterKey=TargetType,ParameterValue=$TargetType \\\nParameterKey=TargetSecurityGroupId,ParameterValue=$TargetSecurityGroupId \\\nParameterKey=TargetPort,ParameterValue=$TargetPort \\\nParameterKey=HealthCheckPath,ParameterValue=$HealthCheckPath \\\nParameterKey=CreateAccessLogBucket,ParameterValue=$CreateAccessLogBucket \\\nParameterKey=AccessLogBucketName,ParameterValue=$AccessLogBucketName \\\nParameterKey=AccessLogPrefix,ParameterValue=$AccessLogPrefix \\\n--disable-rollback \\\n--tags Key=project,Value=$PROJECT_NAME \\\n--region $REGION\n</code></pre> <pre><code>$STACK_NAME=\"&lt;stack name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region code&gt;\"\n### ALB Configuration - General\n$LoadBalancerName=\"\"        # [REQUIRED] The name of alb.\n$VpcId=\"\"                   # [REQUIRED] The id of alb security group's vpc.\n$Subnets=\"\"                 # [REQUIRED] The id list of alb's subnets.\n$Scheme=\"internet-facing\"   # `internet-facing`(default) or `internal` | [REQUIRED] The type of alb.\n$IpAddressType=\"ipv4\"       # `ipv4`(default) or `dualstack` | [optional] The IP address type of alb.\n$SecurityGroupId=\"\"         # [REQUIRED] The id of alb security group.\n$ListenerPathPattern=\"\"     # [REQUIRED] The path pattern list of listener. Type with comma(,).  For example, `/v1/test1,/v1/admin*,/v2/test1`.\n### ALB Configuration - Target Group\n$TargetGroupName=\"\"         # [REQUIRED] The name of target group.\n$TargetType=\"\"              # `instance`, `ip`, `lambda` or `alb` | [REQUIRED] the type of target group.\n$TargetSecurityGroupId=\"\"   # [optional] The id of alb target group's security group.\n$TargetPort=\"80\"            # [REQUIRED] The port number of target group.\n$HealthCheckPath=\"/\"        # [REQUIRED] The health check path of target group. It should end with `/`.\n### ALB Configuration - Access Log\n$CreateAccessLogBucket=\"\"   # `Yes`(default) or `No` | [REQUIRED] Create a new S3 bucket or using existed S3 bucket.\n$AccessLogBucketName=\"\"     # [REQUIRED] The name of alb access log bucket.\n$AccessLogPrefix=\"\"         # [optional] The prefix of alb access log. It cannot start or end with `/`.\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/elb/application-load-balancer.yaml\n# Using `deploy`\naws cloudformation deploy `\n--template-file ./application-load-balancer.yaml `\n--stack-name $STACK_NAME `\n--parameter-overrides `\nProjectName=$PROJECT_NAME `\nLoadBalancerName=$LoadBalancerName `\nVpcId=$VpcId `\nSubnets=$Subnets `\nScheme=$Scheme `\nIpAddressType=$IpAddressType `\nSecurityGroupId=$SecurityGroupId `\nListenerPathPattern=$ListenerPathPattern `\nTargetGroupName=$TargetGroupName `\nTargetType=$TargetType `\nTargetSecurityGroupId=$TargetSecurityGroupId `\nTargetPort=$TargetPort `\nHealthCheckPath=$HealthCheckPath `\nCreateAccessLogBucket=$CreateAccessLogBucket `\nAccessLogBucketName=$AccessLogBucketName `\nAccessLogPrefix=$AccessLogPrefix `\n--disable-rollback `\n--tags project=$PROJECT_NAME `\n--region $REGION\n# Using `create-stack`\naws cloudformation create-stack `\n--template-body file://application-load-balancer.yaml `\n--stack-name $STACK_NAME `\n--parameters `\nParameterKey=ProjectName,ParameterValue=$PROJECT_NAME `\nParameterKey=LoadBalancerName,ParameterValue=$LoadBalancerName `\nParameterKey=VpcId,ParameterValue=$VpcId `\nParameterKey=Subnets,ParameterValue=$Subnets `\nParameterKey=Scheme,ParameterValue=$Scheme `\nParameterKey=IpAddressType,ParameterValue=$IpAddressType `\nParameterKey=SecurityGroupId,ParameterValue=$SecurityGroupId `\nParameterKey=ListenerPathPattern,ParameterValue=$ListenerPathPattern `\nParameterKey=TargetGroupName,ParameterValue=$TargetGroupName `\nParameterKey=TargetType,ParameterValue=$TargetType `\nParameterKey=TargetSecurityGroupId,ParameterValue=$TargetSecurityGroupId `\nParameterKey=TargetPort,ParameterValue=$TargetPort `\nParameterKey=HealthCheckPath,ParameterValue=$HealthCheckPath `\nParameterKey=CreateAccessLogBucket,ParameterValue=$CreateAccessLogBucket `\nParameterKey=AccessLogBucketName,ParameterValue=$AccessLogBucketName `\nParameterKey=AccessLogPrefix,ParameterValue=$AccessLogPrefix `\n--disable-rollback `\n--tags Key=project,Value=$PROJECT_NAME `\n--region $REGION\n</code></pre>"},{"location":"Networking%20%26%20Content%20Delivery/VPC/01-create-vpc-endpoints/","title":"Create VPC Endpoints","text":""},{"location":"Networking%20%26%20Content%20Delivery/VPC/01-create-vpc-endpoints/#using-aws-cli","title":"Using AWS CLI","text":""},{"location":"Networking%20%26%20Content%20Delivery/VPC/01-create-vpc-endpoints/#aws-cli-v2","title":"AWS CLI v2","text":"Windows (Powershell) Linux (Bash)  <pre><code>$VPC_ID = \"\"\n$SUBNET_IDS = (\"\", \"\")\n$SECURITY_GROUP_ID = \"\"\n$PROJECT_NAME = \"\"\n$REGION = \"\"\n$ENDPOINT_LIST = @(\n(\"sts-ep\", \"sts\"),\n(\"monitoring-ep\", \"monitoring\")\n)\nforeach ($item in $ENDPOINT_LIST) {\naws ec2 create-vpc-endpoint `\n--vpc-endpoint-type Interface `\n--vpc-id $VPC_ID `\n--service-name com.amazonaws.$REGION.$($item[1]) `\n--subnet-ids $SUBNET_IDS `\n--security-group-ids $SECURITY_GROUP_ID `\n--ip-address-type ipv4 `\n--tag-specifications \"ResourceType=vpc-endpoint,Tags=[{Key=Name,Value=$($item[0])},{Key=project,Value=$PROJECT_NAME}]\" `\n--region $REGION `\n--no-cli-pager\n}\n</code></pre> <pre><code>VPC_ID=\"\"\nSUBNET_IDS=\"\"\nSECURITY_GROUP_ID=\"\"\nPROJECT_NAME=\"\"\nREGION=\"\"\nENDPOINT_LIST=(\n\"sts-ep sts\"\n\"monitoring-ep monitoring\"\n)\nfor item in \"${ENDPOINT_LIST[@]}\"\ndo\nread -ra list &lt;&lt;&lt; \"$item\"\naws ec2 create-vpc-endpoint \\\n--vpc-endpoint-type Interface \\\n--vpc-id $VPC_ID \\\n--service-name com.amazonaws.$REGION.${list[1]} \\\n--subnet-ids $SUBNET_IDS \\\n--security-group-ids $SECURITY_GROUP_ID \\\n--ip-address-type ipv4 \\\n--tag-specifications \"ResourceType=vpc-endpoint,Tags=[{Key=Name,Value=${list[0]}},{Key=project,Value=$PROJECT_NAME}]\" \\\n--region $REGION \\\n--no-cli-pager\ndone\n</code></pre>"},{"location":"Networking%20%26%20Content%20Delivery/VPC/01-create-vpc-endpoints/#aws-cli-v1","title":"AWS CLI v1","text":"Windows (Powershell) Linux (Bash)  <pre><code>$VPC_ID = \"\"\n$SUBNET_IDS = (\"\", \"\")\n$SECURITY_GROUP_ID = \"\"\n$PROJECT_NAME = \"\"\n$REGION = \"\"\n$ENDPOINT_LIST = @(\n(\"sts-ep\", \"sts\"),\n(\"monitoring-ep\", \"monitoring\")\n)\nforeach ($item in $ENDPOINT_LIST) {\naws ec2 create-vpc-endpoint `\n--vpc-endpoint-type Interface `\n--vpc-id $VPC_ID `\n--service-name com.amazonaws.$REGION.$($item[1]) `\n--subnet-ids $SUBNET_IDS `\n--security-group-ids $SECURITY_GROUP_ID `\n--tag-specifications \"ResourceType=vpc-endpoint,Tags=[{Key=Name,Value=$($item[0])},{Key=project,Value=$PROJECT_NAME}]\" `\n--region $REGION\n}\n</code></pre> <pre><code>VPC_ID=\"\"\nSUBNET_IDS=\"\"\nSECURITY_GROUP_ID=\"\"\nPROJECT_NAME=\"\"\nREGION=\"\"\nENDPOINT_LIST=(\n\"sts-ep sts\"\n\"monitoring-ep monitoring\"\n)\nfor item in \"${ENDPOINT_LIST[@]}\"\ndo\nread -ra list &lt;&lt;&lt; \"$item\"\naws ec2 create-vpc-endpoint \\\n--vpc-endpoint-type Interface \\\n--vpc-id $VPC_ID \\\n--service-name com.amazonaws.$REGION.${list[1]} \\\n--subnet-ids $SUBNET_IDS \\\n--security-group-ids $SECURITY_GROUP_ID \\\n--tag-specifications \"ResourceType=vpc-endpoint,Tags=[{Key=Name,Value=${list[0]}},{Key=project,Value=$PROJECT_NAME}]\" \\\n--region $REGION\ndone\n</code></pre>"},{"location":"Networking%20%26%20Content%20Delivery/VPC/01-create-vpc-endpoints/#endpoints-list","title":"Endpoints List","text":"<p>AWS Documentation</p> AWS service Service name Service name (short) Access Analyzer com.amazonaws.region.access-analyzer access-analyzer AWS Account Management com.amazonaws.region.account account Amazon API Gateway com.amazonaws.region.execute-api execute-api AWS App Mesh com.amazonaws.region.appmesh-envoy-management appmesh-envoy-management AWS App Runner com.amazonaws.region.apprunner apprunner AWS App Runner services com.amazonaws.region.apprunner.requests apprunner.requests Application Auto Scaling com.amazonaws.region.application-autoscaling application-autoscaling AWS Application Migration Service com.amazonaws.region.mgn mgn Amazon AppStream 2.0 com.amazonaws.region.appstream.api appstream.api com.amazonaws.region.appstream.streaming appstream.streaming Amazon Athena com.amazonaws.region.athena athena AWS Audit Manager com.amazonaws.region.auditmanager auditmanager Amazon Aurora com.amazonaws.region.rds rds AWS Auto Scaling com.amazonaws.region.autoscaling-plans autoscaling-plans AWS Backup com.amazonaws.region.backup backup com.amazonaws.region.backup-gateway backup-gateway AWS Batch com.amazonaws.region.batch batch AWS Billing Conductor com.amazonaws.region.billingconductor billingconductor Amazon Braket com.amazonaws.region.braket braket AWS Private Certificate Authority com.amazonaws.region.acm-pca acm-pca AWS Cloud Control API com.amazonaws.region.cloudcontrolapi cloudcontrolapi com.amazonaws.region.cloudcontrolapi-fips cloudcontrolapi-fips Amazon Cloud Directory com.amazonaws.region.clouddirectory clouddirectory AWS CloudFormation com.amazonaws.region.cloudformation cloudformation AWS CloudHSM com.amazonaws.region.cloudhsmv2 cloudhsmv2 AWS CloudTrail com.amazonaws.region.cloudtrail cloudtrail Amazon CloudWatch com.amazonaws.region.evidently evidently com.amazonaws.region.evidently-dataplane evidently-dataplane com.amazonaws.region.monitoring monitoring com.amazonaws.region.rum rum com.amazonaws.region.rum-dataplane rum-dataplane com.amazonaws.region.synthetics synthetics Amazon CloudWatch Events com.amazonaws.region.events events Amazon CloudWatch Logs com.amazonaws.region.logs logs AWS CodeArtifact com.amazonaws.region.codeartifact.api codeartifact.api com.amazonaws.region.codeartifact.repositories codeartifact.repositories AWS CodeBuild com.amazonaws.region.codebuild codebuild com.amazonaws.region.codebuild-fips codebuild-fips AWS CodeCommit com.amazonaws.region.codecommit codecommit com.amazonaws.region.codecommit-fips codecommit-fips com.amazonaws.region.git-codecommit git-codecommit com.amazonaws.region.git-codecommit-fips git-codecommit-fips AWS CodeDeploy com.amazonaws.region.codedeploy codedeploy com.amazonaws.region.codedeploy-commands-secure codedeploy-commands-secure Amazon CodeGuru Profiler com.amazonaws.region.codeguru-profiler codeguru-profiler Amazon CodeGuru Reviewer com.amazonaws.region.codeguru-reviewer codeguru-reviewer AWS CodePipeline com.amazonaws.region.codepipeline codepipeline AWS CodeStar Connections com.amazonaws.region.codestar-connections.api codestar-connections.api Amazon Comprehend com.amazonaws.region.comprehend comprehend Amazon Comprehend Medical com.amazonaws.region.comprehendmedical comprehendmedical AWS Config com.amazonaws.region.config config Amazon Connect com.amazonaws.region.app-integrations app-integrations com.amazonaws.region.cases cases com.amazonaws.region.connect-campaigns connect-campaigns com.amazonaws.region.profile profile com.amazonaws.region.voiceid voiceid com.amazonaws.region.wisdom wisdom AWS Data Exchange com.amazonaws.region.dataexchange dataexchange AWS Database Migration Service com.amazonaws.region.dms dms com.amazonaws.region.dms-fips dms-fips AWS DataSync com.amazonaws.region.datasync datasync Amazon DevOps Guru com.amazonaws.region.devops-guru devops-guru Amazon EBS direct APIs com.amazonaws.region.ebs ebs Amazon EC2 com.amazonaws.region.ec2 ec2 Amazon EC2 Auto Scaling com.amazonaws.region.autoscaling autoscaling EC2 Image Builder com.amazonaws.region.imagebuilder imagebuilder Amazon ECR com.amazonaws.region.ecr.api ecr.api com.amazonaws.region.ecr.dkr ecr.dkr Amazon ECS com.amazonaws.region.ecs ecs com.amazonaws.region.ecs-agent ecs-agent com.amazonaws.region.ecs-telemetry ecs-telemetry Amazon EKS com.amazonaws.region.eks eks AWS Elastic Beanstalk com.amazonaws.region.elasticbeanstalk elasticbeanstalk com.amazonaws.region.elasticbeanstalk-health elasticbeanstalk-health AWS Elastic Disaster Recovery com.amazonaws.region.drs drs Amazon Elastic File System com.amazonaws.region.elasticfilesystem elasticfilesystem com.amazonaws.region.elasticfilesystem-fips elasticfilesystem-fips Amazon Elastic Inference com.amazonaws.region.elastic-inference.runtime elastic-inference.runtime Elastic Load Balancing com.amazonaws.region.elasticloadbalancing elasticloadbalancing Amazon ElastiCache com.amazonaws.region.elasticache elasticache com.amazonaws.region.elasticache-fips elasticache-fips Amazon EMR com.amazonaws.region.elasticmapreduce elasticmapreduce Amazon EMR on EKS com.amazonaws.region.emr-containers emr-containers Amazon EMR Serverless com.amazonaws.region.emr-serverless emr-serverless Amazon EventBridge com.amazonaws.region.events events AWS Fault Injection Simulator com.amazonaws.region.fis fis Amazon FinSpace com.amazonaws.region.finspace finspace com.amazonaws.region.finspace-api finspace-api Amazon Forecast com.amazonaws.region.forecast forecast com.amazonaws.region.forecastquery forecastquery com.amazonaws.region.forecast-fips forecast-fips com.amazonaws.region.forecastquery-fips forecastquery-fips Amazon Fraud Detector com.amazonaws.region.frauddetector frauddetector Amazon FSx com.amazonaws.region.fsx fsx com.amazonaws.region.fsx-fips fsx-fips AWS Glue com.amazonaws.region.glue glue AWS Glue DataBrew com.amazonaws.region.databrew databrew Amazon Managed Grafana com.amazonaws.region.grafana grafana com.amazonaws.region.grafana-workspace grafana-workspace AWS Ground Station com.amazonaws.region.groundstation groundstation Amazon HealthLake com.amazonaws.region.healthlake healthlake IAM Identity Center com.amazonaws.region.identitystore identitystore IAM Roles Anywhere com.amazonaws.region.rolesanywhere rolesanywhere Amazon Inspector com.amazonaws.region.inspector2 inspector2 AWS IoT Core com.amazonaws.region.iot.data iot.data AWS IoT Core Device Advisor com.amazonaws.region.deviceadvisor.iot deviceadvisor.iot AWS IoT Core for LoRaWAN com.amazonaws.region.iotwireless.api iotwireless.api com.amazonaws.region.lorawan.cups lorawan.cups com.amazonaws.region.lorawan.lns lorawan.lns AWS IoT Greengrass com.amazonaws.region.greengrass greengrass AWS IoT RoboRunner com.amazonaws.region.iotroborunner iotroborunner AWS IoT SiteWise com.amazonaws.region.iotsitewise.api iotsitewise.api com.amazonaws.region.iotsitewise.data iotsitewise.data AWS IoT TwinMaker com.amazonaws.region.iottwinmaker.api iottwinmaker.api com.amazonaws.region.iottwinmaker.data iottwinmaker.data Amazon Kendra com.amazonaws.region.kendra kendra aws.api.region.kendra-ranking AWS Key Management Service com.amazonaws.region.kms kms Amazon Keyspaces (for Apache Cassandra) com.amazonaws.region.cassandra cassandra com.amazonaws.region.cassandra-fips cassandra-fips Amazon Kinesis Data Firehose com.amazonaws.region.kinesis-firehose kinesis-firehose Amazon Kinesis Data Streams com.amazonaws.region.kinesis-streams kinesis-streams AWS Lake Formation com.amazonaws.region.lakeformation lakeformation AWS Lambda com.amazonaws.region.lambda lambda Amazon Lex com.amazonaws.region.models-v2-lex models-v2-lex com.amazonaws.region.runtime-v2-lex runtime-v2-lex AWS License Manager com.amazonaws.region.license-manager license-manager com.amazonaws.region.license-manager-fips license-manager-fips Amazon Lookout for Equipment com.amazonaws.region.lookoutequipment lookoutequipment Amazon Lookout for Metrics com.amazonaws.region.lookoutmetrics lookoutmetrics Amazon Lookout for Vision com.amazonaws.region.lookoutvision lookoutvision Amazon Macie com.amazonaws.region.macie2 macie2 AWS Mainframe Modernization com.amazonaws.region.m2 m2 Amazon Managed Service for Prometheus com.amazonaws.region.aps aps com.amazonaws.region.aps-workspaces aps-workspaces Amazon Managed Workflows for Apache Airflow com.amazonaws.region.airflow.api airflow.api com.amazonaws.region.airflow.env airflow.env com.amazonaws.region.airflow.ops airflow.ops Amazon MemoryDB for Redis com.amazonaws.region.memory-db memory-db com.amazonaws.region.memorydb-fips memorydb-fips AWS Migration Hub Orchestrator com.amazonaws.region.migrationhub-orchestrator migrationhub-orchestrator AWS Migration Hub Refactor Spaces com.amazonaws.region.refactor-spaces refactor-spaces Migration Hub Strategy Recommendations com.amazonaws.region.migrationhub-strategy migrationhub-strategy Amazon Nimble Studio com.amazonaws.region.nimble nimble Amazon Omics com.amazonaws.region.analytics-omics analytics-omics com.amazonaws.region.control-storage-omics control-storage-omics com.amazonaws.region.storage-omics storage-omics com.amazonaws.region.tags-omics tags-omics com.amazonaws.region.workflows-omics workflows-omics Amazon OpenSearch Service These endpoints are service-managed AWS Panorama com.amazonaws.region.panorama panorama Amazon Pinpoint com.amazonaws.region.pinpoint-sms-voice-v2 pinpoint-sms-voice-v2 Amazon Polly com.amazonaws.region.polly polly AWS Private 5G com.amazonaws.region.private-networks private-networks AWS Proton com.amazonaws.region.proton proton Amazon QLDB com.amazonaws.region.qldb.session qldb.session Amazon RDS com.amazonaws.region.rds rds Amazon RDS Data API com.amazonaws.region.rds-data rds-data Amazon Redshift com.amazonaws.region.redshift redshift com.amazonaws.region.redshift-fips redshift-fips Amazon Redshift Data API com.amazonaws.region.redshift-data redshift-data Amazon Rekognition com.amazonaws.region.rekognition rekognition com.amazonaws.region.rekognition-fips rekognition-fips AWS RoboMaker com.amazonaws.region.robomaker robomaker Amazon S3 com.amazonaws.region.s3 s3 Amazon S3 Multi-Region Access Points com.amazonaws.s3-global.accesspoint Amazon S3 on Outposts com.amazonaws.region.s3-outposts s3-outposts Amazon SageMaker aws.sagemaker.region.notebook aws.sagemaker.region.studio com.amazonaws.region.sagemaker.api sagemaker.api com.amazonaws.region.sagemaker.featurestore-runtime sagemaker.featurestore-runtime com.amazonaws.region.sagemaker.metrics sagemaker.metrics com.amazonaws.region.sagemaker.runtime sagemaker.runtime com.amazonaws.region.sagemaker.runtime-fips sagemaker.runtime-fips AWS Secrets Manager com.amazonaws.region.secretsmanager secretsmanager AWS Security Hub com.amazonaws.region.securityhub securityhub AWS Security Token Service com.amazonaws.region.sts sts AWS Server Migration Service com.amazonaws.region.awsconnector awsconnector com.amazonaws.region.sms sms com.amazonaws.region.sms-fips sms-fips Service Catalog com.amazonaws.region.servicecatalog servicecatalog com.amazonaws.region.servicecatalog-appregistry servicecatalog-appregistry Amazon SES com.amazonaws.region.email-smtp email-smtp AWS Snow Device Management com.amazonaws.region.snow-device-management snow-device-management Amazon SNS com.amazonaws.region.sns sns Amazon SQS com.amazonaws.region.sqs sqs AWS Step Functions com.amazonaws.region.states states com.amazonaws.region.sync-states sync-states AWS Storage Gateway com.amazonaws.region.storagegateway storagegateway AWS Systems Manager com.amazonaws.region.ec2messages ec2messages com.amazonaws.region.ssm ssm com.amazonaws.region.ssm-contacts ssm-contacts com.amazonaws.region.ssm-incidents ssm-incidents com.amazonaws.region.ssmmessages ssmmessages Amazon Textract com.amazonaws.region.textract textract com.amazonaws.region.textract-fips textract-fips Amazon Transcribe com.amazonaws.region.transcribe transcribe com.amazonaws.region.transcribestreaming transcribestreaming Amazon Transcribe Medical com.amazonaws.region.transcribe transcribe com.amazonaws.region.transcribestreaming transcribestreaming AWS Transfer for SFTP com.amazonaws.region.transfer transfer com.amazonaws.region.transfer.server transfer.server Amazon Translate com.amazonaws.region.translate translate Amazon WorkSpaces com.amazonaws.region.workspaces workspaces AWS X-Ray com.amazonaws.region.xray xray"},{"location":"Networking%20%26%20Content%20Delivery/VPC/02-create-empty-security-groups/","title":"Create Empty Security Groups","text":""},{"location":"Networking%20%26%20Content%20Delivery/VPC/02-create-empty-security-groups/#aws-cli-v2","title":"AWS CLI v2","text":"Windows (Powershell) Linux (Bash)  <pre><code>$VPC_ID = \"\"\n$PROJECT_NAME = \"\"\n$REGION = \"\"\n$NAME_LIST  = @(\n\"elb-sg\",\n\"ep-sg\"\n)\nforeach ($item in $NAME_LIST) {\n$GROUP_ID = aws ec2 create-security-group `\n--description $item `\n--group-name $item `\n--vpc-id $VPC_ID `\n--tag-specifications \"ResourceType=security-group,Tags=[{Key=Name,Value=$($item)},{Key=project,Value=$PROJECT_NAME}]\" `\n--region $REGION `\n--query 'GroupId' `\n--output text `\n--no-cli-pager\n$_ = aws ec2 revoke-security-group-egress `\n--group-id $GROUP_ID `\n--protocol all `\n--cidr 0.0.0.0/0 `\n--region $REGION\necho \"$item $GROUP_ID\"\n}\n</code></pre> <pre><code>VPC_ID=\"\"\nPROJECT_NAME=\"\"\nREGION=\"\"\nNAME_LIST=(\n\"elb-sg\"\n\"ep-sg\"\n)\nfor item in \"${NAME_LIST[@]}\"\ndo\nGROUP_ID=$(aws ec2 create-security-group \\\n--description $item \\\n--group-name $item \\\n--vpc-id $VPC_ID \\\n--tag-specifications \"ResourceType=security-group,Tags=[{Key=Name,Value=$item},{Key=project,Value=$PROJECT_NAME}]\" \\\n--region $REGION \\\n--query 'GroupId' \\\n--output text \\\n--no-cli-pager\n    )\n_=$(aws ec2 revoke-security-group-egress \\\n--group-id $GROUP_ID \\\n--protocol all \\\n--cidr 0.0.0.0/0 \\\n--region $REGION\n)\necho $item $GROUP_ID\ndone\n</code></pre>"},{"location":"Networking%20%26%20Content%20Delivery/VPC/02-create-empty-security-groups/#aws-cli-v1","title":"AWS CLI v1","text":"Windows (Powershell) Linux (Bash)  <pre><code>$VPC_ID = \"\"\n$PROJECT_NAME = \"\"\n$REGION = \"\"\n$NAME_LIST  = @(\n\"elb-sg\",\n\"ep-sg\"\n)\nforeach ($item in $NAME_LIST) {\n$GROUP_ID = aws ec2 create-security-group `\n--description $item `\n--group-name $item `\n--vpc-id $VPC_ID `\n--tag-specifications \"ResourceType=security-group,Tags=[{Key=Name,Value=$($item)},{Key=project,Value=$PROJECT_NAME}]\" `\n--region $REGION `\n--query 'GroupId' `\n--output text\n$_ = aws ec2 revoke-security-group-egress `\n--group-id $GROUP_ID `\n--protocol all `\n--cidr 0.0.0.0/0 `\n--region $REGION\necho \"$item $GROUP_ID\"\n}\n</code></pre> <pre><code>VPC_ID=\"\"\nPROJECT_NAME=\"\"\nREGION=\"\"\nNAME_LIST=(\n\"elb-sg\"\n\"ep-sg\"\n)\nfor item in \"${NAME_LIST[@]}\"\ndo\nGROUP_ID=$(aws ec2 create-security-group \\\n--description $item \\\n--group-name $item \\\n--vpc-id $VPC_ID \\\n--tag-specifications \"ResourceType=security-group,Tags=[{Key=Name,Value=$item},{Key=project,Value=$PROJECT_NAME}]\" \\\n--region $REGION \\\n--query 'GroupId' \\\n--output text\n    )\n_=$(aws ec2 revoke-security-group-egress \\\n--group-id $GROUP_ID \\\n--protocol all \\\n--cidr 0.0.0.0/0 \\\n--region $REGION\n)\necho $item $GROUP_ID\ndone\n</code></pre>"},{"location":"Networking%20%26%20Content%20Delivery/VPC/03-network-firewall-guide/","title":"Network Firewall Guide","text":""},{"location":"Networking%20%26%20Content%20Delivery/VPC/03-network-firewall-guide/#diagram","title":"Diagram","text":""},{"location":"Networking%20%26%20Content%20Delivery/VPN/01-create-client-vpn/","title":"Create Client VPN","text":""},{"location":"Networking%20%26%20Content%20Delivery/VPN/01-create-client-vpn/#create-certificates","title":"Create certificates","text":"Linux Windows <pre><code>PROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region code&gt;\"\nsudo yum update -y\nsudo yum install -y git\n\ngit clone https://github.com/OpenVPN/easy-rsa.git\ncd easy-rsa/easyrsa3\n\nexport EASYRSA_BATCH=1\n./easyrsa init-pki\n./easyrsa build-ca nopass\n./easyrsa build-server-full server nopass\n./easyrsa build-client-full client1.domain.tld nopass\n\nmkdir ~/vpn-certs/\ncp pki/ca.crt ~/vpn-certs/\ncp pki/issued/server.crt ~/vpn-certs/\ncp pki/private/server.key ~/vpn-certs/\ncp pki/issued/client1.domain.tld.crt ~/vpn-certs\ncp pki/private/client1.domain.tld.key ~/vpn-certs/\ncd ~/vpn-certs/\n\naws acm import-certificate \\\n--certificate fileb://server.crt \\\n--private-key fileb://server.key \\\n--certificate-chain fileb://ca.crt \\\n--tags Key=project,Value=$PROJECT_NAME \\\n--region $REGION\naws acm import-certificate \\\n--certificate fileb://client1.domain.tld.crt \\\n--private-key fileb://client1.domain.tld.key \\\n--certificate-chain fileb://ca.crt \\\n--tags Key=project,Value=$PROJECT_NAME \\\n--region $REGION\n</code></pre> <p>AWS Documentation</p>"},{"location":"Networking%20%26%20Content%20Delivery/VPN/01-create-client-vpn/#install-easyrsa","title":"Install EasyRSA","text":"<pre><code>curl.exe -LO https://github.com/OpenVPN/easy-rsa/releases/download/v3.1.2/EasyRSA-3.1.2-win64.zip\nExpand-Archive ./EasyRSA-3.1.2-win64.zip\ncd ./EasyRSA-3.1.2-win64/EasyRSA-3.1.2\n./EasyRSA-Start.bat\n</code></pre>"},{"location":"Networking%20%26%20Content%20Delivery/VPN/01-create-client-vpn/#initialize-a-new-pki-environment","title":"Initialize a new PKI environment","text":"<pre><code>./easyrsa init-pki\n</code></pre>"},{"location":"Networking%20%26%20Content%20Delivery/VPN/01-create-client-vpn/#build-a-new-ca","title":"Build a new CA","text":"<pre><code>./easyrsa build-ca nopass\n</code></pre>"},{"location":"Networking%20%26%20Content%20Delivery/VPN/01-create-client-vpn/#generate-the-server-certificate-and-key","title":"Generate the server certificate and key","text":"<pre><code>./easyrsa build-server-full server nopass\n</code></pre>"},{"location":"Networking%20%26%20Content%20Delivery/VPN/01-create-client-vpn/#generate-the-client-certificate-and-key","title":"Generate the client certificate and key","text":"<pre><code>./easyrsa build-client-full client1.domain.tld nopass\n</code></pre>"},{"location":"Networking%20%26%20Content%20Delivery/VPN/01-create-client-vpn/#exit-the-easyrsa-3-shell","title":"Exit the EasyRSA 3 shell","text":"<pre><code>exit\n</code></pre>"},{"location":"Networking%20%26%20Content%20Delivery/VPN/01-create-client-vpn/#copy-the-certificates-and-keys","title":"Copy the certificates and keys","text":"<pre><code>mkdir ../../vpn-certs\ncp pki/ca.crt ../../vpn-certs/\ncp pki/issued/server.crt ../../vpn-certs/\ncp pki/private/server.key ../../vpn-certs/\ncp pki/issued/client1.domain.tld.crt ../../vpn-certs\ncp pki/private/client1.domain.tld.key ../../vpn-certs/\ncd ../../vpn-certs/\n</code></pre>"},{"location":"Networking%20%26%20Content%20Delivery/VPN/01-create-client-vpn/#upload-the-certificates-and-keys","title":"Upload the certificates and keys","text":"<pre><code>$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region code&gt;\"\naws acm import-certificate `\n--certificate fileb://server.crt `\n--private-key fileb://server.key `\n--certificate-chain fileb://ca.crt `\n--tags Key=project,Value=$PROJECT_NAME `\n--region $REGION\naws acm import-certificate `\n--certificate fileb://client1.domain.tld.crt `\n--private-key fileb://client1.domain.tld.key `\n--certificate-chain fileb://ca.crt `\n--tags Key=project,Value=$PROJECT_NAME `\n--region $REGION\n</code></pre>"},{"location":"Networking%20%26%20Content%20Delivery/VPN/01-create-client-vpn/#create-client-vpn-using-cloudformation","title":"Create Client VPN using Cloudformation","text":"Linux Windows <pre><code>STACK_NAME=\"&lt;stack name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region code&gt;\"\n# VPN Configuration - General\nClientVpnName=\"\"                  # [REQUIRED] The name of client vpn.\n# VPN Configuration - Certificate\nServerCertificateArn=\"\"           # [REQUIRED] The arn of server certification in ACM.\nClientCertificateArn=\"\"           # [REQUIRED] The arn of client certification in ACM.\n# VPN Configuration - Client\nClientCidrBlock=\"\"                # [REQUIRED] The IP address range, in CIDR notation, from which client IP addresses are allocated. (/12 ~ /22)\nSecurityGroupId=\"\"                # [REQUIRED] The id of security group.\nTaragetNetworkCidr=\"10.0.0.0/16\"  # [REQUIRED] The CIDR of the network for which access is being authorized.\n# VPN Configuration - VPC\nVpcId=\"\"                          # [REQUIRED] The id of VPC.\nSubnetIds=\"\"                      # [REQUIRED] The id list of subnets.\ncurl -L -o client-vpn.yaml https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/vpc/client-vpn/template.yaml\n\naws cloudformation deploy \\\n--stack-name $STACK_NAME \\\n--template-file ./client-vpn.yaml \\\n--parameter-overrides \\\nProjectName=$PROJECT_NAME \\\nClientVpnName=$ClientVpnName \\\nServerCertificateArn=$ServerCertificateArn \\\nClientCertificateArn=$ClientCertificateArn \\\nClientCidrBlock=$ClientCidrBlock \\\nSecurityGroupId=$SecurityGroupId \\\nTaragetNetworkCidr=$TaragetNetworkCidr \\\nVpcId=$VpcId \\\nSubnetIds=$SubnetIds \\\n--tags project=$PROJECT_NAME \\\n--region $REGION \\\n--disable-rollback\n\naws cloudformation describe-stacks \\\n--stack-name $STACK_NAME \\\n--query \"Stacks[0].Outputs[0].OutputValue\" \\\n--region $REGION \\\n--output text\n</code></pre> <pre><code>$STACK_NAME=\"&lt;stack name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region code&gt;\"\n# VPN Configuration - General\n$ClientVpnName=\"\"                 # [REQUIRED] The name of client vpn.\n# VPN Configuration - Certificate\n$ServerCertificateArn=\"\"          # [REQUIRED] The arn of server certification in ACM.\n$ClientCertificateArn=\"\"          # [REQUIRED] The arn of client certification in ACM.\n# VPN Configuration - Client\n$ClientCidrBlock=\"\"               # [REQUIRED] The IP address range, in CIDR notation, from which client IP addresses are allocated. (/12 ~ /22)\n$SecurityGroupId=\"\"               # [REQUIRED] The id of security group.\n$TaragetNetworkCidr=\"10.0.0.0/16\" # [REQUIRED] The CIDR of the network for which access is being authorized.\n# VPN Configuration - VPC\n$VpcId=\"\"                         # [REQUIRED] The id of VPC.\n$SubnetIds=\"\"                     # [REQUIRED] The id list of subnets.\ncurl.exe -L -o client-vpn.yaml https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/vpc/client-vpn/template.yaml\naws cloudformation deploy `\n--stack-name $STACK_NAME `\n--template-file ./client-vpn.yaml `\n--parameter-overrides `\nProjectName=$PROJECT_NAME `\nClientVpnName=$ClientVpnName `\nServerCertificateArn=$ServerCertificateArn `\nClientCertificateArn=$ClientCertificateArn `\nClientCidrBlock=$ClientCidrBlock `\nSecurityGroupId=$SecurityGroupId `\nTaragetNetworkCidr=$TaragetNetworkCidr `\nVpcId=$VpcId `\nSubnetIds=$SubnetIds `\n--tags project=$PROJECT_NAME `\n--region $REGION `\n--disable-rollback\naws cloudformation describe-stacks `\n--stack-name $STACK_NAME `\n--query \"Stacks[0].Outputs[0].OutputValue\" `\n--region $REGION `\n--output text\n</code></pre>"},{"location":"Networking%20%26%20Content%20Delivery/VPN/01-create-client-vpn/#create-openvpn-configuration-file","title":"Create OpenVPN configuration file","text":"Linux Windows <pre><code>CLIENT_VPN_ENDPOINT_ID=\"&lt;endpoint id&gt;\"\nREGION=\"&lt;region code&gt;\"\ncd ~\n\naws ec2 export-client-vpn-client-configuration \\\n--client-vpn-endpoint-id $CLIENT_VPN_ENDPOINT_ID \\\n--region $REGION \\\n--output text &gt; client-config.ovpn\n\nsed -i '34 i&lt;cert&gt;\\n&lt;/cert&gt;\\n&lt;key&gt;\\n&lt;/key&gt;' client-config.ovpn\nsed -i \"/&lt;cert&gt;/r /home/ec2-user/vpn-certs/client1.domain.tld.crt\" client-config.ovpn\nsed -i \"/&lt;key&gt;/r /home/ec2-user/vpn-certs/client1.domain.tld.key\" client-config.ovpn\n</code></pre> <pre><code>$CLIENT_VPN_ENDPOINT_ID=\"&lt;endpoint id&gt;\"\n$REGION=\"&lt;region code&gt;\"\ncd ../\naws ec2 export-client-vpn-client-configuration `\n--client-vpn-endpoint-id $CLIENT_VPN_ENDPOINT_ID `\n--region $REGION `\n--output text &gt; client-config.ovpn\n$CLIENT_CERT_FULLNAME=(Get-Item \"./vpn-certs/client1.domain.tld.crt\").FullName\n$CLIENT_KEY_FULLNAME=(Get-Item \"./vpn-certs/client1.domain.tld.key\").FullName\n(Get-Content client-config.ovpn) |\nForeach-Object {\nif ($_ -match \"^remote \") {\n\"&lt;cert&gt;`n&lt;/cert&gt;`n&lt;key&gt;`n&lt;/key&gt;`n\" + $_\n} else {\n$_\n}\n} | Set-Content client-config.ovpn\n(Get-Content client-config.ovpn) |\nForeach-Object {\nif ($_ -match \"&lt;cert&gt;\") {\n$_\nGet-Content $CLIENT_CERT_FULLNAME\n} else {\n$_\n}\n} | Set-Content client-config.ovpn\n(Get-Content client-config.ovpn) |\nForeach-Object {\nif ($_ -match \"&lt;key&gt;\") {\n$_\nGet-Content $CLIENT_KEY_FULLNAME\n} else {\n$_\n}\n} | Set-Content client-config.ovpn\n</code></pre> <p>AWS Documentation</p>"},{"location":"Networking%20%26%20Content%20Delivery/VPN/01-create-client-vpn/#download-aws-provided-client","title":"Download AWS Provided Client","text":"<p>Download Here</p>"},{"location":"Security%2C%20Identity%20%26%20Compliance/KMS/01-cloudtrail-kms-policies/","title":"CloudTrail KMS Policies","text":"<ol> <li>Enable CloudTrail log encrypt permissions. See Granting encrypt permissions.</li> <li>Enable CloudTrail log decrypt permissions. See Grantind decrypt permissions.</li> <li>Enable CloudTrail to describe KMS key properties. See Enable CloudTrail to describe KMS key properties.</li> </ol> <p>AWS Documentation</p>"},{"location":"Security%2C%20Identity%20%26%20Compliance/KMS/01-cloudtrail-kms-policies/#granting-encrypt-permissions","title":"Granting encrypt permissions","text":"<pre><code>{\n\"Sid\": \"Allow CloudTrail to encrypt logs\",\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"Service\": \"cloudtrail.amazonaws.com\"\n},\n\"Action\": \"kms:GenerateDataKey*\",\n\"Resource\": \"arn:aws:kms:&lt;region code&gt;:&lt;account id&gt;:key/&lt;kms key id&gt;\",\n\"Condition\": {\n\"StringLike\": {\n\"kms:EncryptionContext:aws:cloudtrail:arn\": [\n\"arn:aws:cloudtrail:*:&lt;account id&gt;:trail/*\"\n]\n},\n\"StringEquals\": {\n\"aws:SourceArn\": \"arn:aws:cloudtrail:&lt;region code&gt;:&lt;account id&gt;:trail/&lt;trail name&gt;\"\n}\n}\n}\n</code></pre> <p>AWS Documentation</p>"},{"location":"Security%2C%20Identity%20%26%20Compliance/KMS/01-cloudtrail-kms-policies/#granting-decrypt-permissions","title":"Granting decrypt permissions","text":"<p>Before you add your KMS key to your CloudTrail configuration, it is important to give decrypt permissions to all users who require them. Users who have encrypt permissions but no decrypt permissions will not be able to read encrypted logs. If you are using an existing S3 bucket with an S3 Bucket Key, <code>kms:Decrypt</code> permissions are required to create or update a trail with SSE-KMS encryption enabled.</p> <pre><code>{\n\"Sid\": \"Enable CloudTrail log decrypt permissions\",\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"AWS\": \"arn:aws:iam::&lt;account id&gt;:user/&lt;user name&gt;\"\n},\n\"Action\": \"kms:Decrypt\",\n\"Resource\": \"*\",\n\"Condition\": {\n\"Null\": {\n\"kms:EncryptionContext:aws:cloudtrail:arn\": \"false\"\n}\n}\n}\n</code></pre> <p>AWS Documentation</p>"},{"location":"Security%2C%20Identity%20%26%20Compliance/KMS/01-cloudtrail-kms-policies/#enable-cloudtrail-to-describe-kms-key-properties","title":"Enable CloudTrail to describe KMS key properties","text":"<pre><code>{\n\"Sid\": \"Allow CloudTrail access\",\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"Service\": \"cloudtrail.amazonaws.com\"\n},\n\"Action\": \"kms:DescribeKey\",\n\"Resource\": \"arn:aws:kms:&lt;region code&gt;:&lt;account id&gt;:key/&lt;key id&gt;\",\n\"Condition\": {\n\"StringEquals\": {\n\"aws:SourceArn\": \"arn:aws:cloudtrail:&lt;region code&gt;:&lt;account id&gt;:trail/&lt;trail name&gt;\"\n}\n}\n}\n</code></pre> <p>AWS Documentation</p>"},{"location":"Security%2C%20Identity%20%26%20Compliance/KMS/02-dynamodb-kms-policies/","title":"DynamoDB KMS Policies","text":""},{"location":"Security%2C%20Identity%20%26%20Compliance/KMS/02-dynamodb-kms-policies/#granting-encrypt-and-decrypt-permissions-to-users-or-roles","title":"Granting encrypt and decrypt permissions to users or roles.","text":"<pre><code>{\n\"Sid\": \"Allow users or roles to use KMS to DynamoDB.\",\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"AWS\": \"arn:aws:iam::&lt;account id&gt;:&lt;users or roles&gt;/&lt;users or roles name&gt;\"\n},\n\"Action\": [\n\"kms:Decrypt\"\n],\n\"Resource\": \"arn:aws:kms:&lt;region code&gt;:&lt;account id&gt;:key/&lt;kms key id&gt;\"\n}\n</code></pre>"},{"location":"Security%2C%20Identity%20%26%20Compliance/KMS/03-ebs-kms-policies/","title":"EBS KMS Policies","text":""},{"location":"Security%2C%20Identity%20%26%20Compliance/KMS/03-ebs-kms-policies/#granting-encrypt-and-decrypt-permissions-to-users-or-roles","title":"Granting encrypt and decrypt permissions to users or roles.","text":"<pre><code>{\n\"Sid\": \"Allow users or roles to use KMS to EBS.\",\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"AWS\": \"arn:aws:iam::&lt;account id&gt;:&lt;users or roles&gt;/&lt;users or roles name&gt;\"\n},\n\"Action\": [\n\"kms:Encrypt\",\n\"kms:Decrypt\",\n\"kms:ReEncrypt*\",\n\"kms:GenerateDataKey*\",\n\"kms:DescribeKey\"\n],\n\"Resource\": \"arn:aws:kms:&lt;region code&gt;:&lt;account id&gt;:key/&lt;kms key id&gt;\"\n},\n{\n\"Sid\": \"Allow attachment of persistent resources\",\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"AWS\": \"arn:aws:iam::&lt;account id&gt;:&lt;users or roles&gt;/&lt;users or roles name&gt;\"\n},\n\"Action\": [\n\"kms:CreateGrant\",\n\"kms:ListGrants\",\n\"kms:RevokeGrant\"\n],\n\"Resource\": \"arn:aws:kms:&lt;region code&gt;:&lt;account id&gt;:key/&lt;kms key id&gt;\",\n\"Condition\": {\n\"Bool\": {\n\"kms:GrantIsForAWSResource\": \"true\"\n}\n}\n}\n</code></pre>"},{"location":"Security%2C%20Identity%20%26%20Compliance/KMS/04-s3-kms-policies/","title":"S3 KMS Policies","text":""},{"location":"Security%2C%20Identity%20%26%20Compliance/KMS/04-s3-kms-policies/#granting-encrypt-and-decrypt-permissions-to-users-or-roles","title":"Granting encrypt and decrypt permissions to users or roles.","text":"<pre><code>{\n\"Sid\": \"Allow users or roles to use KMS to S3.\",\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"AWS\": \"arn:aws:iam::&lt;account id&gt;:&lt;users or roles&gt;/&lt;users or roles name&gt;\"\n},\n\"Action\": [\n\"kms:Encrypt\",\n\"kms:Decrypt\",\n\"kms:ReEncrypt*\",\n\"kms:GenerateDataKey*\",\n\"kms:DescribeKey\"\n],\n\"Resource\": \"arn:aws:kms:&lt;region code&gt;:&lt;account id&gt;:key/&lt;kms key id&gt;\"\n}\n</code></pre>"},{"location":"Security%2C%20Identity%20%26%20Compliance/KMS/04-s3-kms-policies/#requiring-server-side-encryption","title":"Requiring server-side encryption","text":"<pre><code>{\n\"Version\":\"2012-10-17\",\n\"Id\":\"PutObjectPolicy\",\n\"Statement\":[{\n\"Sid\":\"DenyUnEncryptedObjectUploads\",\n\"Effect\":\"Deny\",\n\"Principal\":\"*\",\n\"Action\":\"s3:PutObject\",\n\"Resource\":\"arn:aws:s3:::&lt;bucket name&gt;/*\",\n\"Condition\":{\n\"StringNotEquals\":{\n\"s3:x-amz-server-side-encryption\":\"aws:kms\"\n}\n}\n}\n]\n}\n</code></pre> <p>If you want to upload using sse-kms, please see this documentation.</p> <pre><code>aws s3 cp ./2022-11-03_14:11:49 s3://samsung-kms-test --sse aws:kms\n</code></pre> <p>AWS Documentation</p>"},{"location":"Security%2C%20Identity%20%26%20Compliance/KMS/04-s3-kms-policies/#s3-replication-policies","title":"S3 Replication Policies","text":""},{"location":"Security%2C%20Identity%20%26%20Compliance/KMS/04-s3-kms-policies/#kms-policies","title":"KMS Policies","text":"<pre><code>{\n\"Sid\": \"AllowS3ReplicationSourceRoleToUseTheKey\",\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"AWS\": \"arn:aws:iam::&lt;account id&gt;:role/service-role/&lt;s3 replication role name&gt;\"\n},\n\"Action\": [\n\"kms:GenerateDataKey\",\n\"kms:Encrypt\",\n\"kms:Decrypt\"\n],\n\"Resource\": \"*\"\n},\n{\n\"Sid\": \"AllowS3ReplicationDestinationRoleToUseTheKey\",\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"AWS\": \"arn:aws:iam::&lt;account id&gt;:role/service-role/&lt;s3 replication role name&gt;\"\n},\n\"Action\": [\n\"kms:GenerateDataKey\",\n\"kms:Encrypt\",\n\"kms:Decrypt\"\n],\n\"Resource\": \"*\"\n}\n</code></pre> <p>Note</p> <p>You should update policies both key(source and destination).</p>"},{"location":"Security%2C%20Identity%20%26%20Compliance/KMS/05-cloudwatch-kms-policies/","title":"CloudWatch Logs KMS Policies","text":""},{"location":"Security%2C%20Identity%20%26%20Compliance/KMS/05-cloudwatch-kms-policies/#granting-encrypt-and-decrypt-permissions-to-cloudwatch-logs","title":"Granting encrypt and decrypt permissions to CloudWatch Logs","text":"<pre><code>{\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"Service\": \"logs.&lt;region code&gt;.amazonaws.com\"\n},\n\"Action\": [\n\"kms:Encrypt*\",\n\"kms:Decrypt*\",\n\"kms:ReEncrypt*\",\n\"kms:GenerateDataKey*\",\n\"kms:Describe*\"\n],\n\"Resource\": \"*\",\n\"Condition\": {\n\"ArnEquals\": {\n\"kms:EncryptionContext:aws:logs:arn\": \"arn:aws:logs:&lt;region code&gt;:&lt;account id&gt;:log-group:&lt;log group name&gt;\"\n}\n}\n}\n</code></pre> <p>You can use <code>arn:aws:logs:&lt;region code&gt;:&lt;account id&gt;:log-group:*</code> at <code>Condition</code>.</p> <p>AWS Documentation</p>"},{"location":"Security%2C%20Identity%20%26%20Compliance/KMS/06-secrets-manager-kms-policies/","title":"Secrets Manager KMS Policies","text":""},{"location":"Security%2C%20Identity%20%26%20Compliance/KMS/06-secrets-manager-kms-policies/#granting-encrypt-and-decrypt-permissions-to-users-or-roles","title":"Granting encrypt and decrypt permissions to users or roles.","text":"<pre><code>{\n\"Sid\": \"Allow users or roles to use KMS to S3.\",\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"AWS\": \"arn:aws:iam::&lt;account id&gt;:&lt;users or roles&gt;/&lt;users or roles name&gt;\"\n},\n\"Action\": [\n\"kms:Decrypt\",\n\"kms:GenerateDataKey*\",\n],\n\"Resource\": \"arn:aws:kms:&lt;region code&gt;:&lt;account id&gt;:key/&lt;kms key id&gt;\"\n}\n</code></pre> <p>AWS Documentation</p>"},{"location":"Security%2C%20Identity%20%26%20Compliance/KMS/07-rds-kms-policies/","title":"RDS KMS Policies","text":""},{"location":"Security%2C%20Identity%20%26%20Compliance/KMS/07-rds-kms-policies/#granting-encrypt-and-decrypt-permissions-to-users-or-roles","title":"Granting encrypt and decrypt permissions to users or roles.","text":"<pre><code>{\n\"Sid\": \"Allow users or roles to use KMS to RDS.\",\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"AWS\": \"arn:aws:iam::&lt;account id&gt;:&lt;users or roles&gt;/&lt;users or roles name&gt;\"\n},\n\"Action\": [\n\"kms:CreateGrant\",\n\"kms:DescribeKey\"\n],\n\"Resource\": \"arn:aws:kms:&lt;region code&gt;:&lt;account id&gt;:key/&lt;kms key id&gt;\",\n\"Condition\": {\n\"StringEquals\": {\n\"kms:ViaService\": [\n\"rds.&lt;region code&gt;.amazonaws.com\"\n]\n}\n}\n}\n</code></pre> <p>AWS Documentation</p>"},{"location":"Security%2C%20Identity%20%26%20Compliance/KMS/08-elasticache-kms-policies/","title":"ElastiCache KMS Policies","text":""},{"location":"Security%2C%20Identity%20%26%20Compliance/KMS/08-elasticache-kms-policies/#granting-encrypt-and-decrypt-permissions-to-users-or-roles","title":"Granting encrypt and decrypt permissions to users or roles.","text":"<pre><code>{\n\"Sid\": \"Allow users or roles to use KMS to ElastiCache.\",\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"AWS\": \"arn:aws:iam::&lt;account id&gt;:&lt;users or roles&gt;/&lt;users or roles name&gt;\"\n},\n\"Action\": [\n\"kms:CreateGrant\",\n\"kms:DescribeKey\"\n],\n\"Resource\": \"arn:aws:kms:&lt;region code&gt;:&lt;account id&gt;:key/&lt;kms key id&gt;\",\n\"Condition\": {\n\"StringEquals\": {\n\"kms:ViaService\": [\n\"elasticache.&lt;region code&gt;.amazonaws.com\",\n\"dax.&lt;region code&gt;.amazonaws.com\"\n]\n}\n}\n}\n</code></pre> <p>AWS Documentation</p>"},{"location":"Security%2C%20Identity%20%26%20Compliance/KMS/09-cloudfront-kms-policies/","title":"CloudFront KMS Policies","text":""},{"location":"Security%2C%20Identity%20%26%20Compliance/KMS/09-cloudfront-kms-policies/#granting-encrypt-and-decrypt-permissions-to-cloudfront","title":"Granting encrypt and decrypt permissions to CloudFront.","text":"<pre><code>{\n\"Sid\": \"Allow users or roles to use KMS to CloudFront.\",\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"Service\": [\n\"cloudfront.amazonaws.com\"\n]\n},\n\"Action\": [\n\"kms:Decrypt\",\n\"kms:Encrypt\",\n\"kms:GenerateDataKey*\"\n],\n\"Resource\": \"*\",\n\"Condition\":{\n\"StringEquals\":{\n\"aws:SourceArn\": \"arn:aws:cloudfront::&lt;account id&gt;:distribution/&lt;cloudfront distribution id&gt;\"\n}\n}\n}\n</code></pre> <p>AWS Documentation</p>"},{"location":"Security%2C%20Identity%20%26%20Compliance/KMS/10-autoscaling-kms-policies/","title":"AutoScaling KMS Policies","text":""},{"location":"Security%2C%20Identity%20%26%20Compliance/KMS/10-autoscaling-kms-policies/#granting-encrypt-end-decrypt-permissions-to-autoscaling-service-role","title":"Granting encrypt end decrypt permissions to AutoScaling Service Role","text":"<pre><code>{\n\"Sid\": \"Allow service-linked role use of the customer managed key\",\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"AWS\": [\n\"arn:aws:iam::&lt;account id&gt;:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling\"\n]\n},\n\"Action\": [\n\"kms:Encrypt\",\n\"kms:Decrypt\",\n\"kms:ReEncrypt*\",\n\"kms:GenerateDataKey*\",\n\"kms:DescribeKey\"\n],\n\"Resource\": \"*\"\n},\n{\n\"Sid\": \"Allow attachment of persistent resources\",\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"AWS\": [\n\"arn:aws:iam::&lt;account id&gt;:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling\"\n]\n},\n\"Action\": [\n\"kms:CreateGrant\"\n],\n\"Resource\": \"*\",\n\"Condition\": {\n\"Bool\": {\n\"kms:GrantIsForAWSResource\": true\n}\n}\n}\n</code></pre>"},{"location":"Serverless/01-install-aws-sam-cli/","title":"Install AWS SAM CLI","text":"<pre><code># install docker\nsudo yum install -y docker\nsudo systemctl start docker\nsudo systemctl enable docker\nsudo usermod -a -G docker ec2-user\nbash\ndocker version\ndocker ps\n\n# install the aws sam cli\npip3 install aws-sam-cli\n</code></pre> <p>AWS Documentation</p>"},{"location":"Storage/EFS/01-efs-policies/","title":"EFS File System Policy Configuration","text":"<p>You can choose policy options below.</p> <ol> <li>Prevent root access by default*</li> <li>Enforce read-only access by default*</li> <li>Prevent anonymous access</li> <li>Enforce in-transit encryption for all clients</li> </ol>"},{"location":"Storage/EFS/01-efs-policies/#1-prevent-root-access-by-default","title":"(1) Prevent root access by default*","text":"<pre><code>{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"AWS\": \"*\"\n},\n\"Action\": [\n\"elasticfilesystem:ClientWrite\",\n\"elasticfilesystem:ClientMount\"\n],\n\"Condition\": {\n\"Bool\": {\n\"elasticfilesystem:AccessedViaMountTarget\": \"true\"\n}\n}\n}\n]\n}\n</code></pre>"},{"location":"Storage/EFS/01-efs-policies/#2-enforce-read-only-access-by-default","title":"(2) Enforce read-only access by default*","text":"<pre><code>{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"AWS\": \"*\"\n},\n\"Action\": [\n\"elasticfilesystem:ClientRootAccess\",\n\"elasticfilesystem:ClientMount\"\n],\n\"Condition\": {\n\"Bool\": {\n\"elasticfilesystem:AccessedViaMountTarget\": \"true\"\n}\n}\n}\n]\n}\n</code></pre>"},{"location":"Storage/EFS/01-efs-policies/#3-prevent-anonymous-access","title":"(3) Prevent anonymous access","text":"<pre><code>{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"AWS\": \"*\"\n},\n\"Action\": [\n\"elasticfilesystem:ClientRootAccess\",\n\"elasticfilesystem:ClientWrite\"\n],\n\"Condition\": {\n\"Bool\": {\n\"elasticfilesystem:AccessedViaMountTarget\": \"true\"\n}\n}\n}\n]\n}\n</code></pre>"},{"location":"Storage/EFS/01-efs-policies/#4-enforce-in-transit-encryption-for-all-clients","title":"(4) Enforce in-transit encryption for all clients","text":"<pre><code>{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"AWS\": \"*\"\n},\n\"Action\": [\n\"elasticfilesystem:ClientRootAccess\",\n\"elasticfilesystem:ClientWrite\",\n\"elasticfilesystem:ClientMount\"\n],\n\"Condition\": {\n\"Bool\": {\n\"elasticfilesystem:AccessedViaMountTarget\": \"true\"\n}\n}\n},\n{\n\"Effect\": \"Deny\",\n\"Principal\": {\n\"AWS\": \"*\"\n},\n\"Action\": \"*\",\n\"Condition\": {\n\"Bool\": {\n\"aws:SecureTransport\": \"false\"\n}\n}\n}\n]\n}\n</code></pre>"},{"location":"Storage/EFS/01-efs-policies/#1-2-prevent-root-access-and-enforce-read-only-access-by-default","title":"(1, 2) Prevent root access and enforce read-only access by default*","text":"<pre><code>{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"AWS\": \"*\"\n},\n\"Action\": [\n\"elasticfilesystem:ClientMount\"\n],\n\"Condition\": {\n\"Bool\": {\n\"elasticfilesystem:AccessedViaMountTarget\": \"true\"\n}\n}\n}\n]\n}\n</code></pre>"},{"location":"Storage/EFS/01-efs-policies/#2-3-enforce-read-only-access-by-default-and-prevent-anonymous-access","title":"(2, 3) Enforce read-only access by default* and prevent anonymous access","text":"<pre><code>{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"AWS\": \"*\"\n},\n\"Action\": [\n\"elasticfilesystem:ClientRootAccess\"\n],\n\"Condition\": {\n\"Bool\": {\n\"elasticfilesystem:AccessedViaMountTarget\": \"true\"\n}\n}\n}\n]\n}\n</code></pre>"},{"location":"Storage/EFS/01-efs-policies/#3-4-prevent-anonymous-access-and-ehforce-in-transit-encryption-for-all-clients","title":"(3, 4) Prevent anonymous access and ehforce in-transit encryption for all clients","text":"<pre><code>{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"AWS\": \"*\"\n},\n\"Action\": [\n\"elasticfilesystem:ClientRootAccess\",\n\"elasticfilesystem:ClientWrite\"\n],\n\"Condition\": {\n\"Bool\": {\n\"elasticfilesystem:AccessedViaMountTarget\": \"true\"\n}\n}\n},\n{\n\"Effect\": \"Deny\",\n\"Principal\": {\n\"AWS\": \"*\"\n},\n\"Action\": \"*\",\n\"Condition\": {\n\"Bool\": {\n\"aws:SecureTransport\": \"false\"\n}\n}\n}\n]\n}\n</code></pre>"},{"location":"Storage/EFS/01-efs-policies/#1-2-3-prevent-root-access-enforce-read-only-access-by-default-and-prevent-anonymous-access","title":"(1, 2, 3) Prevent root access, enforce read-only access by default* and prevent anonymous access","text":"<pre><code>{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"AWS\": \"*\"\n},\n\"Action\": \"\",\n\"Condition\": {\n\"Bool\": {\n\"elasticfilesystem:AccessedViaMountTarget\": \"true\"\n}\n}\n}\n]\n}\n</code></pre>"},{"location":"Storage/EFS/01-efs-policies/#1-2-4-prevent-root-access-enforce-read-only-access-by-default-and-enforce-in-transit-encryption-for-all-clients","title":"(1, 2, 4) Prevent root access, enforce read-only access by default* and enforce in-transit encryption for all clients","text":"<pre><code>{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"AWS\": \"*\"\n},\n\"Action\": [\n\"elasticfilesystem:ClientMount\"\n],\n\"Condition\": {\n\"Bool\": {\n\"elasticfilesystem:AccessedViaMountTarget\": \"true\"\n}\n}\n},\n{\n\"Effect\": \"Deny\",\n\"Principal\": {\n\"AWS\": \"*\"\n},\n\"Action\": \"*\",\n\"Condition\": {\n\"Bool\": {\n\"aws:SecureTransport\": \"false\"\n}\n}\n}\n]\n}\n</code></pre>"},{"location":"Storage/EFS/01-efs-policies/#1-3-4-prevent-root-access-by-default-prevent-anonymous-access-and-enforce-in-transit-encryption-for-all-clients","title":"(1, 3, 4) Prevent root access by default*, prevent anonymous access and enforce in-transit encryption for all clients","text":"<pre><code>{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"AWS\": \"*\"\n},\n\"Action\": [\n\"elasticfilesystem:ClientWrite\"\n],\n\"Condition\": {\n\"Bool\": {\n\"elasticfilesystem:AccessedViaMountTarget\": \"true\"\n}\n}\n},\n{\n\"Effect\": \"Deny\",\n\"Principal\": {\n\"AWS\": \"*\"\n},\n\"Action\": \"*\",\n\"Condition\": {\n\"Bool\": {\n\"aws:SecureTransport\": \"false\"\n}\n}\n}\n]\n}\n</code></pre>"},{"location":"Storage/EFS/01-efs-policies/#2-3-4-enforce-read-only-access-by-default-prevent-anonymous-access-and-enforce-in-transit-encryption-for-all-clients","title":"(2, 3, 4) Enforce read-only access by default*, prevent anonymous access and enforce in-transit encryption for all clients","text":"<pre><code>{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"AWS\": \"*\"\n},\n\"Action\": [\n\"elasticfilesystem:ClientRootAccess\"\n],\n\"Condition\": {\n\"Bool\": {\n\"elasticfilesystem:AccessedViaMountTarget\": \"true\"\n}\n}\n},\n{\n\"Effect\": \"Deny\",\n\"Principal\": {\n\"AWS\": \"*\"\n},\n\"Action\": \"*\",\n\"Condition\": {\n\"Bool\": {\n\"aws:SecureTransport\": \"false\"\n}\n}\n}\n]\n}\n</code></pre>"},{"location":"Storage/EFS/01-efs-policies/#1-2-3-4-prevent-root-access-by-default-enforce-read-only-access-by-default-prevent-anonymous-access-and-enforce-in-transit-encryption-for-all-clients","title":"(1, 2, 3, 4) Prevent root access by default, enforce read-only access by default, prevent anonymous access and enforce in-transit encryption for all clients","text":"<pre><code>{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Effect\": \"Allow\",\n\"Principal\": {\n\"AWS\": \"*\"\n},\n\"Action\": \"\",\n\"Condition\": {\n\"Bool\": {\n\"elasticfilesystem:AccessedViaMountTarget\": \"true\"\n}\n}\n},\n{\n\"Effect\": \"Deny\",\n\"Principal\": {\n\"AWS\": \"*\"\n},\n\"Action\": \"*\",\n\"Condition\": {\n\"Bool\": {\n\"aws:SecureTransport\": \"false\"\n}\n}\n}\n]\n}\n</code></pre>"},{"location":"Storage/EFS/01-efs-policies/#using-iam-to-control-file-system-data-access","title":"Using IAM to control file system data access","text":"<p>See AWS Documentation.</p>"},{"location":"Storage/EFS/02-mount-to-ec2/","title":"Mount EFS to EC2 instances","text":""},{"location":"Storage/EFS/02-mount-to-ec2/#using-amazon-efs-utils","title":"Using <code>amazon-efs-utils</code>","text":""},{"location":"Storage/EFS/02-mount-to-ec2/#install-amazon-efs-utils","title":"Install <code>amazon-efs-utils</code>","text":"<p>AWS Documentation</p> Amazon Linux 2Red HatSUSEUbuntuDebian <pre><code>sudo yum update -y\nsudo yum install -y amazon-efs-utils\n\nsudo pip3 install botocore\n</code></pre> <pre><code>sudo yum update -y\nsudo yum install -y git rpm-build make wget\n\ngit clone https://github.com/aws/efs-utils\ncd ./efs-utils\nsudo make rpm\nsudo yum -y install ./build/amazon-efs-utils*rpm\n\nif [[ \"$(python3 -V 2&gt;&amp;1)\" =~ ^(Python 3.6.*) ]]; then\nsudo wget https://bootstrap.pypa.io/pip/3.6/get-pip.py -O /tmp/get-pip.py\nelif [[ \"$(python3 -V 2&gt;&amp;1)\" =~ ^(Python 3.5.*) ]]; then\nsudo wget https://bootstrap.pypa.io/pip/3.5/get-pip.py -O /tmp/get-pip.py\nelif [[ \"$(python3 -V 2&gt;&amp;1)\" =~ ^(Python 3.4.*) ]]; then\nsudo wget https://bootstrap.pypa.io/pip/3.4/get-pip.py -O /tmp/get-pip.py\nelse\nsudo wget https://bootstrap.pypa.io/get-pip.py -O /tmp/get-pip.py\nfi\nsudo python3 /tmp/get-pip.py\nsudo pip3 install botocore\nsudo /usr/local/bin/pip3 install botocore\n</code></pre> <pre><code>sudo zypper refresh\nsudo zypper install -y git rpm-build make\n\ngit clone https://github.com/aws/efs-utils\ncd ./efs-utils\nmake rpm\nsudo zypper --no-gpg-checks install -y build/amazon-efs-utils*rpm\n\nif [[ \"$(python3 -V 2&gt;&amp;1)\" =~ ^(Python 3.6.*) ]]; then\nsudo wget https://bootstrap.pypa.io/pip/3.6/get-pip.py -O /tmp/get-pip.py\nelif [[ \"$(python3 -V 2&gt;&amp;1)\" =~ ^(Python 3.5.*) ]]; then\nsudo wget https://bootstrap.pypa.io/pip/3.5/get-pip.py -O /tmp/get-pip.py\nelif [[ \"$(python3 -V 2&gt;&amp;1)\" =~ ^(Python 3.4.*) ]]; then\nsudo wget https://bootstrap.pypa.io/pip/3.4/get-pip.py -O /tmp/get-pip.py\nelse\nsudo wget https://bootstrap.pypa.io/get-pip.py -O /tmp/get-pip.py\nfi\nsudo python3 /tmp/get-pip.py\nsudo pip3 install botocore\n</code></pre> <pre><code>sudo apt-get update -y\nsudo apt-get upgrade -y\nsudo apt-get install -y git binutils\n\ngit clone https://github.com/aws/efs-utils\ncd ./efs-utils\n./build-deb.sh\nsudo apt-get -y install ./build/amazon-efs-utils*deb\n\nif echo $(python3 -V 2&gt;&amp;1) | grep -e \"Python 3.6\"; then\nsudo wget https://bootstrap.pypa.io/pip/3.6/get-pip.py -O /tmp/get-pip.py\nelif echo $(python3 -V 2&gt;&amp;1) | grep -e \"Python 3.5\"; then\nsudo wget https://bootstrap.pypa.io/pip/3.5/get-pip.py -O /tmp/get-pip.py\nelif echo $(python3 -V 2&gt;&amp;1) | grep -e \"Python 3.4\"; then\nsudo wget https://bootstrap.pypa.io/pip/3.4/get-pip.py -O /tmp/get-pip.py\nelse\nsudo apt-get -y install python3-distutils\n    sudo wget https://bootstrap.pypa.io/get-pip.py -O /tmp/get-pip.py\nfi\nsudo python3 /tmp/get-pip.py\nsudo pip3 install botocore\nsudo /usr/local/bin/pip3 install --target /usr/lib/python3/dist-packages botocore\n</code></pre> <pre><code>sudo apt-get update -y\nsudo apt-get upgrade -y\nsudo apt-get install -y git binutils\n\ngit clone https://github.com/aws/efs-utils\ncd ./efs-utils\n./build-deb.sh\nsudo apt-get -y install ./build/amazon-efs-utils*deb\n\nif echo $(python3 -V 2&gt;&amp;1) | grep -e \"Python 3.6\"; then\nsudo wget https://bootstrap.pypa.io/pip/3.6/get-pip.py -O /tmp/get-pip.py\nelif echo $(python3 -V 2&gt;&amp;1) | grep -e \"Python 3.5\"; then\nsudo wget https://bootstrap.pypa.io/pip/3.5/get-pip.py -O /tmp/get-pip.py\nelif echo $(python3 -V 2&gt;&amp;1) | grep -e \"Python 3.4\"; then\nsudo wget https://bootstrap.pypa.io/pip/3.4/get-pip.py -O /tmp/get-pip.py\nelse\nsudo apt-get -y install python3-distutils\n    sudo wget https://bootstrap.pypa.io/get-pip.py -O /tmp/get-pip.py\nfi\nsudo python3 /tmp/get-pip.py\nsudo pip3 install botocore\n</code></pre>"},{"location":"Storage/EFS/02-mount-to-ec2/#mount-on-ec2","title":"Mount on EC2","text":"<p>AWS Documentation(Mount) AWS Documentation(Re-mount)</p> <pre><code>FILE_SYSTEM_ID= # EFS File System ID\nsudo mkdir /mnt/efs\nsudo mount -t efs $FILE_SYSTEM_ID /mnt/efs/\n\necho \"$FILE_SYSTEM_ID:/ /mnt/efs efs _netdev,noresvport 0 0\" | sudo tee -a /etc/fstab\nsudo mount -fav\n</code></pre>"},{"location":"Storage/EFS/02-mount-to-ec2/#using-nfs-utils","title":"Using <code>nfs-utils</code>","text":""},{"location":"Storage/EFS/02-mount-to-ec2/#install-nfs-utils","title":"Install <code>nfs-utils</code>","text":"Amazon Linux 2Red HatSUSEUbuntuDebian <pre><code>sudo yum update -y\nsudo yum install -y nfs-utils\n</code></pre> <pre><code>sudo yum update -y\nsudo yum install -y nfs-utils\n</code></pre> <pre><code>sudo zypper refresh\nsudo zypper install -y nfs-utils\n</code></pre> <pre><code>sudo apt-get update -y\nsudo apt-get upgrade -y\nsudo apt-get install -y nfs-common cifs-utils\n</code></pre> <pre><code>sudo apt-get update -y\nsudo apt-get upgrade -y\nsudo apt-get install -y nfs-common cifs-utils\n</code></pre>"},{"location":"Storage/EFS/02-mount-to-ec2/#mount-on-ec2_1","title":"Mount on EC2","text":"<pre><code>FILE_SYSTEM_DNS= # EFS File System DNS\nsudo mkdir /mnt/efs\nsudo mount -t nfs -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport $FILE_SYSTEM_DNS:/ /mnt/efs\n\necho \"$FILE_SYSTEM_DNS:/ /mnt/efs nfs4 nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport,_netdev 0 0\" | sudo tee -a /etc/fstab\nsudo mount -fav\n</code></pre>"},{"location":"Storage/s3/01-create-a-bucket/","title":"Create a S3 Bucket","text":"Linux Windows <pre><code>STACK_NAME=\"&lt;stack name&gt;\"\nPROJECT_NAME=\"&lt;project name&gt;\"\nREGION=\"&lt;region code&gt;\"\n# Bucket Configuration - General\nBucketName=\"\"                           # [REQUIRED] The name of S3 bucket.\n# Bucket Configuration - Encryption\nBucketEncryptionAlgorithm=\"aws:kms\"     # `aws:kms`(default) or `AES256` | [REQUIRED] The type of S3 bucket server-side encryption.\nBucketEncryptionKmsKeyId=\"\"             # [optional] The KMS key id or arn for S3 bucket server-side encryption.\n# Bucket Configuration - Logging\nLoggingDestinationBucketName=\"\"         # [optional] The log prefix of S3 bucket logging.\nLoggingDestinationPrefix=\"\"             # [optional] The log prefix of S3 bucket logging.\ncurl -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/s3/bucket.yaml\n\naws cloudformation deploy \\\n--template-file ./bucket.yaml \\\n--stack-name $STACK_NAME \\\n--parameter-overrides \\\nProjectName=$ProjectName \\\nBucketName=$BucketName \\\nBucketEncryptionAlgorithm=$BucketEncryptionAlgorithm \\\nBucketEncryptionKmsKeyId=$BucketEncryptionKmsKeyId \\\nLoggingDestinationBucketName=$LoggingDestinationBucketName \\\nLoggingDestinationPrefix=$LoggingDestinationPrefix \\\n--disable-rollback \\\n--tags project=$PROJECT_NAME \\\n--region $REGION\n</code></pre> <pre><code>$STACK_NAME=\"&lt;stack name&gt;\"\n$PROJECT_NAME=\"&lt;project name&gt;\"\n$REGION=\"&lt;region code&gt;\"\n# Bucket Configuration - General\n$BucketName=\"\"                          # [REQUIRED] The name of S3 bucket.\n# Bucket Configuration - Encryption\n$BucketEncryptionAlgorithm=\"aws:kms\"    # `aws:kms`(default) or `AES256` | [REQUIRED] The type of S3 bucket server-side encryption.\n$BucketEncryptionKmsKeyId=\"\"            # [optional] The KMS key id or arn for S3 bucket server-side encryption.\n# Bucket Configuration - Logging\n$LoggingDestinationBucketName=\"\"        # [optional] The log prefix of S3 bucket logging.\n$LoggingDestinationPrefix=\"\"            # [optional] The log prefix of S3 bucket logging.\ncurl.exe -LO https://raw.githubusercontent.com/marcus16-kang/cloudformation-templates/main/s3/bucket.yaml\naws cloudformation deploy `\n--template-file ./bucket.yaml `\n--stack-name $STACK_NAME `\n--parameter-overrides `\nProjectName=$ProjectName `\nBucketName=$BucketName `\nBucketEncryptionAlgorithm=$BucketEncryptionAlgorithm `\nBucketEncryptionKmsKeyId=$BucketEncryptionKmsKeyId `\nLoggingDestinationBucketName=$LoggingDestinationBucketName `\nLoggingDestinationPrefix=$LoggingDestinationPrefix `\n--disable-rollback `\n--tags project=$PROJECT_NAME `\n--region $REGION\n</code></pre>"}]}